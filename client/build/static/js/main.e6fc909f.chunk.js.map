{"version":3,"sources":["contexts/SettingsContext.jsx","contexts/AuthenticationContext.jsx","contexts/CartContext.jsx","contexts/ThemeContext.jsx","components/theme/ToggleTheme.jsx","components/generic/navbar.jsx","components/generic/main.jsx","components/generic/Footer.jsx","components/generic/layout.jsx","components/generic/CustomAlert.jsx","components/user/ProfileForm.jsx","pages/Profile.jsx","test/Test.jsx","test/TestPage.jsx","components/generic/title.jsx","components/providers/provider.jsx","components/generic/infobar.jsx","contexts/LocationContext.jsx","components/providers/providers.jsx","components/location/LocationDropDown.jsx","components/location/SelectLocation.jsx","components/Home.jsx","pages/HomePage.jsx","components/user/loginForm.jsx","pages/UserLogin.jsx","components/generic/SearchBar.jsx","components/generic/CustomTable.jsx","components/employees/EmployeeDropDown.jsx","components/generic/CustomModalAlert.jsx","components/generic/CustomModal.jsx","components/generic/DeleteModal.jsx","components/orders/Order.jsx","pages/OrderPage.jsx","components/areas/RemoveArea.jsx","components/generic/CustomCard.jsx","components/areas/ServiceAreas.jsx","components/areas/AddArea.jsx","components/areas/SelectArea.jsx","components/areas/AvailableAreas.jsx","components/areas/Areas.jsx","pages/AreasPage.jsx","components/user/History.jsx","pages/HistoryPage.jsx","components/generic/counter.jsx","components/shoppingCart/cart.jsx","pages/ShoppingCart.jsx","components/shoppingCart/checkout.jsx","pages/CheckoutPage.jsx","components/generic/NotFound.jsx","pages/NotFoundPage.jsx","components/statistics/Charts.jsx","components/statistics/Statistics.jsx","pages/StatisticsPage.jsx","components/products/UpdateProductDetails.jsx","components/services/service.jsx","components/generic/CustomPagination.jsx","components/shoppingCart/FloatingCart.jsx","components/services/PromotionalCarousel.jsx","components/services/services.jsx","pages/ServiceProviders.jsx","components/user/userRegistrationForm.jsx","pages/UserRegistration.jsx","components/orders/OrderDetails.jsx","pages/OrderDetailsPage.jsx","components/employees/UpdateEmployeeDetails.jsx","components/employees/AddEmployee.jsx","components/employees/EmployeeList.jsx","pages/EmployeeListPage.jsx","components/orders/OrderSuccess.jsx","pages/OrderSuccessPage.jsx","components/products/AddProduct.jsx","contexts/ProductContext.jsx","components/products/SelectCategory.jsx","components/products/AvailableProducts.jsx","pages/AvailableProductPage.jsx","App.js","index.js"],"names":["SettingsContext","createContext","SettingsContextProvider","props","useState","universalFlag","setUniversalFlag","isAnimated","setIsAnimated","Provider","value","changeIsAnimated","updateUniversalFlag","children","AuthenticationContext","AuthenticationContextProvider","history","useHistory","isAuthenticated","setIsAuthenticated","useEffect","currentAuth","localStorage","getItem","handleAuthentication","setItem","handleLogOut","a","API_URL","fetch","method","ok","push","CartContext","CartContextProvider","items","setItems","totalPrice","setTotalPrice","subTotalPrice","setSubTotalPrice","useContext","json","sessionStorage","local","JSON","parse","stringify","tmpPrice","map","item","count","price","Math","floor","addItem","discount","clearItems","handleRemove","id","filter","length","handleAddOne","newItem","handleMinusOne","postCountUpdate","ThemeContext","ThemeContextProvider","isLightTheme","setIsLightTheme","localTheme","theme","light","syntax","bg","link","ui","border","custom_text","type","dropdown_text","borderLeft","currency_text","success","secondary","mainColor","mainBG","dangerTextColor","btnTypeClass","lineChartbg","dark","toggleTheme","ToggleTheme","onClick","className","NightsStay","WbSunny","MainNav","username","setUsername","cartCount","setCartCount","window","scrollY","isShadow","setIsShadow","isServiceProvider","useWindowScroll","event","variant","navLinkStyle","paddingLeft","paddingRight","cursor","CustomToggle","React","forwardRef","ref","style","e","preventDefault","ArrowDropDown","Navbar","expand","sticky","backgroundColor","Brand","as","NavLink","to","fontFamily","fontSize","Toggle","aria-controls","Collapse","Nav","Link","AccountCircle","Dropdown","alignRight","Equalizer","Menu","width","overflowY","Item","icon","Main","background","Container","Footer","bottomBorder","height","display","target","rel","href","role","color","Date","getFullYear","Layout","scrollTo","CustomAlert","noCenter","Alert","alertClass","status","ProfileForm","user","setUser","flag","setFlag","canEdit","setCanEdit","undefined","setStatus","setVariant","form","useRef","object","userid","headers","body","response","data","detail","loadData","handleEdit","handleSubmit","formData","FormData","current","forEach","key","charAt","toUpperCase","slice","updateFlag","message","maxWidth","onSubmit","Row","Col","md","sm","name","readOnly","defaultValue","userphone","company_name","delivery_charge","description","nid","service_type","trade_license","address","Button","Profile","useStyles","makeStyles","grow","flexGrow","menuButton","marginRight","spacing","title","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","Test","classes","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","mobileMenuId","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-haspopup","AppBar","Toolbar","edge","Typography","noWrap","InputBase","placeholder","root","input","inputProps","TestPage","Title","fontWeight","show","setShow","provider","setProvider","servideID","Service","service_id","Accept","toString","Card","src","random","onError","onerror","alt","phone_1","phone_2","disabled","Infobar","Body","LocationContext","LocationContextProvider","area","thana","district","location","setLocation","localLocation","changeLocation","selectedLocation","bodyData","Providers","providers","setProviders","apiData","services","service","console","log","emoji","uuidv4","LocationDropDown","handleSelect","size","customClass","values","eventKey","onSelect","SelectLocation","areas","setAreas","thanas","setThanas","districts","setDistricts","setSelectedLocation","details","Home","HomePage","withRouter","setIsServiceProvider","showVerificationArea","setShowVerificationArea","phone","required","UserLogin","SearchBar","onChange","handleChange","borderBottom","searchBy","CustomTable","Table","hover","striped","responsive","ths","th","scope","datas","index","PreActionComponents","PreActionComponent","component","allowedEntry","Object","keys","includes","reduce","obj","i","tdsClassName","ActionComponents","ActionComponent","EmployeeDropDown","setTitle","subElementKey","tmp","subElementValue","CustomModalAlert","redirect","handleClose","useCallback","setTimeout","Modal","centered","onHide","animation","Spinner","handleCloseAction","noAction","edit","modalButtonStyle","modalButtonClass","modalClass","modalTitle","modalBody","handleAction","actionVariant","actionButtonBody","deleteTitle","deleteText","deleteIcon","Order","setValue","orders","setOrders","employes","setEmployes","searchData","setSearchData","tabs","assignedOrders","setAssignedOrders","statusVariant","setStatusVariant","selectedEmployeeID","setSelectedEmployeeID","selectedEmployeeName","setSelectedEmployeeName","search_data","employee","handleCancel","order_id","TabPanel","other","hidden","aria-labelledby","Box","tableData","elevation","Tabs","newValue","TabIndicatorProps","tab","Tab","label","textTransform","order","payment","Moment","time","format","handleEmployeeSelect","employee_id","orderID","handleOrderComplete","OrderPage","RemoveArea","area_id","reload","area_name","CustomCard","cardBodyData","noValueInfo","ServiceAreas","serviceAreas","setServiceAreas","Areas","serviceArea","AddArea","SelectArea","AvailableAreas","availableAreas","setAvailableAreas","availableArea","History","activeHistories","setActiveHistories","deliveredHistories","setDeliveredHistories","cancelledHistories","setCancelledHistories","activeThs","cancelledThs","deliveredThs","activeAllowedEntry","cancelledAllowedEntry","deliveredAllowedEntry","reason","Counter","setCount","Icon","onBlur","onKeyDown","Cart","productName","qty","unit","ShoppingCart","addressess","setAddressess","newAddress","setNewAddress","customerId","handleCleanUP","opacity","noValidate","product_id","currentTime","convertTime","moment","tz","today","date","getMonth","getDate","getHours","getMinutes","customer_add_id","htmlFor","borderColor","house_no","road_no","further_description","defaultChecked","CheckoutPage","goBack","NotFoundPage","Charts","pointBorderColor","ticksBackdropColor","fontColor","gridColor","barChartData","setBarChartData","lineChartData","setLineChartData","polarChartData","setPolarChartData","end_date","start_date","Chart","defaults","global","defaultFontColor","defaultFontFamily","helpers","each","instances","instance","chart","update","chartsData","dataLine","labels","options","legend","plugins","datalabels","scales","xAxes","ticks","source","scaleLabel","labelString","gridLines","yAxes","datasets","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","dataBar","maintainAspectRatio","layout","left","right","top","bottom","align","anchor","borderWidth","dataPolar","pieceLabel","showZero","render","scale","backdropColor","borderAlign","hoverBackgroundColor","lg","extraData","maxHeight","statistics","setStatistics","add","subtract","toLocaleDateString","setDate","start","end","isBefore","duration","diff","total_orders","delivered","income","StatisticsPage","UpdateProductDetails","product","product_name","autoFocus","serviceInfo","vat","results","verticalAlign","CustomPagination","paginationActiveLinkClass","itemClass","linkClassFirst","linkClassPrev","linkClassNext","linkClassLast","activeLinkClass","linkClass","itemsCountPerPage","pageRangeDisplayed","activePage","handlePageClick","totalItemsCount","totalPage","FloatingCart","zIndex","PromotionalCarousel","promotionalSlides","Carousel","promotionalSlide","Services","params","useParams","sName","setSName","setServices","setTotalPage","setActivePage","page_number","products","ServiceProviders","UserRegistration","OrderDetails","orderDetailsState","setOrderDetailsState","product_price_per_unit","UpdateEmployeeDetails","employee_name","phone_number","AddEmployee","EmployeeList","employees","setEmployees","employeeID","EmployeeListPage","OrderSuccess","orderDetails","setOrderDetails","total","provider_name","OrderSuccessPage","AddProduct","availableProduct","base_price","ProductContext","ProductContextProvider","category","setCategory","localCategory","changeCategory","selectedCategory","SelectCategory","categories","setCategories","setSelectedCategory","AvailableProducts","availableProducts","setAvailableProducts","library","far","fas","fab","App","basename","path","exact","OrderDetailsPage","AvailableProductPage","AreasPage","HistoryPage","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6fc909f.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const SettingsContext = createContext();\n\nconst SettingsContextProvider = (props) => {\n    const [universalFlag, setUniversalFlag] = useState(false);\n    const [isAnimated, setIsAnimated] = useState(false);\n\n    const changeIsAnimated = () => setIsAnimated(!isAnimated);\n    const updateUniversalFlag = () => setUniversalFlag(!universalFlag);\n\n    return (\n        <SettingsContext.Provider\n            value={{\n                isAnimated,\n                changeIsAnimated,\n                universalFlag,\n                updateUniversalFlag,\n            }}\n        >\n            {props.children}\n        </SettingsContext.Provider>\n    );\n};\n\nexport default SettingsContextProvider;\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const AuthenticationContext = createContext();\n\nconst AuthenticationContextProvider = (props) => {\n    const history = useHistory();\n\n    const [isAuthenticated, setIsAuthenticated] = useState(\"\");\n\n    useEffect(() => {\n        const currentAuth = localStorage.getItem(\"isAuthenticated\");\n\n        if (currentAuth !== isAuthenticated) setIsAuthenticated(currentAuth);\n    }, [isAuthenticated]);\n\n    const handleAuthentication = (isAuthenticated) => {\n        setIsAuthenticated(isAuthenticated);\n        localStorage.setItem(\"isAuthenticated\", isAuthenticated);\n    };\n\n    const handleLogOut = async () => {\n        const API_URL =\n            localStorage.getItem(\"isServiceProvider\") === \"true\"\n                ? \"/servicelogout/\"\n                : \"/logout/\";\n\n        const response = await fetch(API_URL, {\n            method: \"GET\",\n        });\n\n        if (response.ok) {\n            handleAuthentication(\"\");\n            localStorage.setItem(\"userID\", \"\");\n            localStorage.setItem(\"username\", \"\");\n            localStorage.setItem(\"isServiceProvider\",\"\");\n            localStorage.setItem(\"phone_number\", \"\");\n            // window.location.replace(\"/login\");\n            history.push(\"/login\")\n        }\n    };\n\n    return (\n        <AuthenticationContext.Provider\n            value={{ isAuthenticated, handleAuthentication, handleLogOut }}\n        >\n            {props.children}\n        </AuthenticationContext.Provider>\n    );\n};\n\nexport default AuthenticationContextProvider;\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\n\nimport { SettingsContext } from \"./SettingsContext\";\n\nexport const CartContext = createContext();\n\nconst CartContextProvider = (props) => {\n    const [items, setItems] = useState([]);\n    const [totalPrice, setTotalPrice] = useState(0);\n    const [subTotalPrice, setSubTotalPrice] = useState(0);\n    const discount = 8;\n\n    const { updateUniversalFlag } = useContext(SettingsContext);\n\n    // componentDidMount\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"items\");\n        const local = JSON.parse(json);\n\n        if (local) setItems(local);\n    }, []);\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"items\");\n        const local = JSON.parse(json);\n\n        if (local !== items)\n            sessionStorage.setItem(\"items\", JSON.stringify(items));\n    }, [items]);\n\n    useEffect(() => {\n        let tmpPrice = 0;\n        items.map((item) => (tmpPrice += item.count * item.price));\n        setSubTotalPrice(tmpPrice);\n        tmpPrice = Math.floor(tmpPrice - tmpPrice * (discount / 100));\n        setTotalPrice(tmpPrice);\n    }, [items]);\n\n    const addItem = (item) => {\n        setItems([...items, item]);\n        updateUniversalFlag();\n    };\n\n    const handleAddOne = (id) => {\n        let newItem = items.map((item) => {\n            if (item.id === id) {\n                item.count++;\n                return item;\n            }\n            return item;\n        });\n        setItems([...newItem]);\n    };\n\n    const handleMinusOne = (id) => {\n        let newItem = items.map((item) => {\n            if (item.id === id) {\n                item.count > 1 ? item.count-- : (item.count = 1);\n                return item;\n            }\n            return item;\n        });\n\n        setItems([...newItem]);\n    };\n\n    const postCountUpdate = (id, count) => {\n        let newItem = items.map((item) => {\n            if (item.id === id) {\n                item.count = count;\n                return item;\n            }\n            return item;\n        });\n        setItems([...newItem]);\n    };\n\n    const handleRemove = (id) => {\n        setItems(items.filter((item) => item.id !== id));\n        items.length === 1 && sessionStorage.setItem(\"service_id\", \"\");\n        updateUniversalFlag();\n    };\n\n    const clearItems = () => {\n        setItems([]);\n        sessionStorage.setItem(\"items\", \"[]\");\n    };\n\n    return (\n        <CartContext.Provider\n            value={{\n                items,\n                addItem,\n                discount,\n                clearItems,\n                totalPrice,\n                handleRemove,\n                handleAddOne,\n                subTotalPrice,\n                setTotalPrice,\n                handleMinusOne,\n                postCountUpdate,\n            }}\n        >\n            {props.children}\n        </CartContext.Provider>\n    );\n};\n\nexport default CartContextProvider;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const ThemeContext = createContext();\n\nconst ThemeContextProvider = (props) => {\n  const [isLightTheme, setIsLightTheme] = useState(true);\n\n  // componentDidMount\n  useEffect(() => {\n    const json = sessionStorage.getItem(\"theme\");\n    const localTheme = JSON.parse(json);\n\n    if (localTheme != null) setIsLightTheme(localTheme);\n  }, []);\n\n  // componentDidUpdate\n  useEffect(() => {\n    const json = sessionStorage.getItem(\"theme\");\n    const localTheme = JSON.parse(json);\n\n    if (localTheme !== isLightTheme)\n      sessionStorage.setItem(\"theme\", JSON.stringify(isLightTheme));\n  }, [isLightTheme]);\n\n  const theme = {\n    light: {\n      syntax:         \"\",\n      bg:             \"#ffffff\",\n      link:           \" link\",\n      ui:             \" bg-light\",\n      border:         \" custom-border\",\n      custom_text:    \" text-main\",\n      type:           \"main\",\n      dropdown_text:  \" dropdown-text\",\n      borderLeft:     \" #eee\",\n      currency_text:  \" text-success-light\",\n      success:        \"success-light\",\n      secondary:      \"secondary\",\n      // mainColor:      \"#2980b9\",\n      mainColor:      \"#5e60ce\",\n      mainBG:         \" bg-main-bg\",\n      dangerTextColor:\" text-danger\",\n      btnTypeClass:   \" btn-main\",\n      lineChartbg:    \"rgba(41, 127, 185, 0.15)\",\n    },\n    dark: {\n      syntax:         \" text-white\",\n      bg:             \"#20222b\",\n      link:           \" link-dark\",\n      ui:             \" bg-dark\",\n      border:         \" custom-border-dark\",\n      custom_text:    \" text-main-dark\",\n      type:           \"main-dark\",\n      dropdown_text:  \" dropdown-text-dark\",\n      borderLeft:     \" #cecece1f\",\n      currency_text:  \" text-success-dark\",\n      success:        \"success-dark\",\n      secondary:      \"secondary-dark\",\n      mainColor:      \"#feca57\",\n      mainBG:         \" bg-main-bg-dark\",\n      dangerTextColor:\" text-remove\",\n      btnTypeClass:   \" btn-main-dark\",\n      // lineChartbg:    \"rgba(254, 201, 87, 0.2)\",\n      lineChartbg:    \"rgba(239, 108, 0, 0.15)\",\n    },\n  };\n\n  const toggleTheme = () => {\n    setIsLightTheme(!isLightTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isLightTheme, theme, toggleTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { WbSunny, NightsStay } from \"@material-ui/icons\";\n\nconst ToggleTheme = () => {\n    const { toggleTheme } = useContext(ThemeContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    return (\n        <div onClick={toggleTheme} className={\"font-weight-bold\" + custom_text}>\n            {isLightTheme ? (\n                <>\n                    <NightsStay className=\"mb-1\" />\n                    <span className=\"ml-2\">Dark Mode</span>\n                </>\n            ) : (\n                <>\n                    <WbSunny className=\"mb-1\" />\n                    <span className=\"ml-2\">Light Mode</span>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default ToggleTheme;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Navbar, Nav, Dropdown } from \"react-bootstrap\";\nimport {\n    History,\n    Equalizer,\n    ShoppingCart,\n    AccountCircle,\n    ArrowDropDown,\n} from \"@material-ui/icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useWindowScroll } from \"beautiful-react-hooks\";\n\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\n\nimport ToggleTheme from \"../theme/ToggleTheme\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst MainNav = (props) => {\n    const [username, setUsername] = useState(\"\");\n    const [cartCount, setCartCount] = useState(0);\n    const [isShadow, setIsShadow] = useState(window.scrollY > 20);\n    const [isAuthenticated] = useState(localStorage.getItem(\"isAuthenticated\"));\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    useWindowScroll((event) => {\n        setIsShadow(window.scrollY > 20);\n    });\n\n    const { items } = useContext(CartContext);\n    const { universalFlag } = useContext(SettingsContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const dropdown_text = isLightTheme\n        ? theme.light.dropdown_text\n        : theme.dark.dropdown_text;\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n    const variant = isLightTheme ? \"light\" : \"dark\";\n    const borderLeft = isLightTheme\n        ? theme.light.borderLeft\n        : theme.dark.borderLeft;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const navLinkStyle = {\n        paddingLeft: 15,\n        paddingRight: 15,\n        cursor: \"pointer\",\n        // fontWeight: \"600\",\n        borderLeft: \"1px solid\" + borderLeft,\n    };\n\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <div\n            ref={ref}\n            style={navLinkStyle}\n            onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n            }}\n            className={\"h-100 pt-2\" + custom_text}\n        >\n            {children}\n            <ArrowDropDown className=\"mb-1\" />\n        </div>\n    ));\n\n    useEffect(() => {\n        setUsername(localStorage.getItem(\"username\"));\n        setCartCount(items.length);\n    }, [universalFlag, items]);\n\n    return (\n        <Navbar\n            expand=\"lg\"\n            sticky=\"top\"\n            variant={variant}\n            style={{ backgroundColor: bg }}\n            className={isShadow ? \"shadow\" : \"\"}\n        >\n            <Navbar.Brand\n                as={NavLink}\n                className={custom_text}\n                to={isServiceProvider ? \"/orders\" : \"/\"}\n                style={{ fontFamily: \"MuseoModerno\", fontSize: \"1.4rem\" }}\n            >\n                ProjectX\n                <sup>&alpha;</sup>\n            </Navbar.Brand>\n\n            <Navbar.Toggle aria-controls=\"main-nav\" />\n\n            <Navbar.Collapse id=\"main-nav\">\n                <Nav className=\"ml-auto\">\n                    <Nav.Link\n                        as={NavLink}\n                        style={navLinkStyle}\n                        className={\"font-weight-bold\" + custom_text}\n                        to={isAuthenticated ? \"/profile\" : \"/login\"}\n                    >\n                        <AccountCircle className=\"mb-1\" />\n                        <span className=\"ml-2\">\n                            {username ? username : \"Login\"}\n                        </span>\n                    </Nav.Link>\n\n                    <Nav.Link\n                        as={NavLink}\n                        to={\"/history\"}\n                        style={navLinkStyle}\n                        className={\"font-weight-bold\" + custom_text}\n                    >\n                        <History className=\"mb-1\" />\n                        <span className=\"ml-2\">History</span>\n                    </Nav.Link>\n\n                    <Nav.Link style={navLinkStyle}>\n                        <ToggleTheme />\n                    </Nav.Link>\n\n                    {isServiceProvider ? (\n                        <Dropdown alignRight={true}>\n                            <Dropdown.Toggle as={CustomToggle}>\n                                <Equalizer className=\"mb-1\" />\n                                <span className=\"font-weight-bold ml-2\">\n                                    Dashboard\n                                </span>\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu\n                                // className={ui + border}\n                                className={ui}\n                                style={{ width: \"15rem\", overflowY: \"hidden\" }}\n                            >\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/orders\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"tasks\"]}\n                                    />\n                                    Orders\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/statistics\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"chart-line\"]}\n                                    />\n                                    Statistics\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    variant={type}\n                                    to={`/service/provider/${localStorage.getItem(\n                                        \"userID\"\n                                    )}`}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"boxes\"]}\n                                    />\n                                    Inventory\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    variant={type}\n                                    to=\"/add/product\"\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"plus-circle\"]}\n                                    />\n                                    Add Products\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/areas\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"map-marked-alt\"]}\n                                    />\n                                    Manage Areas\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/employee\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"users-cog\"]}\n                                    />\n                                    Employee Details\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    ) : (\n                        <Nav.Link\n                            to=\"/cart\"\n                            as={NavLink}\n                            style={navLinkStyle}\n                            className={custom_text}\n                        >\n                            <ShoppingCart className=\"mb-1\" />\n                            <span className=\"ml-2\">Cart {cartCount}</span>\n                        </Nav.Link>\n                    )}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nexport default MainNav;\n","import React, { useContext } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Main = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n\n    return (\n        <div className=\"vertical-center\" style={{ background: bg }}>\n            <Container className=\"mt-5\">{props.children}</Container>\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Footer = () => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const bottomBorder = {\n        width: \"60px\",\n        height: \"2px\",\n        display: \"inline-block\",\n        backgroundColor: mainColor,\n    };\n\n    return (\n        <footer style={{ backgroundColor: bg }} className={\"pt-5\" + syntax}>\n            <div className=\"container p-4\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 mb-4 mb-md-0\">\n                        <h5>About</h5>\n                        <hr style={bottomBorder} className=\"mb-3 mt-n1\" />\n\n                        <p className={\"text-justify\" + link}>\n                            Project X is founded with a vision to provide every\n                            customer with a choice; The choice of buying\n                            organic, authentic and cost effective products with\n                            minimum friction. Project X is founded in 2020 by\n                            a few students at{\" \"}\n                            <a\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                className={custom_text}\n                                href=\"https://www.sust.edu/\"\n                            >\n                                SUST\n                            </a>\n                            . The local market place will be only finger-tips\n                            away for any customer in possession of a\n                            smartphone/computer and an internet connection. They\n                            will be able to purchase everything; from a\n                            safety-pin to car from our website. For service\n                            providers they can supervise their business at a\n                            glace from the website.\n                        </p>\n                    </div>\n\n                    {/* <div className=\"col-lg-3 col-6 mb-4 mb-md-0 text-lg-right\">\n                        <h5>Quick Links</h5>\n                        <hr style={bottomBorder} className=\"mb-3 mt-n1\" />\n\n                        <div className={link}>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 1\n                                </a>\n                            </p>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 2\n                                </a>\n                            </p>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 3\n                                </a>\n                            </p>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 4\n                                </a>\n                            </p>\n                        </div>\n                    </div> */}\n\n                    <div className=\"col-md-4 mb-4 mb-md-0 text-right\">\n                        <h5>Contacts</h5>\n                        <hr style={bottomBorder} className=\"mb-3 mt-n1\" />\n\n                        <div className={link}>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"phone\"]}\n                                />\n                                01886298142\n                            </p>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"phone\"]}\n                                />\n                                01534771222\n                            </p>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"envelope\"]}\n                                />\n                                project_x@gmail.com\n                            </p>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"home\"]}\n                                />\n                                Akhalia, Varsity gate, Sylhet\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                {localStorage.getItem(\"isAuthenticated\") !== \"Yes\" && (\n                    <div className={\"text-center\" + link}>\n                        Register for free{\" \"}\n                        <Link to=\"/registration\" className={custom_text}>\n                            Sign up\n                        </Link>\n                    </div>\n                )}\n\n                <section className=\"mt-4 text-center\">\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mx-4\"\n                        style={{ color: \"#3b5998\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"facebook-f\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#55acee\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#dd4b39\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"google\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#ac2bac\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"instagram\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#0082ca\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"linkedin-in\"]} />\n                    </a>\n                </section>\n            </div>\n\n            <div\n                className={\"text-center p-3\" + link}\n                // style={{ backgroundColor: \"rgba(0, 0, 0, 0.2)\" }}\n            >\n                © {new Date().getFullYear()} Copyright:{\" \"}\n                <a className={custom_text} href=\"#!\">\n                    ProjectX | All rights reserved\n                </a>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport MainNav from \"./navbar\";\nimport ThemeContextProvider from \"../../contexts/ThemeContext\";\nimport Main from \"./main\";\nimport Footer from \"./Footer\";\n\nconst Layout = (props) => {\n    return (\n        <ThemeContextProvider>\n            <MainNav />\n            <Main>\n                {window.scrollTo(0, 0)}\n                {props.children}\n            </Main>\n            <Footer />\n        </ThemeContextProvider>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst CustomAlert = (props) => {\n    return (\n        <div className={props.noCenter ? \"\" : \"text-center\"}>\n            <Alert\n                variant={props.variant ? props.variant : \"danger\"}\n                className={\n                    props.alertClass ? `ccard ${props.alertClass}` : \"ccard\"\n                }\n            >\n                {props.status}\n            </Alert>\n        </div>\n    );\n};\n\nexport default CustomAlert;\n","import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { Button, Row } from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\nimport CustomAlert from \"../generic/CustomAlert\";\nimport { AuthenticationContext } from \"../../contexts/AuthenticationContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\n\nconst ProfileForm = () => {\n    const [user, setUser] = useState({});\n    const [flag, setFlag] = useState(false);\n    const [canEdit, setCanEdit] = useState(false);\n    const [status, setStatus] = useState(undefined);\n    const [variant, setVariant] = useState(\"danger\");\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    const form = useRef(null);\n\n    const { handleLogOut } = useContext(AuthenticationContext);\n    const { updateUniversalFlag } = useContext(SettingsContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    useEffect(() => {\n        const loadData = async () => {\n            const API_URL = isServiceProvider\n                ? \"/getProfile/\"\n                : \"/customerprofile/\";\n\n            const object = {\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            // if (response.status === 401) handleLogOut();\n\n            const data = await response.json();\n\n            if (!response.ok) setStatus(data.detail);\n            else setUser({ ...data });\n        };\n\n        loadData();\n    }, [isServiceProvider, flag]);\n\n    const handleEdit = () => {\n        setStatus(\"\");\n        setCanEdit(!canEdit);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = isServiceProvider\n            ? \"/updateProfile/\"\n            : \"/customerUpdateProfile/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n            object[\"userid\"] = localStorage.getItem(\"userID\");\n            object[\"username\"] =\n                object[\"username\"].charAt(0).toUpperCase() +\n                object[\"username\"].slice(1);\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n                else {\n                    setVariant(\"success\");\n                    setStatus(\"Profile updated successfully\");\n                    localStorage.setItem(\"username\", object.username);\n                    updateFlag();\n                    updateUniversalFlag();\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n        setCanEdit(!canEdit);\n    };\n\n    const updateFlag = () => setFlag(!flag);\n\n    return (\n        <div\n            // className={\"card mx-auto\" + ui + syntax + border}\n            className={\"card mx-auto\" + ui + syntax}\n            style={{ maxWidth: \"38rem\" }}\n        >\n            <article className=\"card-body\">\n                <h3 className=\"text-center mb-4\">\n                    {user.username && user.username + \"'s\"} Profile\n                </h3>\n                <form ref={form} onSubmit={handleSubmit} className=\"mx-auto\">\n                    {status && (\n                        <CustomAlert variant={variant} status={status} />\n                    )}\n\n                    <Row className=\"form-group\">\n                        <Col className=\"my-auto\">\n                            <FontAwesomeIcon\n                                className=\"mr-2\"\n                                icon={[\"fas\", \"user\"]}\n                            />\n                            Username:\n                        </Col>\n                        <Col md={8} sm={12}>\n                            {/* <div className={\"input-group rounded\" + border}> */}\n                            <div className={\"input-group rounded\"}>\n                                <input\n                                    type=\"text\"\n                                    name=\"username\"\n                                    readOnly={!canEdit}\n                                    defaultValue={user.username}\n                                    className=\"form-control text-center\"\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Col className=\"my-auto\">\n                            <FontAwesomeIcon\n                                className=\"mr-2\"\n                                icon={[\"fas\", \"phone\"]}\n                            />\n                            Phone:\n                        </Col>\n                        <Col md={8} sm={12}>\n                            {/* <div className={\"input-group rounded\" + border}> */}\n                            <div className={\"input-group rounded\"}>\n                                <input\n                                    readOnly\n                                    type=\"number\"\n                                    name=\"userphone\"\n                                    defaultValue={user.userphone}\n                                    className=\"form-control text-center\"\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n\n                    {isServiceProvider && (\n                        <>\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"building\"]}\n                                    />\n                                    Company:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        // className={\n                                        //     \"input-group rounded\" + border\n                                        // }\n                                        className={\n                                            \"input-group rounded\"\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"company_name\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.company_name}\n                                            className=\"form-control text-center\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"hand-holding-usd\"]}\n                                    />\n                                    Delivery Charge:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        // className={\n                                        //     \"input-group rounded\" + border\n                                        // }\n                                        className={\n                                            \"input-group rounded\"\n                                        }\n                                    >\n                                        <input\n                                            type=\"number\"\n                                            readOnly={!canEdit}\n                                            name=\"delivery_charge\"\n                                            defaultValue={user.delivery_charge}\n                                            className=\"form-control text-center\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"plus\"]}\n                                    />\n                                    Description:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        // className={\n                                        //     \"input-group rounded\" + border\n                                        // }\n                                        className={\n                                            \"input-group rounded\"\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"description\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.description}\n                                            className=\"form-control text-center\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"id-card\"]}\n                                    />\n                                    NID:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        // className={\n                                        //     \"input-group rounded\" + border\n                                        // }\n                                        className={\n                                            \"input-group rounded\"\n                                        }\n                                    >\n                                        <input\n                                            name=\"nid\"\n                                            type=\"text\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.nid}\n                                            className=\"form-control text-center\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"taxi\"]}\n                                    />\n                                    Service type:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        // className={\n                                        //     \"input-group rounded\" + border\n                                        // }\n                                        className={\n                                            \"input-group rounded\"\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"service_type\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.service_type}\n                                            className=\"form-control text-center\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"id-card\"]}\n                                    />\n                                    Trade license:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        // className={\n                                        //     \"input-group rounded\" + border\n                                        // }\n                                        className={\n                                            \"input-group rounded\"\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"trade_license\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.trade_license}\n                                            className=\"form-control text-center\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"location-arrow\"]}\n                                    />\n                                    Address:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        // className={\n                                        //     \"input-group rounded\" + border\n                                        // }\n                                        className={\n                                            \"input-group rounded\"\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"address\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.address}\n                                            className=\"form-control text-center\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n                        </>\n                    )}\n\n                    <div className=\"row mt-3\">\n                        <div\n                            className={\n                                canEdit\n                                    ? \"col-sm-12 mb-2 col-md-4\"\n                                    : \"col-sm-12 mb-2 col-md-6\"\n                            }\n                        >\n                            <Button\n                                className=\"w-100\"\n                                onClick={handleLogOut}\n                                variant={\"outline-\" + type}\n                            >\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"sign-out-alt\"]}\n                                />\n                                Logout\n                            </Button>\n                        </div>\n\n                        {canEdit && (\n                            <div\n                                className={\n                                    canEdit\n                                        ? \"col-sm-12 mb-2 col-md-4\"\n                                        : \"col-sm-12 mb-2 col-md-6\"\n                                }\n                            >\n                                <Button\n                                    variant=\"remove\"\n                                    className=\"w-100\"\n                                    onClick={handleEdit}\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"strikethrough\"]}\n                                    />\n                                    Cancel Edit\n                                </Button>\n                            </div>\n                        )}\n\n                        <div\n                            className={\n                                canEdit\n                                    ? \"col-sm-12 mb-2 col-md-4\"\n                                    : \"col-sm-12 mb-2 col-md-6\"\n                            }\n                        >\n                            <Button\n                                variant={type}\n                                className=\"w-100\"\n                                onClick={canEdit ? handleSubmit : handleEdit}\n                            >\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", canEdit ? \"wrench\" : \"edit\"]}\n                                />\n                                {canEdit ? \"Update Profile\" : \"Edit Profile\"}\n                            </Button>\n                        </div>\n                    </div>\n                </form>\n            </article>\n        </div>\n    );\n};\n\nexport default ProfileForm;\n","import React from \"react\";\nimport Layout from \"../components/generic/layout\";\nimport ProfileForm from \"../components/user/ProfileForm\";\n\nconst Profile = () => {\n    return (\n        <Layout>\n            <ProfileForm />\n        </Layout>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n    search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(3),\n            width: \"auto\",\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \"20ch\",\n        },\n    },\n    sectionDesktop: {\n        display: \"none\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"flex\",\n        },\n    },\n    sectionMobile: {\n        display: \"flex\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"none\",\n        },\n    },\n}));\n\nexport default function Test() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = \"primary-search-account-menu\";\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = \"primary-search-account-menu-mobile\";\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton\n                    aria-label=\"show 11 new notifications\"\n                    color=\"inherit\"\n                >\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Material-UI\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ \"aria-label\": \"search\" }}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton\n                            aria-label=\"show 4 new mails\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            aria-label=\"show 17 new notifications\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={17} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n","import React from \"react\";\nimport Test from \"./Test.jsx\"\nimport Layout from \"../components/generic/layout\";\n\nconst TestPage = () => {\n    return (\n        <Layout>\n            <Test />\n        </Layout>\n    );\n};\n\nexport default TestPage;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Title = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    return (\n        <span\n            className={custom_text}\n            style={{ fontWeight: \"600\", fontSize: \"1.08rem\" }}\n        >\n            {props.children}\n        </span>\n    );\n};\n\nexport default Title;\n","import React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Title from \"../generic/title\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Provider = (props) => {\n    const [show, setShow] = useState(true);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n\n    const [provider, setProvider] = useState({});\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/getProfile/\";\n\n        const loadData = async () => {\n            const servideID = {\n                userid: props.Service.service_id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(servideID),\n            });\n\n            const data = await response.json();\n\n            setProvider(data);\n        };\n        loadData();\n\n        if (\n            provider.userid &&\n            sessionStorage.getItem(\"service_id\") &&\n            sessionStorage.getItem(\"service_id\") !== provider.userid.toString()\n        )\n            setShow(false);\n    }, [props.Service, provider.userid]);\n\n    return (\n        <div className=\"col-lg-6 mb-3\">\n            {/* <Card className={\"p-3 shadow\" + ui + border}> */}\n            <Card className={\"card-body\" + ui}>\n                <div>\n                    <div className=\"d-block\">\n                        <img\n                            src={`https://picsum.photos/id/${Math.floor(\n                                Math.random() * 1000\n                            )}/800`}\n                            onError={(e) => {\n                                e.target.onerror = null;\n                                e.target.src = \"/img/Default.png\";\n                            }}\n                            alt=\"provider's\"\n                            // className={\n                            //     \"mb-1 mr-3 float-left profile-pic\" + border\n                            // }\n                            className={\"mb-1 mr-3 float-left profile-pic\"}\n                        />\n                    </div>\n\n                    <div className={syntax}>\n                        <Title>Company: </Title> {provider.company_name}\n                        <br />\n                        <Title>Address: </Title> {provider.address}\n                        <br />\n                        <Title>Service type: </Title> {provider.service_type}\n                        <br />\n                        <Title>Phone number: </Title> {provider.phone_1},{\" \"}\n                        {provider.phone_2}\n                        <br />\n                        <Title>Description: </Title> {provider.description}\n                    </div>\n\n                    <Button\n                        variant={type}\n                        disabled={!show}\n                        as={show && Link}\n                        className=\"w-100 mt-3\"\n                        to={\"/service/provider/\" + props.Service.service_id}\n                    >\n                        <FontAwesomeIcon\n                            className=\"fa-icon mr-2\"\n                            icon={[\"fas\", \"shopping-basket\"]}\n                        />\n                        Show their services\n                    </Button>\n                </div>\n            </Card>\n        </div>\n    );\n};\n\nexport default Provider;\n","import React, { useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Infobar = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    // const mainBG = isLightTheme ? theme.light.mainBG : theme.dark.mainBG;\n    // const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const text_color = props.text ? \" \" + props.text : syntax;\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    return (\n        // <div className=\"text-center card mb-4\">\n        //     {/* <h5 className={\"rounded p-3\" + text_color}>{props.children}</h5> */}\n        //     {/* <Alert variant=\"dark\">{props.children}</Alert> */}\n        //     <div className={\"card-body rounded\" + ui + custom_text}>\n        //         {props.children}\n        //     </div>\n        // </div>\n        <Card className={\"mb-4\" + ui}>\n            <Card.Body className={\"text-center\" + custom_text}>\n                <h5 className=\"mb-0\">{props.children}</h5>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Infobar;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const LocationContext = createContext();\n\nconst LocationContextProvider = (props) => {\n    const [location, setLocation] = useState({\n        id: -1,\n        area: \"\",\n        thana: \"\",\n        district: \"\",\n    });\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"location\");\n        const localLocation = JSON.parse(json);\n\n        if (localLocation) setLocation(localLocation);\n    }, []);\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"location\");\n        const localLocation = JSON.parse(json);\n\n        if (localLocation !== location)\n            sessionStorage.setItem(\"location\", JSON.stringify(location));\n    }, [location]);\n\n    const changeLocation = (selectedLocation) => {\n        const loadData = async () => {\n            const API_URL = \"/getAreaID/\";\n\n            const bodyData = {\n                ...selectedLocation,\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                // if (!response.ok) setStatus(data.message);\n\n                sessionStorage.setItem(\"areaID\", data.id);\n                setLocation({ ...selectedLocation, id: data.id });\n            } catch (error) {\n                // setStatus(error);\n            }\n        };\n\n        loadData();\n\n        // Updating sessionStorage\n        sessionStorage.setItem(\"location\", JSON.stringify(selectedLocation));\n    };\n\n    return (\n        <LocationContext.Provider value={{ location, changeLocation }}>\n            {props.children}\n        </LocationContext.Provider>\n    );\n};\n\nexport default LocationContextProvider;\n","import { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport React, { useContext, useState, useEffect } from \"react\";\n\nimport Provider from \"./provider\";\nimport Infobar from \"../generic/infobar\";\nimport { LocationContext } from \"../../contexts/LocationContext\";\n\nconst Providers = () => {\n    const { location } = useContext(LocationContext);\n\n    const [providers, setProviders] = useState([]);\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"getServiceName/\" + location.id;\n\n        const loadData = async () => {\n            try {\n                const apiData = [];\n                const response = await fetch(API_URL);\n                const data = await response.json();\n\n                data.services.map((service) => apiData.push(service));\n                setProviders(apiData);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        loadData();\n    }, [location]);\n\n    return location && location.district && location.area ? (\n        !providers.length > 0 ? (\n            <div className=\"mt-4\">\n                <Infobar>\n                    Sorry, currently we are not providing service in this area{\" \"}\n                    {emoji(\"🙁\")}\n                </Infobar>\n            </div>\n        ) : (\n            <div className=\"row mt-4\">\n                {providers.map((provider) => (\n                    // Here gives unmounted error 🙁\n                    <Provider Service={provider} key={uuidv4()} />\n                ))}\n            </div>\n        )\n    ) : (\n        <div className=\"mt-4\">\n            <Infobar>\n                Select a location to see the service providers {emoji(\"😀\")}\n            </Infobar>\n        </div>\n    );\n};\n\nexport default Providers;\n","import React, { useContext } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst LocationDropDown = (props) => {\n    const handleSelect = (e) => props.handleSelect(e);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const dropdown_text = isLightTheme\n        ? theme.light.dropdown_text\n        : theme.dark.dropdown_text;\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle\n                size={props.size}\n                disabled={props.status && props.status}\n                variant={props.type ? props.type : type}\n                className={\n                    props.customClass && props.customClass + \" text-wrap\"\n                }\n            >\n                {props.title}\n            </Dropdown.Toggle>\n\n            {/* <Dropdown.Menu className={\"text-center w-100 shadow\" + ui + border}> */}\n            <Dropdown.Menu className={\"text-center w-100 shadow\" + ui}>\n                {props.values &&\n                    props.values.map((value) => (\n                        <Dropdown.Item\n                            key={uuidv4()}\n                            eventKey={value}\n                            onSelect={handleSelect}\n                            className={\"text-wrap\" + syntax + dropdown_text}\n                        >\n                            {value}\n                        </Dropdown.Item>\n                    ))}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default LocationDropDown;\n","import React, { useState, useContext, useEffect } from \"react\";\n\n// import { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { LocationContext } from \"../../contexts/LocationContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport LocationDropDown from \"./LocationDropDown\";\n\nconst SelectLocation = () => {\n    const [areas, setAreas] = useState([]);\n    const [thanas, setThanas] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [selectedLocation, setSelectedLocation] = useState(\n        JSON.parse(sessionStorage.getItem(\"location\"))\n            ? JSON.parse(sessionStorage.getItem(\"location\"))\n            : {\n                  area: \"\",\n                  thana: \"\",\n                  district: \"\",\n              }\n    );\n    const [status, setStatus] = useState(undefined);\n\n    const { changeLocation } = useContext(LocationContext);\n\n    // // Themes\n    // const { isLightTheme, theme } = useContext(ThemeContext);\n    // const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    // ComponentDidMount\n    useEffect(() => {\n        // Setting previously selected location from sessionStorage\n        const json = sessionStorage.getItem(\"location\");\n        const localLocation = JSON.parse(json);\n\n        if (localLocation) {\n            // For refreshed page data\n            const loadData = async () => {\n                let API_URL = \"/getThana/\";\n\n                let bodyData = {\n                    district: localLocation.district,\n                };\n\n                try {\n                    // Getting Thanas\n                    let response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(bodyData),\n                    });\n\n                    let data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n\n                    setThanas(data.details);\n\n                    // Getting Areas\n                    API_URL = \"/getArea/\";\n\n                    bodyData = {\n                        thana: localLocation.thana,\n                        district: localLocation.district,\n                    };\n\n                    response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(bodyData),\n                    });\n\n                    data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n\n                    setAreas(data.details);\n                } catch (error) {\n                    setStatus(error);\n                }\n            };\n\n            loadData();\n        }\n\n        const loadData = async () => {\n            const API_URL = \"/getDistrict/\";\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"GET\",\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setDistricts(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, []);\n\n    const handleDistrictSelect = (e) => {\n        setSelectedLocation({\n            area: \"\",\n            thana: \"\",\n            district: e,\n        });\n\n        const loadData = async () => {\n            const API_URL = \"/getThana/\";\n\n            const bodyData = {\n                district: e,\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setThanas(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleThanaSelect = (e) => {\n        setSelectedLocation({ ...selectedLocation, area: \"\", thana: e });\n\n        const loadData = async () => {\n            const API_URL = \"/getArea/\";\n\n            const bodyData = {\n                thana: e,\n                district: selectedLocation.district,\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setAreas(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleAreaSelect = (e) => {\n        setSelectedLocation({ ...selectedLocation, area: e });\n        changeLocation({ ...selectedLocation, area: e });\n    };\n\n    return (\n        <div>\n            {status && <CustomAlert status={status} />}\n\n            <div className=\"row\">\n                <div className=\"col-sm-12 col-lg-4\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        status=\"\"\n                        customClass=\"mb-2 w-100\"\n                        values={districts ? districts : []}\n                        handleSelect={handleDistrictSelect}\n                        title={\n                            selectedLocation && selectedLocation.district\n                                ? selectedLocation.district\n                                : \"District\"\n                        }\n                    />\n                </div>\n\n                <div className=\"col-sm-12 col-lg-4\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        customClass=\"mb-2 w-100\"\n                        values={thanas ? thanas : []}\n                        status={!selectedLocation.district}\n                        handleSelect={handleThanaSelect}\n                        title={\n                            selectedLocation && selectedLocation.thana\n                                ? selectedLocation.thana\n                                : \"Thana\"\n                        }\n                    />\n                </div>\n\n                <div className=\"col-sm-12 col-lg-4\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        customClass=\"mb-2 w-100\"\n                        values={areas ? areas : []}\n                        status={!selectedLocation.thana}\n                        handleSelect={handleAreaSelect}\n                        title={\n                            selectedLocation && selectedLocation.area !== \"\"\n                                ? selectedLocation.area\n                                : \"Area\"\n                        }\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SelectLocation;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { ThemeContext } from \"../contexts/ThemeContext\";\n\nimport Providers from \"./providers/providers\";\nimport LocationContextProvider from \"../contexts/LocationContext\";\nimport SelectLocation from \"./location/SelectLocation\";\n\nconst Home = () => {\n    const history = useHistory();\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    return (\n        <>\n            <div className={\"text-center mt-2 mb-5\" + syntax}>\n                <h2>\n                    Why bother, when <span className=\"logo-text\">ProjectX</span>{\" \"}\n                    is here!\n                </h2>\n            </div>\n\n            <LocationContextProvider>\n                <SelectLocation />\n                <Providers />\n            </LocationContextProvider>\n\n            {localStorage.getItem(\"isServiceProvider\") === \"true\" &&\n                history.push(\"/orders\")}\n        </>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport Home from \"../components/Home\";\n\nconst HomePage = () => {\n    return (\n        <Layout>\n            <Home />\n        </Layout>\n    );\n};\n\nexport default HomePage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { Button } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport { AuthenticationContext } from \"../../contexts/AuthenticationContext\";\n\nconst LoginForm = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(\"\");\n    const { handleAuthentication } = useContext(AuthenticationContext);\n\n    const [isServiceProvider, setIsServiceProvider] = useState(false);\n    const [showVerificationArea, setShowVerificationArea] = useState(false);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = !showVerificationArea\n            ? isServiceProvider\n                ? \"/servicelogin/\"\n                : \"/login/\"\n            : isServiceProvider\n            ? \"/serviceverify/\"\n            : \"/verify/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n                else if (!showVerificationArea) {\n                    setStatus(undefined);\n                    setShowVerificationArea(true);\n                } else {\n                    localStorage.setItem(\"userID\", data.userid);\n                    localStorage.setItem(\"username\", data.username);\n                    localStorage.setItem(\"phone_number\", object.phone);\n                    // window.location.replace(\"/\");\n                    localStorage.setItem(\n                        \"isServiceProvider\",\n                        isServiceProvider\n                    );\n                    handleAuthentication(\"Yes\");\n                    isServiceProvider\n                        ? props.history.push(\"/orders\")\n                        : props.history.push(\"/\");\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleCheck = () => setIsServiceProvider(!isServiceProvider);\n\n    return (\n        <div\n            // className={\"card mx-auto\" + ui + syntax + border}\n            className={\"card mx-auto\" + ui + syntax}\n            style={{ maxWidth: \"30rem\" }}\n        >\n            <article className=\"card-body p-md-5 mx-auto\">\n                <div className=\"d-flex justify-content-between mb-4 mx-0\">\n                    <div className=\"w-50 p-0\">\n                        <img\n                            src=\"/img/profile_pic.png\"\n                            onError={(e) => {\n                                e.target.onerror = null;\n                                e.target.src = \"/img/Default.png\";\n                            }}\n                            alt=\"profile\"\n                            className={\"rounded-circle w-100\" + border}\n                        />\n                    </div>\n\n                    <div className=\"text-center my-auto\">\n                        <Link\n                            to=\"/registration\"\n                            className={\"btn btn-outline-\" + type}\n                        >\n                            Sign up\n                        </Link>\n                        <div className=\"my-3 text-center divider-text\">\n                            <span className={\"px-4\" + ui}>OR</span>\n                        </div>\n                        <h5 className=\"card-title\">Sign in</h5>\n                    </div>\n                </div>\n\n                <form ref={form} onSubmit={handleSubmit}>\n                    {status && <CustomAlert status={status} />}\n\n                    {/* <div className={\"form-group input-group rounded\" + border}> */}\n                    <div className={\"form-group input-group rounded\"}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                <FontAwesomeIcon icon={[\"fas\", \"phone\"]} />\n                            </span>\n                        </div>\n                        {/* <select\n                            className=\"custom-select\"\n                            style={{ maxWidth: \"85px\" }}\n                        >\n                            <option defaultValue=\"\">+880</option>\n                            <option value=\"1\">+972</option>\n                            <option value=\"2\">+198</option>\n                            <option value=\"3\">+701</option>\n                        </select> */}\n                        <input\n                            required\n                            name=\"phone\"\n                            type=\"number\"\n                            placeholder=\"Phone number\"\n                            className=\"form-control\"\n                        />\n                    </div>\n\n                    {showVerificationArea ? (\n                        <div\n                            // className={\n                            //     \"form-group input-group rounded\" + border\n                            // }\n                            className={\"form-group input-group rounded\"}\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <FontAwesomeIcon icon={[\"fas\", \"code\"]} />\n                                </span>\n                            </div>\n                            <input\n                                required\n                                name=\"code\"\n                                type=\"number\"\n                                placeholder=\"Verification Code\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    ) : (\n                        <div className=\"form-group\">\n                            <input type=\"checkbox\" onClick={handleCheck} />\n                            <label className=\"ml-1\">\n                                Login as a Service Provider\n                            </label>\n                        </div>\n                    )}\n\n                    {showVerificationArea && (\n                        <div className=\"text-center mb-3\">\n                            <small>\n                                A 6 digit verification code has been sent to\n                                this phone number, type it to login into your\n                                account\n                            </small>\n                        </div>\n                    )}\n\n                    <div className=\"form-group\">\n                        <Button type=\"submit\" variant={type} className=\"w-100\">\n                            {showVerificationArea ? (\n                                <>\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"sign-in-alt\"]}\n                                    />\n                                    Login\n                                </>\n                            ) : (\n                                <>\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"code\"]}\n                                    />\n                                    Send Verification Code\n                                </>\n                            )}\n                        </Button>\n                    </div>\n                </form>\n            </article>\n        </div>\n    );\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport Layout from '../components/generic/layout';\nimport LoginForm from '../components/user/loginForm';\n\nconst UserLogin = () => {\n    return (\n        <Layout>\n            <LoginForm />\n        </Layout>\n    );\n}\n \nexport default UserLogin;","import React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { Button } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst SearchBar = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n\n    const handleChange = (e) => {\n        props.handleChange(e);\n    };\n\n    return (\n        <div className=\"my-5\">\n            <div className=\"d-flex\">\n                <input\n                    type=\"text\"\n                    onChange={handleChange}\n                    placeholder={props.placeholder}\n                    style={{ borderBottom: \"2px solid \" + mainColor }}\n                    className={\n                        \"transparent__input mr-3 pl-2 text-danger\" + custom_text\n                    }\n                />\n\n                <Button variant={type}>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-sm-2\"\n                        icon={[\"fas\", \"search\"]}\n                    />\n                    <span className=\"d-none d-sm-inline\">Search</span>\n                </Button>\n            </div>\n\n            <div className={\"text-center mt-3\" + syntax}>\n                <small>{props.searchBy}</small>\n            </div>\n        </div>\n    );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Table } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst CustomTable = (props) => {\n    // Themes\n    const { isLightTheme } = useContext(ThemeContext);\n    const variant = isLightTheme ? \"light\" : \"dark\";\n\n    return (\n        // <div className={\"shadow rounded\" + border}>\n        <div className={\"rounded muted_border\"}>\n            <Table\n                hover\n                striped\n                responsive=\"sm\"\n                variant={variant}\n                className=\"mb-0 rounded\"\n            >\n                <thead>\n                    <tr>\n                        {props.ths.map((th) => (\n                            <th\n                                scope=\"col\"\n                                key={uuidv4()}\n                                className={\n                                    \"text-center align-middle \" + th.className\n                                }\n                            >\n                                {th.value}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.datas &&\n                        props.datas.map((data, index) => (\n                            <tr key={uuidv4()}>\n                                {props.index && (\n                                    <td className=\"text-center align-middle\">\n                                        {index + 1}\n                                    </td>\n                                )}\n\n                                {props.PreActionComponents &&\n                                    props.PreActionComponents.map(\n                                        (PreActionComponent) => (\n                                            <td\n                                                key={uuidv4()}\n                                                className={\n                                                    \"text-center align-middle \" +\n                                                    PreActionComponent.className\n                                                }\n                                            >\n                                                {PreActionComponent.component(\n                                                    data\n                                                )}\n                                            </td>\n                                        )\n                                    )}\n\n                                {/* Filter data[key] by the props.allowedEntry array */}\n                                {props.allowedEntry\n                                    ? Object.keys(\n                                          Object.keys(data)\n                                              .filter((key) =>\n                                                  props.allowedEntry.includes(\n                                                      key\n                                                  )\n                                              )\n                                              .reduce((obj, key) => {\n                                                  obj[key] = data[key];\n                                                  return obj;\n                                              }, {})\n                                      ).map((key, i) => (\n                                          <td\n                                              key={uuidv4()}\n                                              className={\n                                                  props.tdsClassName\n                                                      ? \"text-center align-middle \" +\n                                                        props.tdsClassName[i]\n                                                      : \"text-center align-middle\"\n                                              }\n                                          >\n                                              {data[key] ? data[key] : \"-----\"}\n                                          </td>\n                                      ))\n                                    : Object.keys(data).map((key, i) => (\n                                          <td\n                                              key={uuidv4()}\n                                              className={\n                                                  props.tdsClassName\n                                                      ? \"text-center align-middle \" +\n                                                        props.tdsClassName[i]\n                                                      : \"text-center align-middle\"\n                                              }\n                                          >\n                                              {data[key]}\n                                          </td>\n                                      ))}\n\n                                {props.ActionComponents &&\n                                    props.ActionComponents.map(\n                                        (ActionComponent) => (\n                                            <td\n                                                key={uuidv4()}\n                                                className={\n                                                    \"text-center align-middle \" +\n                                                    ActionComponent.className\n                                                }\n                                            >\n                                                {ActionComponent.component(\n                                                    data\n                                                )}\n                                            </td>\n                                        )\n                                    )}\n                            </tr>\n                        ))}\n                </tbody>\n            </Table>\n        </div>\n    );\n};\n\nexport default CustomTable;\n","import React, { useState, useContext } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst EmployeeDropDown = (props) => {\n    const [title, setTitle] = useState(props.title);\n\n    const handleSelect = (e, value) => {\n        setTitle(value);\n        // console.log(e, \"Needs name here\", value);\n        const tmp = { id: e, name: value };\n        // props.handleSelect(e);\n        props.handleSelect(tmp);\n    };\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const dropdown_text = isLightTheme\n        ? theme.light.dropdown_text\n        : theme.dark.dropdown_text;\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle\n                size={props.size}\n                disabled={props.status && props.status}\n                variant={props.type ? props.type : type}\n                className={\n                    props.customClass && props.customClass + \" text-wrap\"\n                }\n            >\n                {title}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className={\"text-center w-100 shadow\" + ui + border}>\n                {props.values.map((value) => (\n                    <Dropdown.Item\n                        eventKey={\n                            props.subElementKey\n                                ? value[props.subElementKey]\n                                : value\n                        }\n                        key={uuidv4()}\n                        onSelect={(e) =>\n                            handleSelect(\n                                e,\n                                props.subElementValue &&\n                                    value[props.subElementValue]\n                            )\n                        }\n                        className={\"text-wrap\" + syntax + dropdown_text}\n                    >\n                        {props.subElementValue\n                            ? value[props.subElementValue]\n                            : value}\n                    </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default EmployeeDropDown;\n","import { useHistory } from \"react-router-dom\";\nimport { Alert, Modal, Spinner } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\n\nconst CustomModalAlert = (props) => {\n    const timeoutTime = 1500;\n    const history = useHistory();\n    const [show] = useState(true);\n\n    const { setStatus, redirect, updateFlag } = props;\n\n    const { isAnimated } = useContext(SettingsContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleClose = useCallback(() => {\n        setStatus(undefined);\n        // setShow(false); gives this error -> \"Can't perform a React state update on an unmounted component.\"\n        redirect && history.push(redirect);\n        updateFlag && updateFlag();\n    }, [setStatus, history, redirect, updateFlag]);\n\n    useEffect(() => {\n        setTimeout(handleClose, timeoutTime);\n    }, [handleClose]);\n\n    return (\n        <Modal\n            centered\n            size=\"md\"\n            show={show}\n            onHide={handleClose}\n            animation={isAnimated}\n            className=\"text-center\"\n            style={{ background: bg }}\n        >\n            <div className={\"rounded\" + syntax + border + ui}>\n                <Modal.Body>\n                    <Alert\n                        className={\"m-0 \" + props.alertClass}\n                        variant={props.variant ? props.variant : \"danger\"}\n                    >\n                        <div className=\"mb-3\">\n                            <FontAwesomeIcon\n                                style={{ fontSize: \"4rem\" }}\n                                icon={[\n                                    \"fas\",\n                                    props.variant === \"success\"\n                                        ? \"check-circle\"\n                                        : \"times-circle\",\n                                ]}\n                            />\n                        </div>\n\n                        {props.status}\n\n                        {redirect && (\n                            <div className=\"mt-2\">\n                                <Spinner\n                                    size=\"sm\"\n                                    animation=\"border\"\n                                    className=\"mb-1\"\n                                />\n\n                                <span className=\"ml-2\">Redirecting...</span>\n                            </div>\n                        )}\n                    </Alert>\n                </Modal.Body>\n            </div>\n        </Modal>\n    );\n};\n\nexport default CustomModalAlert;\n","import React, { useContext, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Button, Modal, Col } from \"react-bootstrap\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst CustomModal = (props) => {\n    const { isAnimated } = useContext(SettingsContext);\n    const [show, setShow] = useState(props.show ? props.show : false);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    // const variant = isLightTheme ? \"light\" : \"dark\";\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    // const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const secondary = isLightTheme\n        ? theme.light.secondary\n        : theme.dark.secondary;\n    // const custom_text = isLightTheme\n    //     ? theme.light.custom_text\n    //     : theme.dark.custom_text;\n\n    const handleClose = () => {\n        setShow(false);\n        props.handleCloseAction && props.handleCloseAction();\n    };\n\n    const handleShow = () => setShow(true);\n    const handleAction = () => {\n        props.redirect && props.history.push(props.redirect);\n        // handleClose();\n        props.handleAction();\n        props.updateFlag && props.updateFlag();\n    };\n\n    return (\n        <>\n            {!props.noAction && (\n                <button\n                    onClick={handleShow}\n                    disabled={props.edit}\n                    style={props.modalButtonStyle}\n                    className={props.modalButtonClass}\n                >\n                    {props.children}\n                </button>\n            )}\n\n            <Modal\n                centered\n                show={show}\n                size={props.size}\n                onHide={handleClose}\n                animation={isAnimated}\n                className={props.modalClass}\n            >\n                <div className={\"rounded\" + syntax + border + ui}>\n                    <Modal.Body>\n                        <div className=\"mb-3\">\n                            {props.size === \"sm\" ? (\n                                props.modalTitle\n                            ) : (\n                                <Modal.Title>{props.modalTitle}</Modal.Title>\n                            )}\n                        </div>\n\n                        {props.modalBody}\n\n                        {!props.noAction ? (\n                            <div className=\"d-flex mt-4\">\n                                <Col className=\"pl-0\">\n                                    <Button\n                                        className=\"w-100\"\n                                        variant={secondary}\n                                        onClick={handleClose}\n                                    >\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"times\"]}\n                                            className=\"mr-2\"\n                                        />\n                                        Close\n                                    </Button>\n                                </Col>\n\n                                <Col className=\"p-0\">\n                                    <Button\n                                        className=\"w-100\"\n                                        onClick={handleAction}\n                                        variant={props.actionVariant}\n                                    >\n                                        {props.actionButtonBody}\n                                    </Button>\n                                </Col>\n                            </div>\n                        ) : (\n                            <div className=\"mt-4\">\n                                <Button\n                                    className=\"w-100\"\n                                    variant={secondary}\n                                    onClick={handleClose}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={[\"fas\", \"times\"]}\n                                        className=\"mr-2\"\n                                    />\n                                    Close\n                                </Button>\n                            </div>\n                        )}\n                    </Modal.Body>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default withRouter(CustomModal);\n","import React from \"react\";\nimport CustomModal from \"./CustomModal\";\nimport { withRouter } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst DeleteModal = (props) => {\n    const handleAction = () => {\n        props.redirect && props.history.push(props.redirect);\n        props.handleAction();\n        props.updateFlag && props.updateFlag();\n    };\n\n    return (\n        <CustomModal\n            modalTitle={props.deleteTitle ? props.deleteTitle : \"Delete\"}\n            actionVariant=\"danger\"\n            handleAction={handleAction}\n            modalBody={props.modalBody}\n            modalButtonClass=\"btn btn-sm btn-danger\"\n            actionButtonBody={\n                <>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"trash-alt\"]}\n                    />\n                    {props.deleteText ? props.deleteText : \"Delete\"}\n                </>\n            }\n        >\n            <FontAwesomeIcon\n                className={props.deleteText ? \"fa-icon mr-1\" : \"fa-icon\"}\n                icon={[\n                    \"fas\",\n                    props.deleteIcon ? props.deleteIcon : \"trash-alt\",\n                ]}\n            />\n            {props.deleteText && props.deleteText}\n        </CustomModal>\n    );\n};\n\nexport default withRouter(DeleteModal);\n","import Moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport { AppBar, Tabs, Tab, Box } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Infobar from \"../generic/infobar\";\nimport SearchBar from \"../generic/SearchBar\";\nimport CustomTable from \"../generic/CustomTable\";\nimport EmployeeDropDown from \"../employees/EmployeeDropDown\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport DeleteModal from \"../generic/DeleteModal\";\n\nconst Order = (props) => {\n    const [value, setValue] = useState(0);\n    const [flag, setFlag] = useState(true);\n    const [orders, setOrders] = useState([]);\n    const [employes, setEmployes] = useState([]);\n    const [status, setStatus] = useState(undefined);\n    const [searchData, setSearchData] = useState(\"\");\n    const [tabs] = useState([\"Not Assigned\", \"Assigned\"]);\n    const [assignedOrders, setAssignedOrders] = useState([]);\n    const [statusVariant, setStatusVariant] = useState(undefined);\n    const [selectedEmployeeID, setSelectedEmployeeID] = useState({}); // {27: 17, 28: 2, 32: 28.........}\n    const [selectedEmployeeName, setSelectedEmployeeName] = useState({}); // {27: \"Toha\", 28: \"Dhruvo\", 32: \"lkbnefj\".........}\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const success = isLightTheme ? theme.light.success : theme.dark.success;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        let API_URL = \"/getserviceorders/\";\n\n        const loadData = async () => {\n            let bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            let response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            let data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else setOrders(data.details);\n\n            // Get employee's list\n            API_URL = \"/getEmployee/\";\n\n            bodyData = {\n                search_data: searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else setEmployes(data.employee);\n\n            // Get assigned employee\n            API_URL = \"/getassignedserviceorders/\";\n\n            bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else setAssignedOrders(data.details);\n        };\n        loadData();\n    }, [flag, searchData]);\n\n    const handleOrderComplete = (order_id) => {\n        const API_URL = \"/completeserviceorder/\";\n\n        const loadData = async () => {\n            const orderID = {\n                order_id: order_id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(orderID),\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                // !alert(\n                //     `Order Id: ${order_id} has been completed successfully`\n                // ) && setFlag(!flag);\n                setFlag(!flag);\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatusVariant(\"danger\");\n                setStatus(data.message);\n            }\n        };\n        loadData();\n    };\n\n    const handleAssignComplete = (order_id) => {\n        const API_URL = \"/assignEmployee/\";\n\n        const loadData = async () => {\n            const body = {\n                order_id: order_id,\n                employee_id: selectedEmployeeID[order_id],\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(body),\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                // !alert(\n                //     `Employee ${selectedEmployeeName[order_id]} has been assigned successfully for Order Id: ${order_id}`\n                // ) && setFlag(!flag);\n                setFlag(!flag);\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatusVariant(\"danger\");\n                setStatus(data.message);\n            }\n        };\n        loadData();\n    };\n\n    const handleEmployeeSelect = (e, id) => {\n        setSelectedEmployeeID({ ...selectedEmployeeID, [id]: e.id });\n        setSelectedEmployeeName({ ...selectedEmployeeName, [id]: e.name });\n    };\n\n    const handleCancel = async (order_id) => {\n        const API_URL = \"/cancel/service/order/\";\n\n        const bodyData = {\n            order_id: order_id,\n            userid: localStorage.getItem(\"userID\"),\n        };\n\n        const response = await fetch(API_URL, {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(bodyData),\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n            setStatusVariant(\"success\");\n            setStatus(data.message);\n        } else {\n            setStatusVariant(\"danger\");\n            setStatus(data.message);\n        }\n    };\n\n    const handleSearchChange = (e) => setSearchData(e.target.value);\n\n    // Tab related settings.....\n    const TabPanel = (props) => {\n        const { children, value, index, ...other } = props;\n\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`scrollable-auto-tabpanel-${index}`}\n                aria-labelledby={`scrollable-auto-tab-${index}`}\n                {...other}\n            >\n                {value === index && <Box>{children}</Box>}\n            </div>\n        );\n    };\n\n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n\n    const a11yProps = (index) => {\n        return {\n            id: `scrollable-auto-tab-${index}`,\n            \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n        };\n    };\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Order ID\" },\n            { className: \"\", value: \"Customer Details\" },\n            { className: \"\", value: \"Address\" },\n            {\n                className: \"\",\n                value: \"Further Description\",\n            },\n            { className: \"\", value: \"Payment\" },\n            { className: \"\", value: \"Time\" },\n            {\n                className: \"\",\n                value: \"Employee\",\n                // value: index === 0 ? \"Select Employee\" : \"Employee\",\n            },\n            { className: \"\", value: \"Action\" },\n            { className: \"\", value: \"Cancel\" },\n        ],\n        tdsClassName: [\"\", \"\", \"text-break\", \"\"],\n        allowedEntry: [\"customer_name\", \"address\", \"further_description\"],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>Your Orders</h4>\n\n            <SearchBar\n                handleChange={handleSearchChange}\n                placeholder=\"Search orders....\"\n                searchBy={<>Search by anything except time and cancelled by</>}\n            />\n\n            <AppBar elevation={0} position=\"static\" className={\"rounded muted_border\" + ui}>\n                <Tabs\n                    value={value}\n                    variant=\"fullWidth\"\n                    className={custom_text}\n                    onChange={handleChange}\n                    TabIndicatorProps={{ style: { background: mainColor } }}\n                >\n                    {tabs.map((tab) => (\n                        <Tab\n                            label={\n                                tab === \"Not Assigned\" ? (\n                                    <div>\n                                        {tab}{\" \"}\n                                        <span\n                                            className={\n                                                \"badge badge-pill badge-\" + type\n                                            }\n                                        >\n                                            {orders ? orders.length : 0}\n                                        </span>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        {tab}{\" \"}\n                                        <span\n                                            className={\n                                                \"badge badge-pill badge-\" + type\n                                            }\n                                        >\n                                            {assignedOrders\n                                                ? assignedOrders.length\n                                                : 0}\n                                        </span>\n                                    </div>\n                                )\n                            }\n                            key={uuidv4()}\n                            {...a11yProps(uuidv4())}\n                            style={{ textTransform: \"none\" }}\n                        />\n                    ))}\n                </Tabs>\n            </AppBar>\n\n            {tabs.map((tab, index) => (\n                <TabPanel\n                    key={uuidv4()}\n                    value={value}\n                    index={index}\n                    className=\"pt-4\"\n                >\n                    {status && (\n                        <CustomModalAlert\n                            status={status}\n                            setStatus={setStatus}\n                            variant={statusVariant}\n                        />\n                    )}\n\n                    {(index === 0 ? orders : assignedOrders) ? (\n                        <CustomTable\n                            ths={tableData.ths}\n                            allowedEntry={tableData.allowedEntry}\n                            PreActionComponents={[\n                                {\n                                    component: (order) => (\n                                        <Link\n                                            to={`/order/details/${order.order_id}/`}\n                                        >\n                                            {order.order_id}\n                                        </Link>\n                                    ),\n                                    className: link,\n                                },\n                            ]}\n                            tdsClassName={tableData.tdsClassName}\n                            datas={index === 0 ? orders : assignedOrders}\n                            ActionComponents={[\n                                {\n                                    component: (order) => (\n                                        <>\n                                            <span className=\"font-weight-bold\">\n                                                ৳{\" \"}\n                                            </span>\n                                            {order.payment}\n                                        </>\n                                    ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) =>\n                                        Moment(order.time).format(\n                                            \"DD/MM/YY hh:mmA\"\n                                        ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) =>\n                                        index === 0 ? (\n                                            <EmployeeDropDown\n                                                size=\"sm\"\n                                                type={\n                                                    selectedEmployeeName[\n                                                        order.order_id\n                                                    ]\n                                                        ? type\n                                                        : \"outline-\" + type\n                                                }\n                                                subElementKey=\"employee_id\"\n                                                subElementValue=\"employee_name\"\n                                                values={\n                                                    employes ? employes : []\n                                                }\n                                                title={\n                                                    selectedEmployeeName[\n                                                        order.order_id\n                                                    ]\n                                                        ? selectedEmployeeName[\n                                                              order.order_id\n                                                          ]\n                                                        : \"Assign\"\n                                                }\n                                                handleSelect={(e) =>\n                                                    handleEmployeeSelect(\n                                                        e,\n                                                        order.order_id\n                                                    )\n                                                }\n                                            />\n                                        ) : (\n                                            order.employee\n                                        ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) => (\n                                        <Button\n                                            size=\"sm\"\n                                            variant={success}\n                                            disabled={\n                                                selectedEmployeeName[\n                                                    order.order_id\n                                                ]\n                                                    ? false\n                                                    : index === 0\n                                            }\n                                            onClick={() =>\n                                                index === 0\n                                                    ? handleAssignComplete(\n                                                          order.order_id\n                                                      )\n                                                    : handleOrderComplete(\n                                                          order.order_id\n                                                      )\n                                            }\n                                        >\n                                            {index === 0 ? (\n                                                <FontAwesomeIcon\n                                                    icon={[\"fas\", \"user-check\"]}\n                                                />\n                                            ) : (\n                                                <FontAwesomeIcon\n                                                    icon={[\"fas\", \"check\"]}\n                                                />\n                                            )}\n                                        </Button>\n                                    ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) => (\n                                        <DeleteModal\n                                            // deleteText=\"Cancel\"\n                                            deleteTitle=\"Cancel Order\"\n                                            updateFlag={() => setFlag(!flag)}\n                                            handleAction={() =>\n                                                handleCancel(order.order_id)\n                                            }\n                                            deleteIcon=\"ban\"\n                                            modalBody={\n                                                <>\n                                                    Do you really want to cancel\n                                                    this order?{\" \"}\n                                                    <span\n                                                        className={\n                                                            dangerTextColor\n                                                        }\n                                                    >\n                                                        Caution: This action\n                                                        cannot be undone\n                                                    </span>\n                                                </>\n                                            }\n                                        />\n                                    ),\n                                    className: \"\",\n                                },\n                            ]}\n                        />\n                    ) : index === 0 ? (\n                        <Infobar>\n                            You have no orders to show {emoji(\"🥲\")}\n                        </Infobar>\n                    ) : (\n                        <Infobar>\n                            You haven't assigned any orders yet! {emoji(\"🙁\")}\n                        </Infobar>\n                    )}\n                </TabPanel>\n            ))}\n        </>\n    );\n};\n\nexport default Order;\n","import React from \"react\";\n\nimport Order from \"../components/orders/Order\";\nimport Layout from \"../components/generic/layout\";\n\nconst OrderPage = () => {\n    return (\n        <Layout>\n            <Order />\n        </Layout>\n    );\n};\n\nexport default OrderPage;\n","import React, { useContext, useState } from \"react\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport DeleteModal from \"../generic/DeleteModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst RemoveArea = (props) => {\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const handleRemoveArea = () => {\n        const API_URL = \"/removearea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                area_id: props.area.area_id,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setStatus(data.message);\n                    setStatusVariant(\"success\");\n                    window.location.reload();\n                } else setStatus(data.message);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                />\n            )}\n\n            <DeleteModal\n                deleteText={\"Remove Area\"}\n                handleAction={handleRemoveArea}\n                modalBody={\n                    <>\n                        Do you really want to remove Area:{\" \"}\n                        <span className={custom_text}>\n                            {props.area.area_name}\n                        </span>{\" \"}\n                        from your service area?\n                    </>\n                }\n            />\n        </>\n    );\n};\n\nexport default RemoveArea;\n","import React, { useContext, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport CustomModalAlert from \"./CustomModalAlert\";\nimport Infobar from \"./infobar\";\n\nconst CustomCard = (props) => {\n    const { cardBodyData, values, noValueInfo, status, setStatus } = props;\n\n    const [statusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    return (\n        <>\n            {values && values.length > 0 ? (\n                <div className=\"row\">\n                    {status && (\n                        <CustomModalAlert\n                            status={status}\n                            setStatus={setStatus}\n                            variant={statusVariant}\n                        />\n                    )}\n\n                    {values.map((value) => (\n                        <div\n                            key={uuidv4()}\n                            className=\"col-lg-3 col-md-4 col-sm-6 mb-4 text-center\"\n                        >\n                            {/* <Card className={\"shadow\" + ui + border}> */}\n                            <Card className={ui}>\n                                <Card.Body className={syntax}>\n                                    {cardBodyData(value)}\n                                </Card.Body>\n                            </Card>\n                        </div>\n                    ))}\n                </div>\n            ) : (\n                <Infobar>{noValueInfo}</Infobar>\n            )}\n        </>\n    );\n};\n\nexport default CustomCard;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport emoji from \"react-easy-emoji\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Title from \"../generic/title\";\nimport RemoveArea from \"./RemoveArea\";\nimport CustomCard from \"../generic/CustomCard\";\n\nconst ServiceAreas = (props) => {\n    const [show, setShow] = useState(\n        sessionStorage.getItem(\"ShowServiceArea\")\n            ? JSON.parse(sessionStorage.getItem(\"ShowServiceArea\"))\n            : true\n    );\n    const [status, setStatus] = useState(undefined);\n    const [serviceAreas, setServiceAreas] = useState([]);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n\n    useEffect(() => {\n        const API_URL = \"/showarea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                search_data: props.searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setServiceAreas(data.Areas);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [props.searchData]);\n\n    const handleShow = () => {\n        sessionStorage.setItem(\"ShowServiceArea\", !show);\n        setShow(!show);\n    };\n\n    return (\n        <>\n            <Button\n                size=\"sm\"\n                className=\"mb-4\"\n                onClick={handleShow}\n                variant={\"outline-\" + type}\n            >\n                {show ? (\n                    <>\n                        <FontAwesomeIcon\n                            className=\"fa-icon mr-2\"\n                            icon={[\"fas\", \"eye-slash\"]}\n                        />\n                        Hide\n                    </>\n                ) : (\n                    <>\n                        <FontAwesomeIcon\n                            className=\"fa-icon mr-2\"\n                            icon={[\"fas\", \"eye\"]}\n                        />\n                        Show\n                    </>\n                )}\n            </Button>\n\n            {show && (\n                <CustomCard\n                    status={status}\n                    setStatus={setStatus}\n                    values={serviceAreas}\n                    cardBodyData={(serviceArea) => (\n                        <>\n                            <Card.Title>{serviceArea.area_name}</Card.Title>\n\n                            <div>\n                                <Title>Thana: </Title> {serviceArea.thana}\n                                <br />\n                                <Title>District: </Title> {serviceArea.district}\n                                {/* <div className={\"py-2\" + link}>\n                                    <a\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                        className={custom_text}\n                                        href={`http://www.google.com/maps/place/${serviceArea.lati},${serviceArea.longi}`}\n                                    >\n                                        Open in Google Map\n                                    </a>\n                                </div> */}\n                            </div>\n\n                            {/* <div className=\"mt-2\"> */}\n                            <div className=\"mt-3\">\n                                <RemoveArea area={serviceArea} />\n                            </div>\n                        </>\n                    )}\n                    noValueInfo={\n                        <>\n                            Currently you don't provide your service to any area{\" \"}\n                            {emoji(\"☹\")}\n                        </>\n                    }\n                />\n            )}\n        </>\n    );\n};\n\nexport default ServiceAreas;\n","import React, { useContext, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModal from \"../generic/CustomModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst AddArea = (props) => {\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const btnTypeClass = isLightTheme\n        ? theme.light.btnTypeClass\n        : theme.dark.btnTypeClass;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const handleAddArea = () => {\n        const API_URL = \"/addArea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                area_id: props.area.area_id,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setStatus(data.message);\n                    setStatusVariant(\"success\");\n                    window.location.reload();\n                } else setStatus(data.message);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                />\n            )}\n\n            <CustomModal\n                actionVariant={type}\n                modalTitle=\"Add Product\"\n                handleAction={handleAddArea}\n                modalBody={\n                    <>\n                        Do you really want to add Area:{\" \"}\n                        <span className={custom_text}>\n                            {props.area.area_name}\n                        </span>{\" \"}\n                        as your service area?\n                    </>\n                }\n                modalButtonClass={\"btn btn-sm\" + btnTypeClass}\n                actionButtonBody={\n                    <>\n                        <FontAwesomeIcon\n                            className=\"fa-icon mr-2\"\n                            icon={[\"fas\", \"plus\"]}\n                        />\n                        Add\n                    </>\n                }\n            >\n                {/* <FontAwesomeIcon\n                    className=\"fa-icon mr-2\"\n                    icon={[\"fas\", \"warehouse\"]}\n                />\n                Add to Service Area */}\n                <FontAwesomeIcon\n                    className=\"fa-icon mr-2\"\n                    icon={[\"fas\", \"plus-circle\"]}\n                />\n                Add\n            </CustomModal>\n        </>\n    );\n};\n\nexport default AddArea;\n","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { LocationContext } from \"../../contexts/LocationContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport LocationDropDown from \"../location/LocationDropDown\";\n\nconst SelectArea = () => {\n    const [thanas, setThanas] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [selectedLocation, setSelectedLocation] = useState(\n        JSON.parse(sessionStorage.getItem(\"location\"))\n            ? JSON.parse(sessionStorage.getItem(\"location\"))\n            : {\n                  area: \"\",\n                  thana: \"\",\n                  district: \"\",\n              }\n    );\n    const [status, setStatus] = useState(undefined);\n\n    const { changeLocation } = useContext(LocationContext);\n\n    // ComponentDidMount\n    useEffect(() => {\n        // Setting previously selected location from sessionStorage\n        const json = sessionStorage.getItem(\"location\");\n        const localLocation = JSON.parse(json);\n\n        if (localLocation) {\n            // For refreshed page data\n            const loadData = async () => {\n                let API_URL = \"/getThana/\";\n\n                let bodyData = {\n                    district: localLocation.district,\n                };\n\n                try {\n                    // Getting Thanas\n                    let response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(bodyData),\n                    });\n\n                    let data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n\n                    setThanas(data.details);\n                } catch (error) {\n                    setStatus(error);\n                }\n            };\n\n            loadData();\n        }\n\n        const loadData = async () => {\n            const API_URL = \"/getDistrict/\";\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"GET\",\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setDistricts(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, []);\n\n    const handleDistrictSelect = (e) => {\n        setSelectedLocation({\n            area: \"\",\n            thana: \"\",\n            district: e,\n        });\n\n        const loadData = async () => {\n            const API_URL = \"/getThana/\";\n\n            const bodyData = {\n                district: e,\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setThanas(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleThanaSelect = (e) => {\n        setSelectedLocation({ ...selectedLocation, thana: e });\n        changeLocation({ ...selectedLocation, thana: e });\n    };\n\n    return (\n        <div>\n            {status && <CustomAlert status={status} />}\n\n            <div className=\"row\">\n                <div className=\"col-sm-12 col-md-6\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        status=\"\"\n                        customClass=\"mb-2 w-100\"\n                        values={districts ? districts : []}\n                        handleSelect={handleDistrictSelect}\n                        title={\n                            selectedLocation && selectedLocation.district\n                                ? selectedLocation.district\n                                : \"District\"\n                        }\n                    />\n                </div>\n\n                <div className=\"col-sm-12 col-md-6\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        customClass=\"mb-2 w-100\"\n                        values={thanas ? thanas : []}\n                        status={!selectedLocation.district}\n                        handleSelect={handleThanaSelect}\n                        title={\n                            selectedLocation && selectedLocation.thana\n                                ? selectedLocation.thana\n                                : \"Thana\"\n                        }\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SelectArea;\n","import React, { useState, useEffect, useContext } from \"react\";\n// import { Card } from \"react-bootstrap\";\n// import emoji from \"react-easy-emoji\";\n\nimport AddArea from \"./AddArea\";\n// import Title from \"../generic/title\";\n// import CustomCard from \"../generic/CustomCard\";\nimport Infobar from \"../generic/infobar\";\nimport CustomTable from \"../generic/CustomTable\";\nimport SelectArea from \"./SelectArea\";\nimport CustomAlert from \"../generic/CustomAlert\";\nimport { LocationContext } from \"../../contexts/LocationContext\";\n// import { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst AvailableAreas = (props) => {\n    const [status, setStatus] = useState(undefined);\n    const [availableAreas, setAvailableAreas] = useState([]);\n\n    const { location } = useContext(LocationContext);\n\n    // Themes\n    // const { isLightTheme, theme } = useContext(ThemeContext);\n    // const link = isLightTheme ? theme.light.link : theme.dark.link;\n    // const custom_text = isLightTheme\n    //     ? theme.light.custom_text\n    //     : theme.dark.custom_text;\n\n    useEffect(() => {\n        const API_URL = \"/availablearea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                location: location,\n                search_data: props.searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setAvailableAreas(data.Areas);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [props.searchData, location]);\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Area Name\" },\n            { className: \"\", value: \"Add Area\" },\n        ],\n        allowedEntry: [\"area_name\"],\n    };\n\n    return (\n        // <CustomCard\n        //     status={status}\n        //     setStatus={setStatus}\n        //     values={availableAreas}\n        //     cardBodyData={(availableArea) => (\n        //         <>\n        //             <Card.Title>{availableArea.area_name}</Card.Title>\n\n        //             <div>\n        //                 <Title>Thana: </Title> {availableArea.thana}\n        //                 <br />\n        //                 <Title>District: </Title> {availableArea.district}\n        //                 {/* <div className={\"py-2\" + link}>\n        //                     <a\n        //                         target=\"_blank\"\n        //                         rel=\"noreferrer\"\n        //                         className={custom_text}\n        //                         href={`http://www.google.com/maps/place/${availableArea.lati},${availableArea.longi}`}\n        //                     >\n        //                         Open in Google Map\n        //                     </a>\n        //                 </div> */}\n        //             </div>\n\n        //             {/* <div className=\"mt-2\"> */}\n        //             <div className=\"mt-3\">\n        //                 <AddArea area={availableArea} />\n        //             </div>\n        //         </>\n        //     )}\n        //     noValueInfo={\n        //         <>No new areas to show to add to your area {emoji(\"☹\")}</>\n        //     }\n        // />\n        <>\n            {status && <CustomAlert status={status} />}\n\n            <div className=\"mb-4\">\n                <SelectArea />\n            </div>\n\n            {availableAreas.length ? (\n                <CustomTable\n                    ths={tableData.ths}\n                    datas={availableAreas}\n                    allowedEntry={tableData.allowedEntry}\n                    ActionComponents={[\n                        {\n                            component: (availableArea) => (\n                                <AddArea area={availableArea} />\n                            ),\n                            className: \"\",\n                        },\n                    ]}\n                />\n            ) : (\n                <Infobar>\n                    You have already added all the areas of this category 😁\n                </Infobar>\n            )}\n        </>\n    );\n};\n\nexport default AvailableAreas;\n","import React, { useContext, useState } from \"react\";\n// import emoji from \"react-easy-emoji\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport ServiceAreas from \"./ServiceAreas\";\nimport SearchBar from \"../generic/SearchBar\";\nimport AvailableAreas from \"./AvailableAreas\";\nimport LocationContextProvider from \"../../contexts/LocationContext\";\n\nconst Areas = (props) => {\n    const [searchData, setSearchData] = useState(\"\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    return (\n        <LocationContextProvider>\n            <div className={\"text-center\" + syntax}>\n                <h4 className={\"mb-5 text-center\" + syntax}>\n                    Add your service area\n                </h4>\n\n                <SearchBar\n                    handleChange={handleChange}\n                    placeholder=\"Search area name....\"\n                    // searchBy={<>Search areas by Area Name {emoji(\"😄\")}</>}\n                />\n\n                <h4 className={\"mb-4 text-center\" + syntax}>\n                    Your Service Areas\n                </h4>\n\n                <div className=\"mb-4\">\n                    <ServiceAreas searchData={searchData} />\n                </div>\n\n                <h4 className={\"mt-5 text-center\" + syntax}>Available Areas</h4>\n\n                <div className=\"my-4\">\n                    <AvailableAreas searchData={searchData} />\n                </div>\n            </div>\n        </LocationContextProvider>\n    );\n};\n\nexport default Areas;\n","import React from \"react\";\n\nimport Areas from \"../components/areas/Areas\";\nimport Layout from \"../components/generic/layout\";\n\nconst Home = () => {\n    return (\n        <Layout>\n            <Areas />\n        </Layout>\n    );\n};\n\nexport default Home;\n","import Moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { AppBar, Tabs, Tab, Box } from \"@material-ui/core\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Infobar from \"../generic/infobar\";\nimport SearchBar from \"../generic/SearchBar\";\nimport CustomTable from \"../generic/CustomTable\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport DeleteModal from \"../generic/DeleteModal\";\n\nconst History = (props) => {\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    const [value, setValue] = useState(0);\n    const [flag, setFlag] = useState(true);\n    const [status, setStatus] = useState(undefined);\n    const [searchData, setSearchData] = useState(\"\");\n    const [activeHistories, setActiveHistories] = useState([]);\n    const [statusVariant, setStatusVariant] = useState(undefined);\n    const [deliveredHistories, setDeliveredHistories] = useState([]);\n    const [cancelledHistories, setCancelledHistories] = useState([]);\n    const [tabs] = useState(\n        isServiceProvider\n            ? [\"Delivered Orders\", \"Cancelled Orders\"]\n            : [\"Active Orders\", \"Delivered Orders\", \"Cancelled Orders\"]\n    );\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        // Delivered Orders\n        let API_URL = isServiceProvider\n            ? \"/getserviceorderhistory/\"\n            : \"/orders/history/delivered/\";\n\n        const loadData = async () => {\n            let bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            let response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            let data = await response.json();\n            setDeliveredHistories(data.details);\n            // console.log(data.details);\n\n            // Active Orders\n            API_URL = \"/orders/history/active/\";\n\n            bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n            setActiveHistories(data.details);\n            // console.log(data.details);\n\n            // Cancelled Orders\n            API_URL = isServiceProvider\n                ? \"/getServiceCancelledOrderHistory/\"\n                : \"/orders/history/cancelled/\";\n\n            bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n            setCancelledHistories(data.details);\n            // console.log(data.details);\n        };\n        loadData();\n    }, [isServiceProvider, searchData, flag]);\n\n    const handleCancel = async (order_id) => {\n        const API_URL = \"/order/cancel/\";\n\n        const bodyData = {\n            order_id: order_id,\n            userid: localStorage.getItem(\"userID\"),\n        };\n\n        const response = await fetch(API_URL, {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(bodyData),\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n            setStatusVariant(\"success\");\n            setStatus(data.message);\n        } else {\n            setStatusVariant(\"danger\");\n            setStatus(data.message);\n        }\n    };\n\n    const handleChange = (e) => setSearchData(e.target.value);\n    const updateFlag = () => setFlag(!flag);\n\n    // Tab related settings.....\n    const TabPanel = (props) => {\n        const { children, value, index, ...other } = props;\n\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`scrollable-auto-tabpanel-${index}`}\n                aria-labelledby={`scrollable-auto-tab-${index}`}\n                {...other}\n            >\n                {value === index && <Box>{children}</Box>}\n            </div>\n        );\n    };\n\n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n\n    const a11yProps = (index) => {\n        return {\n            id: `scrollable-auto-tab-${index}`,\n            \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n        };\n    };\n\n    const handleTabChange = (event, newValue) => setValue(newValue);\n\n    const tableData = {\n        activeThs: [\n            { className: \"\", value: \"Order ID\" },\n            { className: \"\", value: \"Phone\" },\n            { className: \"\", value: \"Address\" },\n            { className: \"\", value: \"Further Description\" },\n            { className: \"\", value: \"Payment\" },\n            { className: \"\", value: \"Time\" },\n            { className: \"\", value: \"Cancel\" },\n        ],\n        cancelledThs: isServiceProvider\n            ? [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Customer Details\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n                  { className: \"\", value: \"Cancelled By\" },\n              ]\n            : [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Phone\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n                  { className: \"\", value: \"Cancelled By\" },\n              ],\n        deliveredThs: isServiceProvider\n            ? [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Customer Details\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Employee\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n              ]\n            : [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Phone\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n              ],\n        tdsClassName: isServiceProvider\n            ? [\"\", \"\", \"text-break\", \"\", \"\"]\n            : [\"\", \"text-break\", \"\"],\n        activeAllowedEntry: [\n            \"customer_phone\",\n            \"address\",\n            \"further_description\",\n        ],\n        cancelledAllowedEntry: isServiceProvider\n            ? [\"customer_name\", \"address\", \"further_description\"]\n            : [\"customer_phone\", \"address\", \"further_description\"],\n        deliveredAllowedEntry: isServiceProvider\n            ? [\"customer_name\", \"address\", \"further_description\", \"employee\"]\n            : [\"customer_phone\", \"address\", \"further_description\"],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>Order History</h4>\n\n            <SearchBar\n                handleChange={handleChange}\n                placeholder=\"Search histories....\"\n                searchBy={<>Search by anything except time and cancelled by</>}\n            />\n\n            <AppBar\n                elevation={0}\n                position=\"static\"\n                className={\"rounded muted_border\" + ui}\n            >\n                <Tabs\n                    value={value}\n                    variant=\"fullWidth\"\n                    className={custom_text}\n                    onChange={handleTabChange}\n                    TabIndicatorProps={{ style: { background: mainColor } }}\n                >\n                    {tabs.map((tab) => (\n                        <Tab\n                            label={\n                                tab === \"Active Orders\" ? (\n                                    <div>\n                                        {tab}{\" \"}\n                                        <span\n                                            className={\n                                                \"badge badge-pill badge-\" + type\n                                            }\n                                        >\n                                            {activeHistories\n                                                ? activeHistories.length\n                                                : 0}\n                                        </span>\n                                    </div>\n                                ) : tab === \"Delivered Orders\" ? (\n                                    <div>\n                                        {tab}{\" \"}\n                                        <span\n                                            className={\n                                                \"badge badge-pill badge-\" + type\n                                            }\n                                        >\n                                            {deliveredHistories\n                                                ? deliveredHistories.length\n                                                : 0}\n                                        </span>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        {tab}{\" \"}\n                                        <span\n                                            className={\n                                                \"badge badge-pill badge-\" + type\n                                            }\n                                        >\n                                            {cancelledHistories\n                                                ? cancelledHistories.length\n                                                : 0}\n                                        </span>\n                                    </div>\n                                )\n                            }\n                            key={uuidv4()}\n                            {...a11yProps(uuidv4())}\n                            style={{ textTransform: \"none\" }}\n                        />\n                    ))}\n                </Tabs>\n            </AppBar>\n\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                />\n            )}\n\n            {tabs.map((tab, index) => (\n                <TabPanel\n                    key={uuidv4()}\n                    value={value}\n                    index={index}\n                    className=\"pt-4\"\n                >\n                    {(\n                        tab === \"Active Orders\"\n                            ? activeHistories\n                            : tab === \"Cancelled Orders\"\n                            ? cancelledHistories\n                            : deliveredHistories\n                    ) ? (\n                        <CustomTable\n                            ths={\n                                tab === \"Active Orders\"\n                                    ? tableData.activeThs\n                                    : tab === \"Cancelled Orders\"\n                                    ? tableData.cancelledThs\n                                    : tableData.deliveredThs\n                            }\n                            allowedEntry={\n                                tab === \"Active Orders\"\n                                    ? tableData.activeAllowedEntry\n                                    : tab === \"Cancelled Orders\"\n                                    ? tableData.cancelledAllowedEntry\n                                    : tableData.deliveredAllowedEntry\n                            }\n                            PreActionComponents={[\n                                {\n                                    component: (history) => (\n                                        <Link\n                                            to={`/order/details/${history.order_id}/`}\n                                        >\n                                            {history.order_id}\n                                        </Link>\n                                    ),\n                                    className: link,\n                                },\n                            ]}\n                            datas={\n                                tab === \"Active Orders\"\n                                    ? activeHistories\n                                    : tab === \"Cancelled Orders\"\n                                    ? cancelledHistories\n                                    : deliveredHistories\n                            }\n                            tdsClassName={tableData.tdsClassName}\n                            ActionComponents={\n                                tab === \"Active Orders\"\n                                    ? [\n                                          {\n                                              component: (history) => (\n                                                  <>\n                                                      <span className=\"font-weight-bold\">\n                                                          ৳{\" \"}\n                                                      </span>\n                                                      {history.payment}\n                                                  </>\n                                              ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) =>\n                                                  Moment(history.time).format(\n                                                      \"DD/MM/YY hh:mmA\"\n                                                  ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) => (\n                                                  <DeleteModal\n                                                      // deleteText=\"Cancel\"\n                                                      deleteTitle=\"Cancel Order\"\n                                                      updateFlag={updateFlag}\n                                                      handleAction={() =>\n                                                          handleCancel(\n                                                              history.order_id\n                                                          )\n                                                      }\n                                                      deleteIcon=\"ban\"\n                                                      modalBody={\n                                                          <>\n                                                              Do you really want\n                                                              to cancel this\n                                                              order?{\" \"}\n                                                              <span\n                                                                  className={\n                                                                      dangerTextColor\n                                                                  }\n                                                              >\n                                                                  Caution: This\n                                                                  action cannot\n                                                                  be undone\n                                                              </span>\n                                                          </>\n                                                      }\n                                                  />\n                                              ),\n                                              className: \"\",\n                                          },\n                                      ]\n                                    : tab === \"Cancelled Orders\"\n                                    ? [\n                                          {\n                                              component: (history) => (\n                                                  <>\n                                                      <span className=\"font-weight-bold\">\n                                                          ৳{\" \"}\n                                                      </span>\n                                                      {history.payment}\n                                                  </>\n                                              ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) =>\n                                                  Moment(history.time).format(\n                                                      \"DD/MM/YY hh:mmA\"\n                                                  ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) => (\n                                                  <span\n                                                      className={\n                                                          dangerTextColor\n                                                      }\n                                                  >\n                                                      {history.reason}\n                                                  </span>\n                                              ),\n                                              className: \"\",\n                                          },\n                                      ]\n                                    : [\n                                          {\n                                              component: (history) => (\n                                                  <>\n                                                      <span className=\"font-weight-bold\">\n                                                          ৳{\" \"}\n                                                      </span>\n                                                      {history.payment}\n                                                  </>\n                                              ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) =>\n                                                  Moment(history.time).format(\n                                                      \"DD/MM/YY hh:mmA\"\n                                                  ),\n                                              className: \"\",\n                                          },\n                                      ]\n                            }\n                        />\n                    ) : tab === \"Active Orders\" ? (\n                        <Infobar>\n                            You currently don't have any active orders{\" \"}\n                            {emoji(\"🥲\")}\n                        </Infobar>\n                    ) : tab === \"Cancelled Orders\" ? (\n                        <Infobar>\n                            You haven't cancelled any orders yet! {emoji(\"😄\")}\n                        </Infobar>\n                    ) : (\n                        <Infobar>\n                            No delivered orders yet! {emoji(\"😅\")}\n                        </Infobar>\n                    )}\n                </TabPanel>\n            ))}\n        </>\n    );\n};\n\nexport default History;\n","import React from \"react\";\nimport Layout from \"../components/generic/layout\";\nimport History from \"../components/user/History\";\n\nconst Home = () => {\n    return (\n        <Layout>\n            <History />\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { useContext } from \"react\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Counter = (props) => {\n    const { items, handleAddOne, handleMinusOne, postCountUpdate } = useContext(\n        CartContext\n    );\n    const [count, setCount] = useState(1);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    useEffect(() => {\n        items.map((item) =>\n            item.id === props.id ? setCount(item.count) : undefined\n        );\n    }, [items, props.id]);\n\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <Icon\n                style={{\n                    fontSize: \"1.125rem\",\n                    color: \"#d9534f\",\n                }}\n                onClick={() => handleMinusOne(props.id)}\n                className=\"mt-1\"\n            >\n                remove_circle\n            </Icon>\n            <input\n                type=\"number\"\n                value={count}\n                style={{ maxWidth: \"2.5rem\" }}\n                onChange={(e) => setCount(e.target.value)}\n                className={\"show-cart-count mx-1\" + syntax}\n                onBlur={(e) => postCountUpdate(props.id, e.target.value)}\n                onKeyDown={(e) =>\n                    [\"e\", \"E\", \"+\", \"-\", \".\"].includes(e.key) &&\n                    e.preventDefault()\n                }\n            />\n            <Icon\n                style={{\n                    fontSize: \"1.125rem\",\n                    color: \"#0275d8\",\n                }}\n                onClick={() => handleAddOne(props.id)}\n                className=\"mt-1\"\n            >\n                add_circle\n            </Icon>\n        </div>\n    );\n};\n\nexport default Counter;\n","import React from \"react\";\nimport Counter from \"../generic/counter\";\nimport { Table, Button } from \"react-bootstrap\";\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { Link } from \"react-router-dom\";\nimport emoji from \"react-easy-emoji\";\nimport Infobar from \"../generic/infobar\";\n\nconst Cart = () => {\n    const {\n        items,\n        discount,\n        totalPrice,\n        handleRemove,\n        subTotalPrice,\n    } = useContext(CartContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const variant = isLightTheme ? \"light\" : \"dark\";\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    return (\n        <div>\n            {items.length > 0 ? (\n                <div>\n                    <section\n                        // className={\n                        //     \"jumbotron text-center p-3 mb-3\" +\n                        //     ui +\n                        //     syntax +\n                        //     border\n                        // }\n                        className={\n                            \"jumbotron text-center p-3 mb-3 muted_border\" +\n                            ui +\n                            syntax\n                        }\n                    >\n                        <h5 className=\"jumbotron-heading my-auto cart-header\">\n                            Your Cart\n                        </h5>\n                    </section>\n                    <div\n                        // id=\"cart-table\"\n                        // className={\"shadow rounded mb-3\" + border}\n                        className={\"rounded mb-3 muted_border\"}\n                    >\n                        <Table\n                            hover\n                            striped\n                            responsive=\"sm\"\n                            className=\"mb-0\"\n                            variant={variant}\n                        >\n                            <thead>\n                                <tr>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Product\n                                    </th>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Quantity\n                                    </th>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Price\n                                    </th>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Remove\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {items.map((item) => (\n                                    <tr key={uuidv4()}>\n                                        <td className=\"text-center align-middle\">\n                                            {item.productName}\n                                            <br />({item.qty} {item.unit})\n                                        </td>\n                                        <td className=\"text-center align-middle\">\n                                            <Counter id={item.id} />\n                                        </td>\n                                        <td className=\"text-center align-middle\">\n                                            Tk {item.count * item.price}\n                                        </td>\n                                        <td className=\"text-center align-middle\">\n                                            <button\n                                                onClick={() => {\n                                                    handleRemove(item.id);\n                                                }}\n                                                className=\"btn btn-xs btn-danger\"\n                                            >\n                                                <DeleteTwoToneIcon />\n                                            </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    </div>\n\n                    <div\n                        // className={\n                        //     \"row text-center rounded mx-auto shadow\" +\n                        //     ui +\n                        //     border +\n                        //     custom_text\n                        // }\n                        className={\n                            \"row text-center rounded mx-auto muted_border\" +\n                            ui +\n                            custom_text\n                        }\n                    >\n                        <div className=\"col-4 py-2 my-auto\">\n                            <div className=\"amount-label\">Sub Total</div>\n                            <div className=\"amount\">Tk {subTotalPrice}</div>\n                        </div>\n\n                        <div className=\"col-4 py-2 my-auto\">\n                            <div className=\"amount-label\">Discount</div>\n                            <div className=\"amount\">{discount}%</div>\n                        </div>\n\n                        <div className=\"col-4 py-2 my-auto\">\n                            <div className=\"amount-label\">Grand Total</div>\n                            <div className=\"amount\">Tk {totalPrice}</div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"mb-3\">\n                    <Infobar>Your cart is empty {emoji(\"🙁\")}</Infobar>\n                </div>\n            )}\n\n            <div className=\"row mt-3\">\n                <div className=\"col-sm-12 mb-2 col-md-6\">\n                    <Button\n                        variant={\"outline-\" + type}\n                        className=\"w-100\"\n                        as={Link}\n                        to={`/service/provider/${sessionStorage.getItem(\n                            \"service_id\"\n                        )}`}\n                    >\n                        <Icon\n                            style={{\n                                fontSize: \"1.125rem\",\n                            }}\n                            className=\"align-middle mr-2 mb-1\"\n                        >\n                            add_shopping_cart\n                        </Icon>\n                        Continue Shopping\n                    </Button>\n                </div>\n                <div className=\"col-sm-12 col-md-6 mb-2 text-right\">\n                    <Button\n                        to=\"/checkout\"\n                        variant={type}\n                        className=\"w-100\"\n                        disabled={!items.length > 0}\n                        as={items.length > 0 && Link}\n                    >\n                        <Icon\n                            style={{\n                                fontSize: \"1.125rem\",\n                            }}\n                            className=\"align-middle mr-2 mb-1\"\n                        >\n                            check\n                        </Icon>\n                        Checkout\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Cart;\n","import React from 'react';\n// import CartContextProvider from '../contexts/CartContext';\nimport Cart from '../components/shoppingCart/cart';\nimport Layout from '../components/generic/layout';\n\nconst ShoppingCart = () => {\n    return (\n        <Layout>\n            {/* <CartContextProvider> */}\n                <Cart />\n            {/* </CartContextProvider> */}\n        </Layout>\n    );\n}\n \nexport default ShoppingCart;","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment-timezone\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport emoji from \"react-easy-emoji\";\nimport Infobar from \"../generic/infobar\";\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst Checkout = (props) => {\n    const form = useRef(null);\n    const { items, discount, totalPrice, clearItems } = useContext(CartContext);\n\n    const [statusVariant] = useState(\"danger\");\n    const [addressess, setAddressess] = useState([]);\n    const [newAddress, setNewAddress] = useState({});\n    const [status, setStatus] = useState(undefined);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const variant = isLightTheme ? \"light\" : \"dark\";\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const success = isLightTheme ? theme.light.success : theme.dark.success;\n\n    useEffect(() => {\n        const loadData = async () => {\n            const API_URL = \"/getCustomerAddress/\";\n\n            const object = {\n                customerId: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            // if (response.status === 401) handleLogOut();\n\n            const data = await response.json();\n\n            if (!response.ok) setStatus(data.detail);\n            else setAddressess(data.address);\n        };\n\n        loadData();\n    }, []);\n\n    const handleSelect = (e) => {\n        let tmp = {};\n        addressess.map(\n            (address) =>\n                address.customer_add_id.toString() === e.target.value &&\n                (tmp = address)\n        );\n        setNewAddress(tmp);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let API_URL = \"/createCustomerAddress/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n            object[\"userid\"] = localStorage.getItem(\"userID\");\n\n            try {\n                // Confirming Address\n                let response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                let data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n                else {\n                    // Confirming Order\n                    API_URL = \"/createcustomerorder/\";\n\n                    let details = [];\n\n                    items.map((item) =>\n                        details.push({\n                            price: item.price,\n                            product_id: item.id,\n                            qty: `${item.qty * item.count} ${item.unit}`,\n                        })\n                    );\n\n                    var currentTime = new Date();\n                    const convertTime = moment(currentTime)\n                        .tz(\"America/Danmarkshavn\")\n                        .format(\"YYYY-MM-DD HH:mm:ss\");\n                    const today = new Date(convertTime);\n                    // nothing here\n                    const date =\n                        today.getFullYear() +\n                        \"-\" +\n                        (today.getMonth() + 1) +\n                        \"-\" +\n                        today.getDate();\n                    const time = today.getHours() + \":\" + today.getMinutes();\n\n                    object = {};\n                    object[\"userid\"] = localStorage.getItem(\"userID\");\n                    object[\"service_id\"] = sessionStorage.getItem(\"service_id\");\n                    object[\"order_time\"] = date + \" \" + time;\n                    object[\"customer_address_id\"] = data.customer_add_id;\n                    object[\"payment\"] = totalPrice;\n                    object[\"details\"] = details;\n\n                    response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(object),\n                    });\n\n                    data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n                    else {\n                        // setStatusVariant(\"success\");\n                        // setStatus(\n                        //     \"We have recieved your order successfully 😄\"\n                        // );\n                        handleCleanUP(data.order_id);\n                    }\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleCleanUP = (order_id) => {\n        clearItems();\n        sessionStorage.setItem(\"service_id\", \"\");\n        props.history.push(`/order/success/${order_id}`);\n    };\n\n    return (\n        // <div className={\"card\" + ui + syntax + border}>\n        <div className={\"card\" + ui + syntax}>\n            <div className=\"card-body row\">\n                <div className=\"col-md-4 order-md-2 mb-4\">\n                    <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n                        <span style={{ opacity: \"0.7\" }}>Your cart</span>\n                        <span className={\"badge badge-pill badge-\" + type}>\n                            {items.length}\n                        </span>\n                    </h4>\n\n                    {items.length > 0 ? (\n                        <div\n                            // className={\"rounded mb-3\" + border}\n                            className={\"rounded mb-3 muted_border\"}\n                            style={{ height: \"15rem\", overflowY: \"scroll\" }}\n                        >\n                            <Table responsive=\"sm\" striped variant={variant}>\n                                <tbody>\n                                    {items.map((item) => (\n                                        <tr key={item.id}>\n                                            <td className=\"align-middle\">\n                                                {item.productName}\n                                                <br />\n                                                <small\n                                                    style={{\n                                                        opacity: \"0.7\",\n                                                    }}\n                                                >\n                                                    Item count: {item.count},\n                                                    Per Item Price:{\" \"}\n                                                    <span className=\"font-weight-bold\">\n                                                        ৳{\" \"}\n                                                    </span>\n                                                    {item.price}\n                                                </small>\n                                            </td>\n                                            <td className=\"text-right align-middle\">\n                                                Tk {item.count * item.price}\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        </div>\n                    ) : (\n                        <div className=\"mb-3\">\n                            <Infobar>Your cart is empty {emoji(\"🙁\")}</Infobar>\n                        </div>\n                    )}\n\n                    <div className={\"text-center mb-3\" + link}>\n                        <Link to=\"/cart\">Back to shopping cart</Link>\n                    </div>\n\n                    {/* <div className={\"rounded mb-3\" + border}> */}\n                    <div className={\"rounded mb-3 muted_border\"}>\n                        <Table responsive=\"sm\" striped variant={variant}>\n                            <tbody>\n                                <tr>\n                                    <td\n                                        className={\n                                            \"align-middle text-\" + success\n                                        }\n                                    >\n                                        <div>\n                                            <h6 className=\"my-0\">Discount</h6>\n                                            <small>\n                                                For Early Birds: {discount}%\n                                            </small>\n                                        </div>\n                                    </td>\n                                    <td className=\"text-right align-middle\">\n                                        Tk -\n                                        {Math.floor(\n                                            totalPrice * (discount / 100)\n                                        )}\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td className=\"align-middle\">\n                                        <span>Total (BDT)</span>\n                                    </td>\n                                    <td className=\"text-right align-middle\">\n                                        <strong>TK {totalPrice}</strong>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </div>\n\n                    {/* <form className={\"card p-2\" + ui + border}> */}\n                    <form className={\"card p-2\" + ui}>\n                        <div className=\"input-group\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Promo code\"\n                                className=\"form-control\"\n                            />\n                            <div className=\"input-group-append\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-secondary\"\n                                >\n                                    Redeem\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-8 order-md-1\">\n                    <h4 className=\"mb-3\">Shipping address</h4>\n                    <form\n                        ref={form}\n                        noValidate\n                        onSubmit={handleSubmit}\n                        className=\"needs-validation\"\n                    >\n                        <div className=\"row\">\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"username\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"user\"]}\n                                    />\n                                    Name\n                                </label>\n                                <input\n                                    readOnly\n                                    type=\"text\"\n                                    id=\"username\"\n                                    defaultValue={localStorage.getItem(\n                                        \"username\"\n                                    )}\n                                    // className={\n                                    //     \"text-center form-control\" + border\n                                    // }\n                                    className={\n                                        \"text-center form-control\"\n                                    }\n                                />\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"phone\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"phone\"]}\n                                    />\n                                    Phone\n                                </label>\n                                <input\n                                    readOnly\n                                    id=\"phone\"\n                                    type=\"phone\"\n                                    // className={\n                                    //     \"text-center form-control\" + border\n                                    // }\n                                    className={\n                                        \"text-center form-control\"\n                                    }\n                                    defaultValue={localStorage.getItem(\n                                        \"phone_number\"\n                                    )}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"mb-3\">\n                            <small style={{ opacity: \"0.7\" }}>\n                                Want them to call you to another number? Provide\n                                it in the further description filed\n                            </small>\n                        </div>\n\n                        <hr\n                            className=\"mb-4\"\n                            style={{\n                                borderColor: \"inherit\",\n                                opacity: \"0.2\",\n                            }}\n                        />\n\n                        <div className=\"row\">\n                            <div className=\"col mb-3\">\n                                <label htmlFor=\"address\">Addresses</label>\n                                <select\n                                    required\n                                    id=\"address\"\n                                    onChange={handleSelect}\n                                    // className={\n                                    //     \"custom-select d-block w-100\" + border\n                                    // }\n                                    className={\n                                        \"custom-select d-block w-100\"\n                                    }\n                                >\n                                    <option defaultValue=\"\">\n                                        Select from saved addresses...\n                                    </option>\n                                    {addressess.map((address) => (\n                                        <option\n                                            key={address.customer_add_id}\n                                            value={address.customer_add_id}\n                                        >\n                                            House No: {address.house_no}, Road\n                                            No: {address.road_no}, Area :{\" \"}\n                                            {address.area_name}, Further\n                                            Description:{\" \"}\n                                            {address.further_description\n                                                ? address.further_description\n                                                : \"Null\"}\n                                            ,\n                                        </option>\n                                    ))}\n                                </select>\n                                <div className=\"invalid-feedback\">\n                                    Please select a valid address\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"house_no\">House No</label>\n                                <input\n                                    required\n                                    type=\"text\"\n                                    id=\"house_no\"\n                                    name=\"house_no\"\n                                    placeholder=\"8\"\n                                    defaultValue={newAddress.house_no}\n                                    className={\n                                        \"form-control text-center\"\n                                    }\n                                    // className={\n                                    //     \"form-control text-center\" + border\n                                    // }\n                                />\n                                <div className=\"invalid-feedback\">\n                                    Please select a valid house.\n                                </div>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"road_no\">Road No</label>\n                                <input\n                                    required\n                                    type=\"text\"\n                                    id=\"road_no\"\n                                    name=\"road_no\"\n                                    placeholder=\"2/B\"\n                                    defaultValue={newAddress.road_no}\n                                    // className={\n                                    //     \"form-control text-center\" + border\n                                    // }\n                                    className={\n                                        \"form-control text-center\"\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">\n                                    Please provide a valid road number.\n                                </div>\n                            </div>\n                            <div className=\"d-none\">\n                                <label htmlFor=\"area_id\">Area ID</label>\n                                <input\n                                    required\n                                    type=\"text\"\n                                    id=\"area_id\"\n                                    name=\"area_id\"\n                                    placeholder=\"1209\"\n                                    defaultValue={sessionStorage.getItem(\n                                        \"areaID\"\n                                    )}\n                                    // className={\n                                    //     \"form-control text-center\" + border\n                                    // }\n                                    className={\n                                        \"form-control text-center\"\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">\n                                    Area ID is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"mb-4\">\n                            <label htmlFor=\"further_description\">\n                                Further Description\n                            </label>\n                            <input\n                                required\n                                type=\"text\"\n                                id=\"further_description\"\n                                name=\"further_description\"\n                                defaultValue={newAddress.further_description}\n                                placeholder=\"Sector-17, Uttara, Dhaka, Phone: 012xx-xxx-xxx\"\n                                // className={\"form-control\" + border}\n                                className={\"form-control\"}\n                            />\n                            <div className=\"invalid-feedback\">\n                                Please enter your shipping further description.\n                            </div>\n                        </div>\n\n                        <h4 className=\"mb-3\">Payment</h4>\n\n                        <div className=\"d-block my-3\">\n                            <div className=\"custom-control custom-radio\">\n                                <input\n                                    disabled\n                                    id=\"bkash\"\n                                    type=\"radio\"\n                                    name=\"paymentMethod\"\n                                    className=\"custom-control-input\"\n                                />\n                                <label\n                                    htmlFor=\"bkash\"\n                                    className=\"custom-control-label\"\n                                >\n                                    Bkash\n                                </label>\n                            </div>\n\n                            <div className=\"custom-control custom-radio\">\n                                <input\n                                    required\n                                    type=\"radio\"\n                                    defaultChecked\n                                    id=\"cashOnDelivery\"\n                                    className=\"custom-control-input\"\n                                />\n                                <label\n                                    htmlFor=\"cashOnDelivery\"\n                                    className=\"custom-control-label\"\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"hand-holding-usd\"]}\n                                    />\n                                    Cash on delivery\n                                </label>\n                            </div>\n                        </div>\n\n                        <hr\n                            className=\"mb-4\"\n                            style={{\n                                borderColor: \"inherit\",\n                                opacity: \"0.2\",\n                            }}\n                        />\n\n                        {status && (\n                            <CustomAlert\n                                variant={statusVariant}\n                                status={status}\n                            />\n                        )}\n\n                        <div className=\"row mt-3\">\n                            <div className=\"col-sm-12 mb-2 col-md-6\">\n                                <Button\n                                    to=\"/\"\n                                    as={Link}\n                                    variant={\"outline-\" + type}\n                                    className=\"w-100\"\n                                    disabled={\n                                        items.length &&\n                                        !(statusVariant === \"success\")\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"home\"]}\n                                    />\n                                    Back To Home Page\n                                </Button>\n                            </div>\n                            <div className=\"col-sm-12 col-md-6 mb-2 text-right\">\n                                <Button\n                                    type=\"submit\"\n                                    variant={type}\n                                    className=\"w-100\"\n                                    disabled={\n                                        !items.length ||\n                                        statusVariant === \"success\"\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"check-circle\"]}\n                                    />\n                                    Confirm Purchase\n                                </Button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Checkout);\n","import React from \"react\";\n// import CartContextProvider from \"../contexts/CartContext\";\nimport Layout from \"../components/generic/layout\";\nimport Checkout from \"../components/shoppingCart/checkout\";\n\nconst CheckoutPage = () => {\n    return (\n        <Layout>\n            {/* <CartContextProvider> */}\n                <Checkout />\n            {/* </CartContextProvider> */}\n        </Layout>\n    );\n};\n\nexport default CheckoutPage;\n","import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst NotFound = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    return (\n        <div className={\"card\" + ui}>\n            <div\n                // className={\n                //     \"d-flex justify-content-center rounded shadow mx-auto\" + border\n                // }\n                className={\"d-flex justify-content-center card-body\"}\n                style={{ maxWidth: \"55rem\" }}\n            >\n                <div className=\"notfound pb-4 pb-md-5\">\n                    <div className=\"notfound-404\">\n                        <h1>404</h1>\n                    </div>\n                    <h2 className={\"mb-3 mt-5 pt-3\" + syntax}>\n                        Oops! This Page Could Not Be Found\n                    </h2>\n                    <p className={syntax}>\n                        Sorry, but the page you are looking for does not exist,\n                        have been removed, name changed or is temporarily\n                        unavailable\n                    </p>\n                    <Button variant={type} className=\"mt-3\" as={Link} to=\"/\">\n                        <FontAwesomeIcon\n                            className=\"mr-2\"\n                            icon={[\"fas\", \"home\"]}\n                        />\n                        Homepage\n                    </Button>\n                    <Button\n                        variant={type}\n                        className=\"mt-3 ml-2\"\n                        onClick={() => props.history.goBack()}\n                    >\n                        <FontAwesomeIcon\n                            className=\"mr-2\"\n                            icon={[\"fas\", \"arrow-circle-left\"]}\n                        />\n                        Go Back\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(NotFound);\n","import React from \"react\";\nimport Layout from \"../components/generic/layout\";\nimport NotFound from \"../components/generic/NotFound\";\n\nconst NotFoundPage = () => {\n    return (\n        <Layout>\n            <NotFound />\n        </Layout>\n    );\n};\n\nexport default NotFoundPage;\n","import emoji from \"react-easy-emoji\";\nimport { Col, Row } from \"react-bootstrap\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Chart, Line, Bar, Polar } from \"react-chartjs-2\";\nimport \"chart.piecelabel.js\";\nimport \"chartjs-plugin-datalabels\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Title from \"../generic/title\";\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst Charts = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const pointBorderColor = isLightTheme ? \"#205c85\" : \"#ffae00\";\n    const ticksBackdropColor = isLightTheme ? \"#f8f9fa\" : \"#343a40\";\n    const lineChartbg = isLightTheme\n        ? theme.light.lineChartbg\n        : theme.dark.lineChartbg;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const fontColor = isLightTheme ? \"black\" : \"white\";\n    const gridColor = isLightTheme\n        ? \"rgba(0, 0, 0, 0.3)\"\n        : \"rgba(255, 255, 255, 0.3)\";\n\n    const [status, setStatus] = useState(undefined);\n    const [barChartData, setBarChartData] = useState({});\n    const [lineChartData, setLineChartData] = useState({});\n    const [polarChartData, setPolarChartData] = useState({});\n\n    // componentDidMount\n    useEffect(() => {\n        const loadData = async () => {\n            // Pie chart\n            let API_URL = \"/piechart/\";\n            const bodyData = {\n                end_date: props.date.end_date,\n                start_date: props.date.start_date,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                let response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                let data = await response.json();\n                // console.log(data.details);\n\n                if (!response.ok) setStatus(data.message);\n                else setPolarChartData(data.details);\n\n                // Line chart\n                API_URL = \"/linechart/\";\n\n                response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                data = await response.json();\n                // console.log(data.details);\n\n                if (!response.ok) setStatus(data.message);\n                else setLineChartData(data.details);\n\n                // Bar chart\n                API_URL = \"/horizontalbarchart/\";\n\n                response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                data = await response.json();\n                // console.log(data.details);\n                // console.log(data.details[0].map((e) => e[0].split(\" \")));\n\n                if (!response.ok) setStatus(data.message);\n                else setBarChartData(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [props.date]);\n\n    Chart.defaults.global.defaultFontColor = fontColor;\n    Chart.defaults.global.defaultFontFamily = \"Montserrat\";\n\n    // Chart.scaleService.defaults.radialLinear.ticks.backdropColor =\n    //     \"rgba(0, 0, 0, 0)\";\n    // Chart.defaults.scale.gridLines.color = \"#ddd\";\n\n    // This line of code took a lot of my time to figure 😑\n    Chart.helpers.each(Chart.instances, (instance) => instance.chart.update());\n\n    const chartsData = {\n        dataLine: {\n            // labels: [\n            //     \"January\",\n            //     \"February\",\n            //     \"March\",\n            //     \"April\",\n            //     \"May\",\n            //     \"June\",\n            //     \"July\",\n            // ],\n            labels: lineChartData[0],\n            // labels: [\"3-1-2021\", \"3-4-2020\", \"4-16-2021\"],\n            options: {\n                // responsive: true,\n                legend: {\n                    display: false,\n                },\n                plugins: {\n                    datalabels: {\n                        display: false,\n                    },\n                },\n                scales: {\n                    xAxes: [\n                        {\n                            // type: \"time\",\n                            // time: {\n                            //     unit: \"day\",\n                            //     unitStepSize: 1000,\n                            //     displayFormats: {\n                            //         millisecond: \"MMM DD, YY\",\n                            //         second: \"MMM DD, YY\",\n                            //         minute: \"MMM DD, YY\",\n                            //         hour: \"MMM DD, YY\",\n                            //         day: \"MMM DD, YY\",\n                            //         week: \"MMM DD, YY\",\n                            //         month: \"MMM DD, YY\",\n                            //         quarter: \"MMM DD, YY\",\n                            //         year: \"MMM DD, YY\",\n                            //     },\n                            // },\n\n                            ticks: {\n                                source: \"labels\",\n                            },\n\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Date\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                        },\n                    ],\n                    yAxes: [\n                        {\n                            // type: \"time\",\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Orders\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                            // ticks: {\n                            //     stepSize: 1,\n                            // },\n                        },\n                    ],\n                },\n            },\n            datasets: [\n                {\n                    // label: \"My First dataset\",\n                    fill: true,\n                    lineTension: 0.3,\n                    backgroundColor: lineChartbg,\n                    borderColor: mainColor,\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: pointBorderColor,\n                    pointBackgroundColor: \"rgb(255, 255, 255)\",\n                    pointBorderWidth: 8,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                    pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    // data: [28, 48, 40, 19, 86, 27, 90],\n                    data: lineChartData[1],\n                },\n            ],\n        },\n        dataBar: {\n            // labels: [\n            //     \"Red\",\n            //     \"Orange\",\n            //     \"Yellow\",\n            //     \"Green\",\n            //     \"Blue\",\n            //     \"Purple\",\n            //     \"Grey\",\n            // ],\n            labels: barChartData[0],\n            options: {\n                // responsive: true,\n                maintainAspectRatio: false,\n                legend: {\n                    display: false,\n                },\n                layout: {\n                    padding: {\n                        left: 0,\n                        right: 0,\n                        top: 20,\n                        bottom: 0,\n                    },\n                },\n                scales: {\n                    xAxes: [\n                        {\n                            // type: \"time\",\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Employee Name\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                        },\n                    ],\n                    yAxes: [\n                        {\n                            // type: \"text\",\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Income\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                        },\n                    ],\n                },\n            },\n            datasets: [\n                {\n                    // label: \"My First dataHorizontal\",\n                    // data: [22, 33, 55, 12, 86, 23, 14],\n                    data: barChartData[1],\n                    fill: false,\n                    datalabels: {\n                        align: \"end\",\n                        anchor: \"end\",\n                    },\n                    backgroundColor: [\n                        \"rgba(255, 99, 132, 0.4)\",\n                        \"rgba(75, 192, 192, 0.4)\",\n                        \"rgba(54, 162, 235, 0.4)\",\n                        \"rgba(255, 205, 86, 0.4)\",\n                        \"rgba(255, 159, 64, 0.4)\",\n                        // \"rgba(153, 102, 255, 0.6)\",\n                        // \"rgba(201, 203, 207, 0.6)\",\n                    ],\n                    borderColor: [\n                        \"rgb(255, 99, 132)\",\n                        \"rgb(75, 192, 192)\",\n                        \"rgb(54, 162, 235)\",\n                        \"rgb(255, 205, 86)\",\n                        \"rgb(255, 159, 64)\",\n                        // \"rgb(153, 102, 255)\",\n                        // \"rgb(201, 203, 207)\",\n                    ],\n                    borderWidth: 3,\n                },\n            ],\n        },\n        dataPolar: {\n            // labels: [[\"Red\", \"Red Red Red Red Red Red Red Red\"], \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\n            labels: polarChartData[0],\n            options: {\n                // responsive: true,\n                maintainAspectRatio: false,\n                // legend: {\n                //     position: \"bottom\",\n                // },\n                plugins: {\n                    datalabels: {\n                        display: false,\n                    },\n                },\n                pieceLabel: {\n                    showZero: true,\n                    render: \"percentage\",\n                    fontColor: fontColor,\n                },\n                scale: {\n                    gridLines: {\n                        color: gridColor,\n                    },\n                    ticks: {\n                        backdropColor: ticksBackdropColor,\n                    },\n                },\n            },\n            datasets: [\n                {\n                    // title: \"My First dataHorizontal\",\n                    // data: [300, 50, 100, 40, 120],\n                    data: polarChartData[1],\n                    borderAlign: \"inner\",\n                    // borderColor: \"#777\",\n                    borderColor: [\n                        \"rgba(247, 70, 74, 1)\",\n                        \"rgba(70, 191, 189, 1)\",\n                        \"rgba(253, 180, 92, 1)\",\n                        \"rgba(54, 162, 235, 1)\",\n                        \"rgba(255, 99, 132, 1)\",\n                        \"rgba(172, 100, 173, 1)\",\n                    ],\n                    backgroundColor: [\n                        \"rgba(247, 70, 74, 0.4)\",\n                        \"rgba(70, 191, 189, 0.4)\",\n                        \"rgba(253, 180, 92, 0.4)\",\n                        \"rgba(54, 162, 235, 0.4)\",\n                        \"rgba(255, 99, 132, 0.4)\",\n                        \"rgba(172, 100, 173, 0.4)\",\n                    ],\n                    hoverBackgroundColor: [\n                        \"#FF5A5E\",\n                        \"#5AD3D1\",\n                        \"#FFC870\",\n                        \"rgba(54, 162, 235, 0.8)\",\n                        \"rgba(255, 99, 132, 0.8)\",\n                        \"#DA92DB\",\n                    ],\n                    borderWidth: 3,\n                },\n            ],\n        },\n    };\n\n    return (\n        <>\n            <Row>\n                {status && <CustomAlert status={status} />}\n\n                <Col lg={6} className=\"mb-4\">\n                    {props.extraData}\n                </Col>\n\n                <Col lg={6} className=\"mb-4\">\n                    {/* <div className={\"card h-100\" + ui + syntax + border}> */}\n                    <div className={\"card h-100\" + ui + syntax}>\n                        {lineChartData[0] && lineChartData[0].length > 0 ? (\n                            <div className=\"p-2 p-md-3\">\n                                {lineChartData[0] && (\n                                    <div className=\"text-center mb-3\">\n                                        {emoji(\"🔥\")} Top{\" \"}\n                                        <Title>{lineChartData[0].length}</Title>{\" \"}\n                                        most ordered\n                                        {Object.keys(lineChartData).length > 1\n                                            ? \" days \"\n                                            : \" day \"}\n                                        {emoji(\"🔥\")}\n                                    </div>\n                                )}\n                                <Line\n                                    data={chartsData.dataLine}\n                                    options={chartsData.dataLine.options}\n                                />\n                            </div>\n                        ) : (\n                            <div className=\"card-body mx-auto mt-2 d-flex align-items-center\">\n                                <h5>\n                                    Not enough data to show a chart!{\" \"}\n                                    {emoji(\"🙁\")}\n                                </h5>\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                <Col lg={6} className=\"mb-4\">\n                    <div\n                        // className={\"card\" + ui + syntax + border}\n                        className={\"card\" + ui + syntax}\n                        style={{ height: \"56vh\" }}\n                    >\n                        {polarChartData[0] && polarChartData[0].length > 0 ? (\n                            <div\n                                className=\"card-body\"\n                                style={{ maxHeight: \"50vh\" }}\n                            >\n                                {polarChartData[0] && (\n                                    <div className=\"text-center mb-3\">\n                                        {emoji(\"🔥\")} Top{\" \"}\n                                        <Title>\n                                            {polarChartData[0].length}\n                                        </Title>{\" \"}\n                                        sold\n                                        {Object.keys(lineChartData).length > 1\n                                            ? \" products \"\n                                            : \" product \"}\n                                        {emoji(\"🔥\")}\n                                    </div>\n                                )}\n                                <Polar\n                                    data={chartsData.dataPolar}\n                                    options={chartsData.dataPolar.options}\n                                />\n                            </div>\n                        ) : (\n                            <div className=\"card-body mx-auto mt-2 d-flex align-items-center\">\n                                <h5>\n                                    Not enough data to show a chart!{\" \"}\n                                    {emoji(\"🙁\")}\n                                </h5>\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                <Col lg={6} className=\"mb-4\">\n                    <div\n                        // className={\"card\" + ui + syntax + border}\n                        className={\"card\" + ui + syntax}\n                        style={{ height: \"56vh\" }}\n                    >\n                        {barChartData[0] && barChartData[0].length > 0 ? (\n                            <div\n                                className=\"card-body\"\n                                style={{ maxHeight: \"50vh\" }}\n                            >\n                                {barChartData[0] && (\n                                    <div className=\"text-center mb-3\">\n                                        {emoji(\"🔥\")} Top{\" \"}\n                                        <Title>{barChartData[0].length}</Title>\n                                        {Object.keys(lineChartData).length > 1\n                                            ? \" employees \"\n                                            : \" employee \"}{\" \"}\n                                        income {emoji(\"🔥\")}\n                                    </div>\n                                )}\n                                <Bar\n                                    data={chartsData.dataBar}\n                                    options={chartsData.dataBar.options}\n                                />\n                            </div>\n                        ) : (\n                            <div className=\"card-body mx-auto mt-2 d-flex align-items-center\">\n                                <h5>\n                                    Not enough data to show a chart!{\" \"}\n                                    {emoji(\"🙁\")}\n                                </h5>\n                            </div>\n                        )}\n                    </div>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Charts;\n","import moment from \"moment-timezone\";\nimport \"moment-duration-format\";\nimport emoji from \"react-easy-emoji\";\nimport { withRouter } from \"react-router-dom\";\nimport React, { useContext, useRef, useState, useEffect } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomTable from \"../generic/CustomTable\";\nimport Charts from \"./Charts\";\n\nconst Statistics = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [statistics, setStatistics] = useState({});\n\n    const currentTime = moment(new Date()).add(1, \"day\");\n    const convertTime = moment(currentTime)\n        .tz(\"America/Danmarkshavn\")\n        .format(\"YYYY-MM-DD HH:mm:ss\");\n    const today = new Date(convertTime);\n\n    const [date, setDate] = useState({\n        start_date: localStorage.getItem(\"start_date\")\n            ? localStorage.getItem(\"start_date\")\n            : moment(today).subtract(1, \"year\").format(\"YYYY-MM-DD\"),\n        end_date: localStorage.getItem(\"end_date\")\n            ? localStorage.getItem(\"end_date\")\n            : today.toLocaleDateString(\"en-CA\"),\n    });\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/getservicestats/\";\n\n        const loadData = async () => {\n            let object = {\n                ...date,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            // Check date validity\n            const start = moment(object[\"start_date\"]);\n            const end = moment(object[\"end_date\"]);\n\n            if (start.isBefore(end)) {\n                try {\n                    const response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(object),\n                    });\n\n                    const data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n                    else {\n                        setStatistics(data);\n                        setStatus(undefined);\n                    }\n                } catch (error) {\n                    setStatus(error);\n                }\n            } else setStatus(\"Start date must be lesser than End date\");\n        };\n\n        loadData();\n    }, [date]);\n\n    const handleSubmit = (e) => {\n        e && e.preventDefault();\n\n        const API_URL = \"/getservicestats/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n            object[\"end_date\"] = moment(object[\"end_date\"]).format(\n                \"YYYY-MM-DD\"\n            );\n\n            // Check date validity\n            const start = moment(object[\"start_date\"]);\n            const end = moment(object[\"end_date\"]);\n\n            if (start.isBefore(end)) {\n                // Set new date\n                setDate({\n                    start_date: object[\"start_date\"],\n                    end_date: object[\"end_date\"],\n                });\n\n                localStorage.setItem(\"start_date\", object[\"start_date\"]);\n                localStorage.setItem(\"end_date\", object[\"end_date\"]);\n\n                try {\n                    const response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(object),\n                    });\n\n                    const data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n                    else {\n                        setStatistics(data);\n                        setStatus(undefined);\n                    }\n                } catch (error) {\n                    setStatus(error);\n                }\n            } else setStatus(\"Start date must be lesser than End date\");\n        };\n\n        loadData();\n    };\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Employee Name\" },\n            { className: \"\", value: \"Phone Number\" },\n            { className: \"\", value: \"Delivered\" },\n            { className: \"\", value: \"Income\" },\n        ],\n        allowedEntry: [\"name\", \"phone\", \"delivered\"],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>\n                Statistics of last{\" \"}\n                <span className={custom_text}>\n                    {moment\n                        .duration(\n                            moment(date.end_date).diff(moment(date.start_date))\n                        )\n                        .format(\"Y [year] M [month] w [week] d [days]\")}\n                </span>\n            </h4>\n\n            {status && <CustomAlert status={status} />}\n\n            <Row>\n                <Col className=\"mb-4\">\n                    {/* <div className={\"card\" + ui + syntax + border}> */}\n                    <div className={\"card\" + ui + syntax}>\n                        <div className=\"card-body\">\n                            <form ref={form} onSubmit={handleSubmit}>\n                                <Row className=\"d-flex align-items-center\">\n                                    <Col lg={4}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"mr-2\"\n                                                    icon={[\n                                                        \"fas\",\n                                                        \"hourglass-start\",\n                                                    ]}\n                                                />\n                                                Start Date:\n                                            </Col>\n                                            <Col\n                                                md={7}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    // className={\n                                                    //     \"input-group rounded\" +\n                                                    //     border\n                                                    // }\n                                                    className={\n                                                        \"input-group rounded\"\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"date\"\n                                                        id=\"start_date\"\n                                                        name=\"start_date\"\n                                                        placeholder=\"2020-02-17\"\n                                                        defaultValue={\n                                                            date.start_date\n                                                        }\n                                                        className=\"form-control text-center rounded\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please select a valid\n                                                        date\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={4}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"mr-2\"\n                                                    icon={[\n                                                        \"fas\",\n                                                        \"hourglass-end\",\n                                                    ]}\n                                                />\n                                                End Date:\n                                            </Col>\n                                            <Col\n                                                md={7}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    // className={\n                                                    //     \"input-group rounded\" +\n                                                    //     border\n                                                    // }\n                                                    className={\n                                                        \"input-group rounded\"\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"date\"\n                                                        id=\"end_date\"\n                                                        name=\"end_date\"\n                                                        placeholder=\"2021-02-18\"\n                                                        defaultValue={\n                                                            date.end_date\n                                                        }\n                                                        className=\"form-control text-center rounded\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please provide a valid\n                                                        date\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={4}>\n                                        <Button\n                                            type=\"submit\"\n                                            variant={type}\n                                            className=\"w-100\"\n                                        >\n                                            <FontAwesomeIcon\n                                                className=\"mr-2\"\n                                                icon={[\n                                                    \"fas\",\n                                                    \"file-invoice-dollar\",\n                                                ]}\n                                            />\n                                            Update statistics\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </form>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n\n            <Charts\n                date={date}\n                extraData={\n                    // <div className={\"card h-100\" + ui + syntax + border}>\n                    <div className={\"card h-100\" + ui + syntax}>\n                        <div className=\"card-body d-flex mx-auto\">\n                            <div className=\"my-auto\">\n                                <div className=\"text-center mb-4\">\n                                    {emoji(\"🔥\")} Summary of your orders{\" \"}\n                                    {emoji(\"🔥\")}\n                                </div>\n\n                                <Row className=\"form-group\">\n                                    <Col className=\"my-auto\">\n                                        <FontAwesomeIcon\n                                            className=\"mr-2\"\n                                            icon={[\"fas\", \"sort-amount-down\"]}\n                                        />\n                                        Orders Recieved:\n                                    </Col>\n                                    <Col md={6} sm={12}>\n                                        <div\n                                            // className={\n                                            //     \"input-group rounded\" + border\n                                            // }\n                                            className={\"input-group rounded\"}\n                                        >\n                                            <input\n                                                readOnly\n                                                type=\"number\"\n                                                name=\"total_orders\"\n                                                defaultValue={\n                                                    statistics.total_orders\n                                                }\n                                                className=\"form-control text-center\"\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"form-group\">\n                                    <Col className=\"my-auto\">\n                                        <FontAwesomeIcon\n                                            className=\"mr-2\"\n                                            icon={[\"fas\", \"truck\"]}\n                                        />\n                                        Delivered:\n                                    </Col>\n                                    <Col md={6} sm={12}>\n                                        <div\n                                            // className={\n                                            //     \"input-group rounded\" + border\n                                            // }\n                                            className={\"input-group rounded\"}\n                                        >\n                                            <input\n                                                readOnly\n                                                type=\"number\"\n                                                name=\"delivered\"\n                                                defaultValue={\n                                                    statistics.delivered\n                                                }\n                                                className=\"form-control text-center\"\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col className=\"my-auto\">\n                                        <span className=\"font-weight-bold mr-2\">\n                                            ৳\n                                        </span>\n                                        Total Income (BDT):\n                                    </Col>\n                                    <Col md={6} sm={12}>\n                                        <div\n                                            // className={\n                                            //     \"input-group rounded\" + border\n                                            // }\n                                            className={\"input-group rounded\"}\n                                        >\n                                            <input\n                                                readOnly\n                                                type=\"number\"\n                                                name=\"income\"\n                                                defaultValue={statistics.income}\n                                                className=\"form-control text-center\"\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </div>\n                    </div>\n                }\n            />\n\n            {statistics.employee && statistics.employee.length > 0 && (\n                <Row>\n                    <Col>\n                        <CustomTable\n                            ths={tableData.ths}\n                            datas={statistics.employee}\n                            allowedEntry={tableData.allowedEntry}\n                            ActionComponents={[\n                                {\n                                    component: (employee) => (\n                                        <>\n                                            <span className=\"font-weight-bold\">\n                                                ৳{\" \"}\n                                            </span>\n                                            {employee.income}\n                                        </>\n                                    ),\n                                    className: \"\",\n                                },\n                            ]}\n                        />\n                    </Col>\n                </Row>\n            )}\n        </>\n    );\n};\n\nexport default withRouter(Statistics);\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport Statistics from \"../components/statistics/Statistics\";\n\nconst StatisticsPage = () => {\n    return (\n        <Layout>\n            <Statistics />\n        </Layout>\n    );\n};\n\nexport default StatisticsPage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomModal from \"../generic/CustomModal\";\n\nconst UpdateProductDetails = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleUpdate = () => {\n        const API_URL = \"/updateproduct/\";\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n\n            object[\"product_id\"] = props.id;\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatus(data.message);\n                setStatusVariant(\"danger\");\n            }\n        };\n        loadData();\n    };\n\n    return (\n        <CustomModal\n            actionVariant={type}\n            handleAction={handleUpdate}\n            modalTitle=\"Update Product Details\"\n            actionButtonBody={\n                <>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"wrench\"]}\n                    />\n                    Update\n                </>\n            }\n            modalButtonClass={\"btn btn-sm btn-\" + type}\n            modalBody={\n                <form ref={form}>\n                    {status &&\n                        (statusVariant === \"success\" ? (\n                            <CustomModalAlert\n                                status={status}\n                                setStatus={setStatus}\n                                variant={statusVariant}\n                                updateFlag={props.updateFlag}\n                            />\n                        ) : (\n                            <CustomAlert\n                                status={status}\n                                variant={statusVariant}\n                            />\n                        ))}\n\n                    <div className=\"form-group\">\n                        <label>Product Name</label>\n\n                        <div\n                            // className={\n                            //     \"form-group input-group rounded\" + border\n                            // }\n                            className={\n                                \"form-group input-group rounded\"\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-1\"\n                                        icon={[\"fab\", \"product-hunt\"]}\n                                    />\n                                </span>\n                            </div>\n                            <input\n                                disabled\n                                type=\"text\"\n                                name=\"product_name\"\n                                placeholder=\"Product Name\"\n                                className=\"form-control\"\n                                defaultValue={props.product.product_name}\n                            />\n                        </div>\n\n                        <label className=\"mt-3\">Price (Vat Excluded)</label>\n\n                        <div\n                            // className={\n                            //     \"form-group input-group rounded\" + border\n                            // }\n                            className={\n                                \"form-group input-group rounded\"\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text py-0\">\n                                    <span\n                                        className=\"font-weight-bold mx-1\"\n                                        style={{\n                                            fontSize: \"1.2rem\",\n                                        }}\n                                    >\n                                        ৳{\" \"}\n                                    </span>\n                                </span>\n                            </div>\n                            <input\n                                autoFocus\n                                name=\"price\"\n                                type=\"number\"\n                                placeholder=\"Product price\"\n                                defaultValue={props.product.price}\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </div>\n                </form>\n            }\n        >\n            <FontAwesomeIcon\n                className=\"fa-icon mr-1\"\n                icon={[\"fas\", \"wrench\"]}\n            />\n            Update\n        </CustomModal>\n    );\n};\n\nexport default UpdateProductDetails;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Title from \"../generic/title\";\nimport UpdateProductDetails from \"../products/UpdateProductDetails\";\nimport DeleteModal from \"../generic/DeleteModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst Service = (props) => {\n    const [show, setShow] = useState(false);\n    const [count, setCount] = useState(1);\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    const { items, addItem, postCountUpdate } = useContext(CartContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const success = isLightTheme ? theme.light.success : theme.dark.success;\n    const currency_text = isLightTheme\n        ? theme.light.currency_text\n        : theme.dark.currency_text;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"items\");\n        const local = JSON.parse(json);\n\n        if (local) {\n            local.map((item) => {\n                if (item.id === props.serviceInfo.product_id) {\n                    setShow(true);\n                    setCount(item.count);\n                }\n                return item;\n            });\n        }\n    }, [props.serviceInfo.product_id]);\n\n    useEffect(() => {\n        if (show) postCountUpdate(props.serviceInfo.product_id, count);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [show, count, props.serviceInfo.product_id]);\n\n    const price = Math.floor(\n        props.serviceInfo.price +\n            (props.serviceInfo.price * props.serviceInfo.vat) / 100\n    );\n\n    const handleShow = () => {\n        setShow(true);\n    };\n\n    const handleAddItem = () => {\n        let results = false;\n\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].id === props.serviceInfo.product_id) {\n                results = true;\n                break;\n            }\n        }\n\n        if (!results) {\n            const product = {\n                id: props.serviceInfo.product_id,\n                productName: props.serviceInfo.product_name,\n                qty: props.serviceInfo.qty,\n                unit: props.serviceInfo.unit,\n                count,\n                price,\n            };\n\n            addItem(product);\n            handleShow();\n        }\n\n        sessionStorage.setItem(\"service_id\", props.serviceInfo.service_id);\n    };\n\n    const handleDeleteItem = (id) => {\n        const API_URL = \"/deleteproduct/\";\n        const loadData = async () => {\n            const bodyData = {\n                product_id: id,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n            const data = await response.json();\n            if (response.ok) setStatusVariant(\"success\");\n            setStatus(data.message);\n        };\n        loadData();\n    };\n\n    const addOne = () => setCount(count + 1);\n    const minusOne = () => (count > 1 ? setCount(count - 1) : setCount(1));\n\n    return (\n        <div className=\"col-lg-3 col-md-4 col-sm-6 mb-4 text-center\">\n            {/* <Card className={\"shadow\" + ui + border}> */}\n            <Card className={ui}>\n                {status && (\n                    <CustomModalAlert\n                        status={status}\n                        setStatus={setStatus}\n                        variant={statusVariant}\n                    />\n                )}\n\n                {/* <div className={\"inner border-bottom border-\" + type}>\n                    <Card.Img\n                        variant=\"top\"\n                        src={`https://picsum.photos/id/${Math.floor(\n                            Math.random() * 1000\n                        )}/800`}\n                        onError={(e) => {\n                            e.target.onerror = null;\n                            e.target.src = \"/img/Default.png\";\n                        }}\n                        style={{ maxHeight: \"12rem\" }}\n                        alt=\"card image\"\n                    />\n                </div> */}\n\n                <Card.Body className={syntax}>\n                    <Card.Title>{props.serviceInfo.product_name}</Card.Title>\n                    <h5 className={currency_text}>\n                        <span className=\"font-weight-bold\">৳ </span>\n\n                        {isServiceProvider\n                            ? props.serviceInfo.price\n                            : count * price}\n                    </h5>\n\n                    {isServiceProvider ? (\n                        <p className={custom_text}>(Vat Excluded)</p>\n                    ) : (\n                        <p className={custom_text}>(Vat included)</p>\n                    )}\n\n                    <div>\n                        <Title>Vat: </Title> {props.serviceInfo.vat}%\n                        <br />\n                        <Title>Quantity: </Title>{\" \"}\n                        {count * props.serviceInfo.qty} {props.serviceInfo.unit}\n                        <br />\n                        <Title>Company: </Title>{\" \"}\n                        {props.serviceInfo.company_name}\n                        {!isServiceProvider && (\n                            <>\n                                <br />\n                                <div className=\"my-3 d-flex justify-content-center\">\n                                    <Icon\n                                        style={{\n                                            fontSize: \"1.125rem\",\n                                            color: \"#d9534f\",\n                                        }}\n                                        onClick={minusOne}\n                                        className=\"mt-1\"\n                                    >\n                                        remove_circle\n                                    </Icon>\n                                    <input\n                                        type=\"number\"\n                                        className={\n                                            \"show-cart-count mx-1\" + syntax\n                                        }\n                                        value={count}\n                                        style={{ maxWidth: \"2.5rem\" }}\n                                        onChange={(e) =>\n                                            setCount(e.target.value)\n                                        }\n                                        onKeyDown={(e) =>\n                                            [\"e\", \"E\", \"+\", \"-\", \".\"].includes(\n                                                e.key\n                                            ) && e.preventDefault()\n                                        }\n                                    />\n                                    <Icon\n                                        style={{\n                                            fontSize: \"1.125rem\",\n                                            color: \"#0275d8\",\n                                        }}\n                                        onClick={addOne}\n                                        className=\"mt-1\"\n                                    >\n                                        add_circle\n                                    </Icon>\n                                </div>\n                            </>\n                        )}\n                    </div>\n\n                    {isServiceProvider ? (\n                        <div className=\"d-flex justify-content-around mt-3\">\n                            <UpdateProductDetails\n                                product={props.serviceInfo}\n                                updateFlag={props.updateFlag}\n                                id={props.serviceInfo.product_id}\n                                service_id={localStorage.getItem(\"userID\")}\n                            />\n\n                            <DeleteModal\n                                deleteText={\"Delete\"}\n                                updateFlag={props.updateFlag}\n                                handleAction={() =>\n                                    handleDeleteItem(\n                                        props.serviceInfo.product_id\n                                    )\n                                }\n                                modalBody={\n                                    <>\n                                        Do you really want to delete Product:{\" \"}\n                                        <span className={custom_text}>\n                                            {props.serviceInfo.product_name}\n                                        </span>{\" \"}\n                                        from your inventory?\n                                        <br />\n                                        <span className={dangerTextColor}>\n                                            Caution: This action cannot be\n                                            undone\n                                        </span>\n                                    </>\n                                }\n                            />\n                        </div>\n                    ) : (\n                        <Button\n                            variant={show ? success : type}\n                            onClick={handleAddItem}\n                        >\n                            {show ? (\n                                <div>\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"check\"]}\n                                    />\n                                    In cart\n                                </div>\n                            ) : (\n                                <div>\n                                    <Icon\n                                        style={{\n                                            verticalAlign: \"middle\",\n                                            fontSize: \"18px\",\n                                        }}\n                                        className=\"mr-2 mb-1\"\n                                    >\n                                        add_shopping_cart\n                                    </Icon>\n                                    Add to cart\n                                </div>\n                            )}\n                        </Button>\n                    )}\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n\nexport default Service;\n","import React, { useContext } from \"react\";\nimport Pagination from \"react-js-pagination\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst CustomPagination = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n    const paginationActiveLinkClass = isLightTheme\n        ? \"paginationActiveLinkClass\"\n        : \"paginationActiveLinkClass-dark\";\n\n    window.scrollTo(0, 0);\n\n    return (\n        <div className=\"d-flex justify-content-center mt-5\">\n            <Pagination\n                itemClass=\"page-item\"\n                linkClassFirst=\"paginationLinkClass\"\n                linkClassPrev=\"paginationLinkClass\"\n                linkClassNext=\"paginationLinkClass\"\n                linkClassLast=\"paginationLinkClass\"\n                activeLinkClass={paginationActiveLinkClass}\n                linkClass={\"page-link muted_border\" + custom_text + ui}\n                itemsCountPerPage={10}\n                pageRangeDisplayed={5}\n                activePage={props.activePage}\n                onChange={props.handlePageClick}\n                totalItemsCount={props.totalPage * 10}\n            />\n        </div>\n    );\n};\n\nexport default CustomPagination;\n","import { Card } from \"react-bootstrap\";\nimport React, { useContext } from \"react\";\n// import Fab from \"@material-ui/core/Fab\";\nimport { useHistory } from \"react-router-dom\";\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\n// const useStyles = makeStyles((theme) => ({\n//     fab: {\n//         zIndex: 1,\n//         position: \"fixed\",\n//         // display: \"flex\",\n//        //justifyContent: \"center\",\n//         // bottom: theme.spacing(2),\n//         right: theme.spacing(),\n            \n//     },\n//     formControl: {\n//         margin: theme.spacing(1),\n//         minWidth: 200,\n//         maxWidth: 300,\n//     },\n// }));\n\nconst FloatingCart = () => {\n    // const classes = useStyles();\n    const history = useHistory();\n    const { items, totalPrice } = useContext(CartContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n    // const custom_syntax = isLightTheme ? \"#f7f7f7\" : \"#292b2c\";\n\n    const handleClick = () => history.push(\"/cart\");\n\n    return (\n        // <>\n        //     <Fab\n        //         variant=\"extended\"\n        //         onClick={handleClick}\n        //         className={classes.fab}\n        //         style={{\n        //             backgroundColor: mainColor,\n        //             color: custom_syntax,\n        //         }}\n        //     >\n        //         <FontAwesomeIcon\n        //             className=\"fa-icon mr-1\"\n        //             icon={[\"fas\", \"cart-arrow-down\"]}\n        //         />\n        //         {items.length}\n        //     </Fab>\n        // </>\n        <Card\n            onClick={handleClick}\n            className={\"mr-1\" + ui + custom_text + border}\n            style={{ position: \"fixed\", zIndex: \"1\", right: \"0\" }}\n        >\n            <Card.Body>\n                <FontAwesomeIcon\n                    className=\"fa-icon mr-1\"\n                    icon={[\"fas\", \"cart-arrow-down\"]}\n                />\n                {items.length}\n                <br />\n                <span className=\"font-weight-bold mr-2\">৳</span>\n                {totalPrice}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default FloatingCart;\n","import React, { useContext, useState } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst PromotionalCarousel = () => {\n    const [promotionalSlides] = useState([\n        // `https://picsum.photos/id/${Math.floor(Math.random() * 1000)}/800`,\n        // `https://picsum.photos/id/${Math.floor(Math.random() * 1000)}/800`,\n        // `https://picsum.photos/id/${Math.floor(Math.random() * 1000)}/800`,\n        // `https://picsum.photos/id/${Math.floor(Math.random() * 1000)}/800`,\n        // `https://picsum.photos/id/${Math.floor(Math.random() * 1000)}/800`,\n        // `https://picsum.photos/id/${Math.floor(Math.random() * 1000)}/800`,\n        // `https://picsum.photos/id/${Math.floor(Math.random() * 1000)}/800`,\n        // `https://picsum.photos/id/${Math.floor(Math.random() * 1000)}/800`,\n        \"/img/promotional_default.jpg\",\n        \"/img/promotional_default2.jpg\",\n        \"/img/promotional_default3.jpg\",\n        \"/img/promotional_default4.jpg\",\n    ]);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    return (\n        <div className={\"card mb-5\" + border}>\n            <Carousel>\n                {promotionalSlides.map((promotionalSlide, index) => (\n                    <Carousel.Item key={index}>\n                        <img\n                            alt=\"slide\"\n                            className=\"d-block w-100\"\n                            style={{ maxHeight: \"13rem\" }}\n                            src={promotionalSlide}\n                            // onError={(e) => {\n                            //     e.target.onerror = null;\n                            //     e.target.src = \"/img/promotional_default.jpg\";\n                            // }}\n                        />\n                    </Carousel.Item>\n                ))}\n            </Carousel>\n        </div>\n    );\n};\n\nexport default PromotionalCarousel;\n","import React, { useContext, useState, useEffect } from \"react\";\n// import { Image } from \"react-bootstrap\";\nimport Service from \"./service\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport { useParams } from \"react-router-dom\";\n\nimport Infobar from \"../generic/infobar\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport SearchBar from \"../generic/SearchBar\";\nimport CustomPagination from \"../generic/CustomPagination\";\nimport FloatingCart from \"../shoppingCart/FloatingCart\";\nimport PromotionalCarousel from \"./PromotionalCarousel\";\n\nconst Services = () => {\n    const params = useParams();\n    const [flag, setFlag] = useState(true);\n    const [sName, setSName] = useState(\"\");\n    const [services, setServices] = useState([]);\n    const [searchData, setSearchData] = useState(\"\");\n\n    const [totalPage, setTotalPage] = useState(0);\n    const [activePage, setActivePage] = useState(1);\n\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    // componentDidMount\n    useEffect(() => {\n        let API_URL = \"/ownProducts/\";\n\n        const loadData = async () => {\n            let bodyData = {\n                service_id: params.id,\n                page_number: activePage,\n                search_data: searchData,\n            };\n\n            let response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            let data = await response.json();\n\n            setServices(data.products);\n\n            // Gey total page\n            API_URL = \"/inventory/page/\";\n\n            bodyData = {\n                service_id: params.id,\n                search_data: searchData,\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n\n            setTotalPage(data.details);\n        };\n        loadData();\n    }, [params, flag, searchData, activePage]);\n\n    useEffect(() => {\n        // if (services.length > 0) {\n        const API_URL = \"/getProfile/\";\n\n        const loadData = async () => {\n            const servideID = {\n                userid: params.id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(servideID),\n            });\n\n            const data = await response.json();\n\n            setSName(data.company_name);\n        };\n        loadData();\n        // }\n    }, [services, params.id]);\n\n    // componentDidMount\n    useEffect(() => {\n        setActivePage(1);\n    }, [searchData]);\n\n    const updateFlag = () => setFlag(!flag);\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    const handlePageClick = (e) => setActivePage(e);\n\n    return (\n        <div>\n            <PromotionalCarousel />\n\n            <div className={\"text-center\" + syntax}>\n                <FloatingCart />\n\n                <h4 className={\"mb-5\" + syntax}>\n                    {isServiceProvider ? \"Your Inventory\" : \"Our Services\"}\n                </h4>\n\n                <SearchBar\n                    handleChange={handleChange}\n                    placeholder=\"Search products....\"\n                    searchBy=\"Search products by product name, company name or price\"\n                />\n\n                {sName && (\n                    <Infobar>\n                        {sName}\n                        {/* {emoji(\"🤪\")} */}\n                    </Infobar>\n                )}\n            </div>\n\n            {services && services.length > 0 ? (\n                <>\n                    <div className=\"row\">\n                        {services.map((service) => (\n                            // Here gives unmounted error 🙁\n                            <Service\n                                key={uuidv4()}\n                                serviceInfo={service}\n                                updateFlag={updateFlag}\n                            />\n                        ))}\n                    </div>\n\n                    <CustomPagination\n                        totalPage={totalPage}\n                        activePage={activePage}\n                        handlePageClick={handlePageClick}\n                    />\n                </>\n            ) : (\n                <Infobar>No services {emoji(\"☹\")}</Infobar>\n            )}\n        </div>\n    );\n};\n\nexport default Services;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport Services from \"../components/services/services\";\n// import CartContextProvider from \"../contexts/CartContext\";\nimport LocationContextProvider from \"../contexts/LocationContext\";\n\nconst ServiceProviders = () => {\n    return (\n        <Layout>\n            <LocationContextProvider>\n                {/* <CartContextProvider> */}\n                    <Services />\n                {/* </CartContextProvider> */}\n            </LocationContextProvider>\n        </Layout>\n    );\n};\n\nexport default ServiceProviders;\n","import React, { useContext, useState, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faTwitter, faFacebook } from \"@fortawesome/free-brands-svg-icons\";\n\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst RegistrationForm = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(\"\");\n    const [isServiceProvider, setIsServiceProvider] = useState(false);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleSelect = (e) => {\n        e.target.value === \"2\"\n            ? setIsServiceProvider(true)\n            : setIsServiceProvider(false);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = isServiceProvider ? \"/serviceregister/\" : \"/register/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n\n            object[\"username\"] =\n                object[\"username\"].charAt(0).toUpperCase() +\n                object[\"username\"].slice(1);\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data[Object.keys(data)[0]]);\n                else props.history.push(\"/login/\");\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <div\n            // className={\"card shadow mx-auto\" + ui + syntax + border}\n            className={\"card mx-auto\" + ui + syntax}\n            style={{ maxWidth: \"30rem\" }}\n        >\n            <article\n                style={{ maxWidth: \"28rem\" }}\n                className=\"card-body col mx-auto\"\n            >\n                <h4 className=\"card-title text-center\">Create an Account</h4>\n                <p className=\"text-center\">\n                    Get started with your free account\n                </p>\n\n                <form ref={form} onSubmit={handleSubmit}>\n                    {status && <CustomAlert status={status} />}\n\n                    {/* <div className={\"form-group input-group rounded\" + border}> */}\n                    <div className={\"form-group input-group rounded\"}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                <FontAwesomeIcon icon={[\"fas\", \"user\"]} />\n                            </span>\n                        </div>\n                        <input\n                            name={\n                                isServiceProvider ? \"service_name\" : \"username\"\n                            }\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            className=\"form-control\"\n                        />\n                    </div>\n\n                    {/* <div className={\"form-group input-group rounded\" + border}> */}\n                    <div className={\"form-group input-group rounded\"}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                <FontAwesomeIcon icon={[\"fas\", \"phone\"]} />\n                            </span>\n                        </div>\n                        {/* <select\n                            className=\"custom-select\"\n                            style={{ maxWidth: \"85px\" }}\n                        >\n                            <option defaultValue=\"+880\">+880</option>\n                            <option value=\"1\">+972</option>\n                            <option value=\"2\">+198</option>\n                            <option value=\"3\">+701</option>\n                        </select> */}\n                        <input\n                            name=\"phone\"\n                            type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"Phone number\"\n                        />\n                    </div>\n\n                    {/* <div className={\"form-group input-group rounded\" + border}> */}\n                    <div className={\"form-group input-group rounded\"}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                <FontAwesomeIcon icon={[\"fas\", \"building\"]} />\n                            </span>\n                        </div>\n                        <select\n                            required\n                            onChange={handleSelect}\n                            className=\"form-control\"\n                        >\n                            <option defaultValue=\"1\">Customer</option>\n                            <option value=\"2\">Service Provider</option>\n                        </select>\n                    </div>\n\n                    {isServiceProvider && (\n                        <>\n                            <div\n                                // className={\n                                //     \"form-group input-group rounded\" + border\n                                // }\n                                className={\"form-group input-group rounded\"}\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"id-card\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    name=\"nid\"\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    placeholder=\"NID number\"\n                                />\n                            </div>\n\n                            <div\n                                // className={\n                                //     \"form-group input-group rounded\" + border\n                                // }\n                                className={\"form-group input-group rounded\"}\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"id-card\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"number\"\n                                    name=\"trade_license\"\n                                    className=\"form-control\"\n                                    placeholder=\"Trade license number\"\n                                />\n                            </div>\n\n                            <div\n                                // className={\n                                //     \"form-group input-group rounded\" + border\n                                // }\n                                className={\"form-group input-group rounded\"}\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"building\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    name=\"company_name\"\n                                    className=\"form-control\"\n                                    placeholder=\"Company name\"\n                                />\n                            </div>\n\n                            <div\n                                // className={\n                                //     \"form-group input-group rounded\" + border\n                                // }\n                                className={\"form-group input-group rounded\"}\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"taxi\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    name=\"service_type\"\n                                    className=\"form-control\"\n                                    placeholder=\"Service type\"\n                                />\n                            </div>\n\n                            <div\n                                // className={\n                                //     \"form-group input-group rounded\" + border\n                                // }\n                                className={\"form-group input-group rounded\"}\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"hand-holding-usd\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"number\"\n                                    name=\"delivery_charge\"\n                                    className=\"form-control\"\n                                    placeholder=\"Delivery charge\"\n                                />\n                            </div>\n\n                            <div\n                                // className={\n                                //     \"form-group input-group rounded\" + border\n                                // }\n                                className={\"form-group input-group rounded\"}\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"plus\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    name=\"description\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Description\"\n                                />\n                            </div>\n\n                            {/* <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"home\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    name=\"\"\n                                    disabled\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"House\"\n                                />\n                                <input\n                                    name=\"\"\n                                    disabled\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Road\"\n                                />\n                            </div> */}\n\n                            <div\n                                // className={\n                                //     \"form-group input-group rounded\" + border\n                                // }\n                                className={\"form-group input-group rounded\"}\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"location-arrow\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    name=\"address\"\n                                    className=\"form-control\"\n                                    placeholder=\"Location Description\"\n                                />\n                            </div>\n                        </>\n                    )}\n\n                    <div className=\"form-group\">\n                        <Button variant={type} type=\"submit\" className=\"w-100\">\n                            <FontAwesomeIcon\n                                className=\"mr-2\"\n                                icon={[\"fas\", \"user-plus\"]}\n                            />\n                            Create Account\n                        </Button>\n                    </div>\n\n                    <div className={\"text-center\" + link}>\n                        Have an account? <Link to=\"/login\">Log In</Link>\n                    </div>\n                </form>\n            </article>\n        </div>\n    );\n};\n\nexport default withRouter(RegistrationForm);\n","import React from 'react';\nimport Layout from '../components/generic/layout';\nimport RegistrationForm from '../components/user/userRegistrationForm';\n\nconst UserRegistration = () => {\n    return (\n        <Layout>\n            <RegistrationForm />\n        </Layout>\n    );\n}\n \nexport default UserRegistration;","import { useParams } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomTable from \"../generic/CustomTable\";\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst OrderDetails = (props) => {\n    const params = useParams();\n    const [status, setStatus] = useState(undefined);\n    const [orderDetailsState, setOrderDetailsState] = useState([]);\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = isServiceProvider\n            ? \"/service/orderDetails/\"\n            : \"/customer/orderDetails/\";\n\n        const loadData = async () => {\n            const orderID = {\n                order_id: params.order_id,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(orderID),\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else {\n                setStatus(undefined);\n                setOrderDetailsState(data.details);\n            }\n        };\n        loadData();\n    }, [params.order_id, isServiceProvider]);\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Product Name\" },\n            { className: \"\", value: \"Quantity\" },\n            { className: \"\", value: \"Product Size\" },\n            { className: \"\", value: \"Price (per unit)\" },\n        ],\n        allowedEntry: [\"product_name\", \"quantity\", \"product_size\"],\n    };\n\n    return (\n        <>\n            {status ? (\n                <CustomAlert status={status} />\n            ) : (\n                <>\n                    <h4 className={\"mb-5 text-center\" + syntax}>\n                        Order Details\n                    </h4>\n                    <CustomTable\n                        ths={tableData.ths}\n                        datas={orderDetailsState}\n                        allowedEntry={tableData.allowedEntry}\n                        ActionComponents={[\n                            {\n                                component: (order) => (\n                                    <>\n                                        <span className=\"font-weight-bold\">\n                                            ৳{\" \"}\n                                        </span>\n                                        {order.product_price_per_unit}\n                                    </>\n                                ),\n                                className: \"\",\n                            },\n                        ]}\n                    />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default OrderDetails;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport OrderDetails from \"../components/orders/OrderDetails\";\n\nconst OrderPage = () => {\n    return (\n        <Layout>\n            <OrderDetails />\n        </Layout>\n    );\n};\n\nexport default OrderPage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomModal from \"../generic/CustomModal\";\n\nconst UpdateEmployeeDetails = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleUpdate = () => {\n        const API_URL = \"/updateEmployee/\";\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n            object[\"employee_id\"] = props.employee.employee_id;\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatus(data.message);\n                setStatusVariant(\"danger\");\n            }\n        };\n        loadData();\n    };\n\n    return (\n        <CustomModal\n            // size=\"md\"\n            actionVariant={type}\n            handleAction={handleUpdate}\n            modalTitle=\"Update Employee Details\"\n            actionButtonBody={\n                <>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"wrench\"]}\n                    />\n                    Update\n                </>\n            }\n            modalButtonClass={\"btn btn-sm btn-\" + type}\n            modalBody={\n                <form ref={form}>\n                    {status &&\n                        (statusVariant === \"success\" ? (\n                            <CustomModalAlert\n                                status={status}\n                                setStatus={setStatus}\n                                variant={statusVariant}\n                                updateFlag={props.updateFlag}\n                            />\n                        ) : (\n                            <CustomAlert\n                                status={status}\n                                variant={statusVariant}\n                            />\n                        ))}\n\n                    <div className=\"form-group\">\n                        <label>Employee Name</label>\n\n                        <div\n                            // className={\n                            //     \"form-group input-group rounded\" + border\n                            // }\n                            className={\n                                \"form-group input-group rounded\"\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon\"\n                                        icon={[\"fas\", \"user\"]}\n                                    />\n                                </span>\n                            </div>\n                            <input\n                                required\n                                autoFocus\n                                type=\"text\"\n                                name=\"employee_name\"\n                                placeholder=\"Employee Name\"\n                                className=\"form-control\"\n                                defaultValue={props.employee.employee_name}\n                            />\n                        </div>\n\n                        <label className=\"mt-3\">Phone Number</label>\n\n                        <div\n                            // className={\n                            //     \"form-group input-group rounded\" + border\n                            // }\n                            className={\n                                \"form-group input-group rounded\"\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon\"\n                                        icon={[\"fas\", \"phone\"]}\n                                    />\n                                </span>\n                            </div>\n                            <input\n                                type=\"text\"\n                                name=\"phone_number\"\n                                placeholder=\"Phone Number\"\n                                className=\"form-control\"\n                                defaultValue={props.employee.phone_number}\n                            />\n                        </div>\n                    </div>\n                </form>\n            }\n        >\n            <FontAwesomeIcon className=\"fa-icon\" icon={[\"fa\", \"wrench\"]} />\n        </CustomModal>\n    );\n};\n\nexport default UpdateEmployeeDetails;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst AddEmployee = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [variant, setVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = \"/addEmployee/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setVariant(\"success\");\n                    setStatus(data.message);\n                    props.updateFlag();\n                } else {\n                    setVariant(\"danger\");\n                    setStatus(data.message);\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status &&\n                (variant === \"success\" ? (\n                    <CustomModalAlert\n                        status={status}\n                        variant={variant}\n                        setStatus={setStatus}\n                    />\n                ) : (\n                    <CustomAlert status={status} variant={variant} />\n                ))}\n\n            <Row>\n                <Col className=\"mb-4\">\n                    {/* <div className={\"card\" + ui + syntax + border}> */}\n                    <div className={\"card\" + ui + syntax}>\n                        <div className=\"card-body\">\n                            <form ref={form} onSubmit={handleSubmit}>\n                                <Row className=\"d-flex align-items-center\">\n                                    <Col lg={4}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"fa-icon mr-2\"\n                                                    icon={[\"fas\", \"user-plus\"]}\n                                                />\n                                                Name:\n                                            </Col>\n                                            <Col\n                                                md={8}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    // className={\n                                                    //     \"input-group rounded\" +\n                                                    //     border\n                                                    // }\n                                                    className={\n                                                        \"input-group rounded\"\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"text\"\n                                                        id=\"employee_name\"\n                                                        name=\"employee_name\"\n                                                        placeholder=\"Employee name\"\n                                                        className=\"form-control text-center\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please select a valid\n                                                        name\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={5}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"fa-icon mr-2\"\n                                                    icon={[\"fas\", \"phone\"]}\n                                                />\n                                                Phone Number:\n                                            </Col>\n                                            <Col\n                                                md={7}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    // className={\n                                                    //     \"input-group rounded\" +\n                                                    //     border\n                                                    // }\n                                                    className={\n                                                        \"input-group rounded\"\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"number\"\n                                                        id=\"phone_number\"\n                                                        name=\"phone_number\"\n                                                        placeholder=\"Phone Number\"\n                                                        className=\"form-control text-center\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please provide a valid\n                                                        phone number\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={3}>\n                                        <Button\n                                            type=\"submit\"\n                                            variant={type}\n                                            className=\"w-100\"\n                                        >\n                                            <FontAwesomeIcon\n                                                className=\"mr-2\"\n                                                icon={[\"fas\", \"user-plus\"]}\n                                            />\n                                            Add Employee\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </form>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default AddEmployee;\n","import { useContext } from \"react\";\nimport emoji from \"react-easy-emoji\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Infobar from \"../generic/infobar\";\nimport DeleteModal from \"../generic/DeleteModal\";\nimport CustomTable from \"../generic/CustomTable\";\nimport UpdateEmployeeDetails from \"./UpdateEmployeeDetails\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport AddEmployee from \"./AddEmployee\";\nimport SearchBar from \"../generic/SearchBar\";\n\nconst EmployeeList = (props) => {\n    const [flag, setFlag] = useState(true);\n    const [employees, setEmployees] = useState([]);\n    const [status, setStatus] = useState(undefined);\n    const [searchData, setSearchData] = useState(\"\");\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/getEmployee/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                search_data: searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            const data = await response.json();\n            setEmployees(data.employee);\n        };\n        loadData();\n    }, [flag, searchData]);\n\n    const handleDelete = (id) => {\n        const API_URL = \"/deleteEmployee/\";\n\n        const loadData = async () => {\n            const employeeID = {\n                employee_id: id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(employeeID),\n            });\n\n            const data = await response.json();\n            if (response.ok) setStatusVariant(\"success\");\n            setStatus(data.message);\n        };\n        loadData();\n    };\n\n    const updateFlag = () => setFlag(!flag);\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Index\" },\n            { className: \"\", value: \"Employee Name\" },\n            { className: \"\", value: \"Phone\" },\n            { className: \"\", value: \"Update\" },\n            { className: \"\", value: \"Delete\" },\n        ],\n        allowedEntry: [\"employee_name\", \"phone_number\"],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>Employees Details</h4>\n\n            <SearchBar\n                handleChange={handleChange}\n                placeholder=\"Search employees details....\"\n                searchBy={<>Search by anything {emoji(\"😄\")}</>}\n            />\n\n            <AddEmployee updateFlag={updateFlag} />\n\n            {employees ? (\n                <>\n                    {status && (\n                        <CustomModalAlert\n                            status={status}\n                            setStatus={setStatus}\n                            variant={statusVariant}\n                        />\n                    )}\n\n                    <CustomTable\n                        index={true}\n                        datas={employees}\n                        ths={tableData.ths}\n                        allowedEntry={tableData.allowedEntry}\n                        ActionComponents={[\n                            {\n                                component: (employee) => (\n                                    <UpdateEmployeeDetails\n                                        employee={employee}\n                                        updateFlag={updateFlag}\n                                    />\n                                ),\n                                className: \"\",\n                            },\n                            {\n                                component: (employee) => (\n                                    <DeleteModal\n                                        employee={employee}\n                                        updateFlag={updateFlag}\n                                        handleAction={() =>\n                                            handleDelete(employee.employee_id)\n                                        }\n                                        modalBody={\n                                            <>\n                                                Do you really want to delete\n                                                details of Employee:{\" \"}\n                                                <span className={custom_text}>\n                                                    {employee.employee_name}\n                                                </span>\n                                                ?<br />\n                                                <span\n                                                    className={dangerTextColor}\n                                                >\n                                                    Caution: This action cannot\n                                                    be undone\n                                                </span>\n                                            </>\n                                        }\n                                    />\n                                ),\n                                className: \"\",\n                            },\n                        ]}\n                    />\n                </>\n            ) : (\n                <Infobar>\n                    You have no employee details to show {emoji(\"🙁\")}\n                </Infobar>\n            )}\n        </>\n    );\n};\n\nexport default EmployeeList;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport EmployeeList from \"../components/employees/EmployeeList\";\n\nconst EmployeeListPage = () => {\n    return (\n        <Layout>\n            <EmployeeList />\n        </Layout>\n    );\n};\n\nexport default EmployeeListPage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport moment from \"moment\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst OrderSuccess = () => {\n    const params = useParams();\n    const [orderDetails, setOrderDetails] = useState({});\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/order/success/\";\n\n        const loadData = async () => {\n            const orderID = {\n                order_id: params.order_id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(orderID),\n            });\n\n            const data = await response.json();\n            setOrderDetails(data.details);\n        };\n        loadData();\n    }, [params.order_id]);\n\n    return (\n        <div className={\"text-center\" + syntax}>\n            <div className=\"mx-auto\" style={{ maxWidth: \"35rem\" }}>\n                <div className=\"mb-4\">\n                    <h4 className=\"mb-3\">Thanks for your order</h4>\n                    We're processing your order now, here are the details\n                </div>\n\n                <CustomAlert\n                    variant=\"success\"\n                    status={\n                        <>\n                            <div className=\"mb-3\">\n                                <FontAwesomeIcon\n                                    style={{ fontSize: \"6rem\" }}\n                                    icon={[\"fas\", \"check-circle\"]}\n                                />\n                            </div>\n                            We have recieved your order successfully 😄\n                            <div className=\"text-left mt-3\">\n                                <div className=\"d-flex justify-content-between\">\n                                    <b>\n                                        <em>Net Total:</em>\n                                    </b>\n                                    <div>\n                                        <span className=\"font-weight-bold\">\n                                            ৳{\" \"}\n                                        </span>\n                                        {orderDetails.total}\n                                    </div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    <b>\n                                        <em>Ordered Time:</em>\n                                    </b>\n                                    <div>\n                                        {moment(orderDetails.time).format(\n                                            \"MMM DD, YY hh:mm a\"\n                                        )}\n                                    </div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    <b>\n                                        <em>Ordered Number:</em>\n                                    </b>\n                                    <div>{orderDetails.phone_number}</div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    <b>\n                                        <em>Service Provider:</em>\n                                    </b>\n                                    <div>{orderDetails.provider_name}</div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    <b>\n                                        <em>Delivery Address:</em>\n                                    </b>\n                                    <div>{orderDetails.address}</div>\n                                </div>\n                            </div>\n                        </>\n                    }\n                />\n\n                <Button variant={type} className=\"mt-3 w-100\" as={Link} to=\"/\">\n                    <FontAwesomeIcon className=\"mr-2\" icon={[\"fas\", \"home\"]} />\n                    Go to Homepage\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderSuccess;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport OrderSuccess from \"../components/orders/OrderSuccess\";\n// import CartContextProvider from \"../contexts/CartContext\";\n\nconst OrderSuccessPage = () => {\n    return (\n        <Layout>\n            {/* <CartContextProvider> */}\n                <OrderSuccess />\n            {/* </CartContextProvider> */}\n        </Layout>\n    );\n};\n\nexport default OrderSuccessPage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModal from \"../generic/CustomModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst AddProduct = (props) => {\n    const form = useRef(null);\n    const { availableProduct } = props;\n\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const btnTypeClass = isLightTheme\n        ? theme.light.btnTypeClass\n        : theme.dark.btnTypeClass;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const handleAddProduct = () => {\n        const API_URL = \"/addtoinventory/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setStatus(data.message);\n                    setStatusVariant(\"success\");\n                } else setStatus(data.message);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                    updateFlag={props.updateFlag}\n                />\n            )}\n\n            <form ref={form} onSubmit={(e) => e.preventDefault()}>\n                <input\n                    type=\"hidden\"\n                    name=\"product_id\"\n                    value={availableProduct.product_id}\n                />\n\n                <div\n                    className=\"mt-2 mb-3 input-group mx-auto\"\n                    style={{ maxWidth: \"10rem\" }}\n                >\n                    <input\n                        required\n                        name=\"price\"\n                        type=\"number\"\n                        placeholder=\"Your Price...\"\n                        style={{ maxWidth: \"7.18rem\" }}\n                        defaultValue={props.base_price}\n                        className={\"show-cart-count ml-1\" + syntax}\n                    />\n                    <span className=\"font-weight-bold show-cart-count\">\n                        BDT\n                    </span>\n                </div>\n\n                <CustomModal\n                    actionVariant={type}\n                    modalTitle=\"Add Product\"\n                    handleAction={handleAddProduct}\n                    modalBody={\n                        <>\n                            Do you really want to add Product:{\" \"}\n                            <span className={custom_text}>\n                                {props.product_name}\n                            </span>{\" \"}\n                            into your inventory?\n                        </>\n                    }\n                    modalButtonClass={\"btn btn-sm\" + btnTypeClass}\n                    actionButtonBody={\n                        <>\n                            <FontAwesomeIcon\n                                className=\"fa-icon mr-2\"\n                                icon={[\"fas\", \"plus\"]}\n                            />\n                            Add\n                        </>\n                    }\n                >\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"warehouse\"]}\n                    />\n                    Add to Inventory\n                </CustomModal>\n            </form>\n        </>\n    );\n};\n\nexport default AddProduct;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const ProductContext = createContext();\n\nconst ProductContextProvider = (props) => {\n    const [category, setCategory] = useState(\"\");\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"product_category\");\n        const localCategory = JSON.parse(json);\n\n        if (localCategory) setCategory(localCategory);\n    }, []);\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"product_category\");\n        const localCategory = JSON.parse(json);\n\n        if (localCategory !== category)\n            sessionStorage.setItem(\n                \"product_category\",\n                JSON.stringify(category)\n            );\n    }, [category]);\n\n    const changeCategory = (selectedCategory) => {\n        setCategory(selectedCategory);\n\n        // Updating sessionStorage\n        sessionStorage.setItem(\"product_category\", JSON.stringify(selectedCategory));\n    };\n\n    return (\n        <ProductContext.Provider value={{ category, changeCategory }}>\n            {props.children}\n        </ProductContext.Provider>\n    );\n};\n\nexport default ProductContextProvider;\n","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { ProductContext } from \"../../contexts/ProductContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport LocationDropDown from \"../location/LocationDropDown\";\n\nconst SelectCategory = () => {\n    const [categories, setCategories] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState(\n        JSON.parse(sessionStorage.getItem(\"product_category\"))\n            ? JSON.parse(sessionStorage.getItem(\"product_category\"))\n            : \"\"\n    );\n    const [status, setStatus] = useState(undefined);\n\n    const { changeCategory } = useContext(ProductContext);\n\n    // ComponentDidMount\n    useEffect(() => {\n        const loadData = async () => {\n            const API_URL = \"/product/category/\";\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"GET\",\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setCategories(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, []);\n\n    const handleCategorySelect = (e) => {\n        setSelectedCategory(e);\n        changeCategory(e);\n    };\n\n    return (\n        <div>\n            {status && <CustomAlert status={status} />}\n\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        status=\"\"\n                        customClass=\"mb-2 w-100\"\n                        values={categories ? categories : []}\n                        handleSelect={handleCategorySelect}\n                        title={\n                            selectedCategory\n                                ? selectedCategory\n                                : \"Select Category\"\n                        }\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SelectCategory;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport emoji from \"react-easy-emoji\";\n\nimport Title from \"../generic/title\";\nimport AddProduct from \"./AddProduct\";\nimport SearchBar from \"../generic/SearchBar\";\nimport CustomCard from \"../generic/CustomCard\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport SelectCategory from \"./SelectCategory\";\nimport { ProductContext } from \"../../contexts/ProductContext\";\nimport CustomPagination from \"../generic/CustomPagination\";\n\nconst AvailableProducts = (props) => {\n    const [flag, setFlag] = useState(true);\n    const [totalPage, setTotalPage] = useState(0);\n    const [status, setStatus] = useState(undefined);\n    const [activePage, setActivePage] = useState(1);\n    const [searchData, setSearchData] = useState(\"\");\n    const [availableProducts, setAvailableProducts] = useState([]);\n\n    const { category } = useContext(ProductContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    useEffect(() => {\n        let API_URL = \"/availableProduct/\";\n\n        const loadData = async () => {\n            let bodyData = {\n                category: category,\n                search_data: searchData,\n                page_number: activePage,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                let response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                let data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setAvailableProducts(data.items);\n\n                // Get total page count\n                API_URL = \"/category/page/\";\n\n                bodyData = {\n                    category: category,\n                    search_data: searchData,\n                    service_id: localStorage.getItem(\"userID\"),\n                };\n\n                response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setTotalPage(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [flag, searchData, category, activePage]);\n\n    // componentDidMount\n    useEffect(() => {\n        setActivePage(1);\n    }, [searchData]);\n\n    const updateFlag = () => setFlag(!flag);\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    const handlePageClick = (e) => setActivePage(e);\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>\n                Add to your Inventory\n            </h4>\n\n            <SearchBar\n                handleChange={handleChange}\n                placeholder=\"Search products....\"\n                searchBy=\"Search products by product name or company name\"\n            />\n\n            <div className=\"mb-4\">\n                <SelectCategory />\n            </div>\n\n            <h4 className={\"mb-5 text-center\" + syntax}>Available Products</h4>\n\n            <CustomCard\n                status={status}\n                setStatus={setStatus}\n                values={availableProducts}\n                cardBodyData={(availableProduct) => (\n                    <>\n                        <Card.Title>{availableProduct.product_name}</Card.Title>\n\n                        <div>\n                            <Title>Vat: </Title> {availableProduct.vat}%\n                            <br />\n                            {/* <Title>Base Price: </Title>{\" \"}\n                            <span className=\"font-weight-bold\">৳ </span>\n                            {availableProduct.base_price} BDT\n                            <br /> */}\n                            <Title>Quantity: </Title> {availableProduct.qty}{\" \"}\n                            {availableProduct.unit}\n                            <br />\n                            <Title>Company: </Title>{\" \"}\n                            {availableProduct.company_name}\n                        </div>\n\n                        <AddProduct\n                            updateFlag={updateFlag}\n                            availableProduct={availableProduct}\n                            base_price={availableProduct.base_price}\n                            product_name={availableProduct.product_name}\n                        />\n                    </>\n                )}\n                noValueInfo={\n                    <>\n                        No new products to show to add to your inventory{\" \"}\n                        {emoji(\"☹\")}\n                    </>\n                }\n            />\n\n            <CustomPagination\n                totalPage={totalPage}\n                activePage={activePage}\n                handlePageClick={handlePageClick}\n            />\n        </>\n    );\n};\n\nexport default AvailableProducts;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport AvailableProducts from \"../components/products/AvailableProducts\";\nimport ProductContextProvider from \"../contexts/ProductContext\";\n\nconst Home = () => {\n    return (\n        <Layout>\n            <ProductContextProvider>\n                <AvailableProducts />\n            </ProductContextProvider>\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\n//import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./assets/styles/styles.scss\";\n\nimport SettingsContextProvider from \"./contexts/SettingsContext\";\nimport AuthenticationContextProvider from \"./contexts/AuthenticationContext\";\n\nimport Profile from \"./pages/Profile\";\nimport TestPage from \"./test/TestPage\";\nimport HomePage from \"./pages/HomePage\";\nimport UserLogin from \"./pages/UserLogin\";\nimport OrderPage from \"./pages/OrderPage\";\nimport AreasPage from \"./pages/AreasPage\";\nimport HistoryPage from \"./pages/HistoryPage\";\nimport ShoppingCart from \"./pages/ShoppingCart\";\nimport CheckoutPage from \"./pages/CheckoutPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport StatisticsPage from \"./pages/StatisticsPage\";\nimport ServiceProviders from \"./pages/ServiceProviders\";\nimport UserRegistration from \"./pages/UserRegistration\";\nimport OrderDetailsPage from \"./pages/OrderDetailsPage\";\nimport EmployeeListPage from \"./pages/EmployeeListPage\";\nimport OrderSuccessPage from \"./pages/OrderSuccessPage\";\nimport AvailableProductPage from \"./pages/AvailableProductPage\";\nimport CartContextProvider from \"./contexts/CartContext\";\n\nlibrary.add(far, fas, fab);\n\nconst App = () => {\n    // Console Developer Info\n    console.log(\n        `        %cProjectX`,\n        `color: #2980b9; font-weight: bold; font-family: helvetica; font-size: 2rem`\n    );\n    console.log(`\n            Developed By: \n\n        Shahriar Elahi Dhruvo\n        SWE, SUST\n        Mutasim Billah Toha\n        SWE, SUST\n        Zobaer Hossain Rowan\n        CSE, SUST\n    `);\n\n    return (\n        // <Router>\n        <Router basename=\"/static\">\n            <SettingsContextProvider>\n                <AuthenticationContextProvider>\n                    <CartContextProvider>\n                        <Switch>\n                            <Route\n                                path=\"/service/provider/:id\"\n                                component={ServiceProviders}\n                            />\n                            <Route exact path=\"/orders\" component={OrderPage} />\n                            <Route\n                                exact\n                                path=\"/order/success/:order_id\"\n                                component={OrderSuccessPage}\n                            />\n                            <Route\n                                exact\n                                path=\"/order/details/:order_id\"\n                                component={OrderDetailsPage}\n                            />\n                            <Route\n                                exact\n                                path=\"/add/product\"\n                                component={AvailableProductPage}\n                            />\n                            <Route exact path=\"/areas\" component={AreasPage} />\n                            <Route\n                                exact\n                                path=\"/employee\"\n                                component={EmployeeListPage}\n                            />\n                            <Route\n                                exact\n                                path=\"/statistics\"\n                                component={StatisticsPage}\n                            />\n                            <Route\n                                exact\n                                path=\"/checkout\"\n                                component={CheckoutPage}\n                            />\n                            <Route\n                                exact\n                                path=\"/cart\"\n                                component={ShoppingCart}\n                            />\n                            <Route\n                                exact\n                                path=\"/registration\"\n                                component={UserRegistration}\n                            />\n                            <Route exact path=\"/login\" component={UserLogin} />\n                            <Route exact path=\"/profile\" component={Profile} />\n                            <Route\n                                exact\n                                path=\"/history\"\n                                component={HistoryPage}\n                            />\n                            <Route exact path=\"/test\" component={TestPage} />\n                            <Route exact path=\"/\" component={HomePage} />\n                            <Route component={NotFoundPage} />\n                        </Switch>\n                    </CartContextProvider>\n                </AuthenticationContextProvider>\n            </SettingsContextProvider>\n        </Router>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}