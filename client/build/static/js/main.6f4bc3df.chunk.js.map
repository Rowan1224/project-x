{"version":3,"sources":["contexts/SettingsContext.jsx","contexts/AuthenticationContext.jsx","contexts/ThemeContext.jsx","components/theme/ToggleTheme.jsx","components/generic/navbar.jsx","components/generic/main.jsx","components/generic/Footer.jsx","components/generic/layout.jsx","components/generic/CustomAlert.jsx","components/user/ProfileForm.jsx","pages/Profile.jsx","test/Test.jsx","test/TestPage.jsx","components/generic/title.jsx","components/providers/provider.jsx","components/generic/infobar.jsx","contexts/LocationContext.jsx","components/providers/providers.jsx","components/location/LocationDropDown.jsx","components/location/SelectLocation.jsx","components/Home.jsx","pages/HomePage.jsx","components/user/loginForm.jsx","pages/UserLogin.jsx","components/generic/SearchBar.jsx","components/generic/CustomTable.jsx","components/employees/EmployeeDropDown.jsx","components/generic/CustomModalAlert.jsx","components/generic/CustomModal.jsx","components/generic/DeleteModal.jsx","components/orders/Order.jsx","pages/OrderPage.jsx","components/areas/RemoveArea.jsx","components/generic/CustomCard.jsx","components/areas/ServiceAreas.jsx","components/areas/AddArea.jsx","components/areas/SelectArea.jsx","components/areas/AvailableAreas.jsx","components/areas/Areas.jsx","pages/AreasPage.jsx","components/user/History.jsx","pages/HistoryPage.jsx","contexts/CartContext.jsx","components/generic/counter.jsx","components/shoppingCart/cart.jsx","pages/ShoppingCart.jsx","components/shoppingCart/checkout.jsx","pages/CheckoutPage.jsx","components/generic/NotFound.jsx","pages/NotFoundPage.jsx","components/statistics/Charts.jsx","components/statistics/Statistics.jsx","pages/StatisticsPage.jsx","components/products/UpdateProductDetails.jsx","components/services/service.jsx","components/generic/CustomPagination.jsx","components/services/services.jsx","pages/ServiceProviders.jsx","components/user/userRegistrationForm.jsx","pages/UserRegistration.jsx","components/orders/OrderDetails.jsx","pages/OrderDetailsPage.jsx","components/employees/UpdateEmployeeDetails.jsx","components/employees/AddEmployee.jsx","components/employees/EmployeeList.jsx","pages/EmployeeListPage.jsx","components/orders/OrderSuccess.jsx","pages/OrderSuccessPage.jsx","components/products/AddProduct.jsx","contexts/ProductContext.jsx","components/products/SelectCategory.jsx","components/products/AvailableProducts.jsx","pages/AvailableProductPage.jsx","App.js","index.js"],"names":["SettingsContext","createContext","SettingsContextProvider","props","useState","isAnimated","setIsAnimated","Provider","value","changeIsAnimated","children","AuthenticationContext","AuthenticationContextProvider","history","useHistory","isAuthenticated","setIsAuthenticated","useEffect","currentAuth","localStorage","getItem","handleAuthentication","setItem","handleLogOut","a","API_URL","fetch","method","ok","push","ThemeContext","ThemeContextProvider","isLightTheme","setIsLightTheme","json","sessionStorage","localTheme","JSON","parse","stringify","theme","light","syntax","bg","link","ui","border","custom_text","type","dropdown_text","borderLeft","currency_text","success","secondary","mainColor","mainBG","dangerTextColor","btnTypeClass","lineChartbg","dark","toggleTheme","ToggleTheme","useContext","onClick","className","NightsStay","WbSunny","MainNav","window","scrollY","isShadow","setIsShadow","isServiceProvider","useWindowScroll","event","variant","navLinkStyle","paddingLeft","paddingRight","cursor","CustomToggle","React","forwardRef","ref","style","e","preventDefault","ArrowDropDown","Navbar","expand","sticky","backgroundColor","Brand","as","NavLink","to","fontFamily","fontSize","Toggle","aria-controls","Collapse","id","Nav","Link","AccountCircle","Dropdown","alignRight","Equalizer","Menu","width","Item","icon","Main","background","Container","Footer","bottomBorder","height","display","target","rel","href","role","color","Date","getFullYear","Layout","scrollTo","CustomAlert","noCenter","Alert","alertClass","status","ProfileForm","user","setUser","canEdit","setCanEdit","undefined","setStatus","setVariant","form","useRef","object","userid","headers","body","response","data","detail","loadData","handleEdit","handleSubmit","formData","FormData","current","forEach","key","message","maxWidth","username","onSubmit","Row","Col","md","sm","name","readOnly","defaultValue","userphone","company_name","delivery_charge","description","nid","service_type","trade_license","address","Button","Profile","useStyles","makeStyles","grow","flexGrow","menuButton","marginRight","spacing","title","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","Test","classes","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","mobileMenuId","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-haspopup","AppBar","Toolbar","edge","Typography","noWrap","InputBase","placeholder","root","input","inputProps","TestPage","Title","fontWeight","show","setShow","provider","setProvider","servideID","Service","service_id","Accept","toString","Card","src","Math","floor","random","onError","onerror","alt","phone_1","phone_2","disabled","Infobar","text_color","text","LocationContext","LocationContextProvider","area","thana","district","location","setLocation","localLocation","changeLocation","selectedLocation","bodyData","Providers","providers","setProviders","apiData","services","map","service","console","log","length","emoji","uuidv4","LocationDropDown","handleSelect","size","customClass","values","eventKey","onSelect","SelectLocation","areas","setAreas","thanas","setThanas","districts","setDistricts","setSelectedLocation","details","Home","HomePage","withRouter","setIsServiceProvider","showVerificationArea","setShowVerificationArea","phone","required","UserLogin","SearchBar","onChange","handleChange","borderBottom","searchBy","CustomTable","Table","striped","responsive","ths","th","scope","datas","index","PreActionComponents","PreActionComponent","component","allowedEntry","Object","keys","filter","includes","reduce","obj","i","tdsClassName","ActionComponents","ActionComponent","EmployeeDropDown","setTitle","subElementKey","tmp","subElementValue","CustomModalAlert","redirect","updateFlag","handleClose","useCallback","setTimeout","Modal","centered","onHide","animation","Body","Spinner","handleCloseAction","noAction","edit","modalButtonStyle","modalButtonClass","modalClass","modalTitle","modalBody","handleAction","actionVariant","actionButtonBody","deleteTitle","deleteText","deleteIcon","Order","setValue","flag","setFlag","orders","setOrders","employes","setEmployes","searchData","setSearchData","tabs","assignedOrders","setAssignedOrders","statusVariant","setStatusVariant","selectedEmployeeID","setSelectedEmployeeID","selectedEmployeeName","setSelectedEmployeeName","search_data","employee","handleCancel","order_id","TabPanel","other","hidden","aria-labelledby","Box","tableData","Tabs","newValue","TabIndicatorProps","tab","Tab","label","textTransform","order","payment","Moment","time","format","handleEmployeeSelect","employee_id","orderID","handleOrderComplete","OrderPage","RemoveArea","area_id","reload","area_name","CustomCard","cardBodyData","noValueInfo","ServiceAreas","serviceAreas","setServiceAreas","Areas","serviceArea","AddArea","SelectArea","AvailableAreas","availableAreas","setAvailableAreas","availableArea","History","activeHistories","setActiveHistories","deliveredHistories","setDeliveredHistories","cancelledHistories","setCancelledHistories","activeThs","cancelledThs","deliveredThs","activeAllowedEntry","cancelledAllowedEntry","deliveredAllowedEntry","reason","CartContext","CartContextProvider","items","setItems","totalPrice","setTotalPrice","subTotalPrice","setSubTotalPrice","local","tmpPrice","item","count","price","addItem","discount","handleRemove","handleAddOne","newItem","handleMinusOne","postCountUpdate","Counter","setCount","Icon","onBlur","onKeyDown","Cart","productName","qty","unit","ShoppingCart","addressess","setAddressess","newAddress","setNewAddress","customerId","handleCleanUP","opacity","overflow","noValidate","product_id","currentTime","convertTime","moment","tz","today","date","getMonth","getDate","getHours","getMinutes","customer_add_id","htmlFor","borderColor","house_no","road_no","further_description","defaultChecked","CheckoutPage","goBack","NotFoundPage","Charts","pointBorderColor","ticksBackdropColor","fontColor","gridColor","barChartData","setBarChartData","lineChartData","setLineChartData","polarChartData","setPolarChartData","end_date","start_date","Chart","defaults","global","defaultFontColor","defaultFontFamily","helpers","each","instances","instance","chart","update","chartsData","dataLine","labels","options","legend","plugins","datalabels","scales","xAxes","ticks","source","scaleLabel","labelString","gridLines","yAxes","datasets","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","dataBar","maintainAspectRatio","layout","left","right","top","bottom","align","anchor","borderWidth","dataPolar","pieceLabel","showZero","render","scale","backdropColor","borderAlign","hoverBackgroundColor","lg","extraData","maxHeight","statistics","setStatistics","add","subtract","toLocaleDateString","setDate","start","end","isBefore","duration","diff","total_orders","delivered","income","StatisticsPage","UpdateProductDetails","product","product_name","autoFocus","serviceInfo","vat","Img","results","verticalAlign","CustomPagination","paginationActiveLinkClass","itemClass","activeLinkClass","linkClass","itemsCountPerPage","pageRangeDisplayed","activePage","handlePageClick","totalItemsCount","totalPage","Services","params","useParams","sName","setSName","setServices","setTotalPage","setActivePage","page_number","products","ServiceProviders","UserRegistration","OrderDetails","orderDetailsState","setOrderDetailsState","product_price_per_unit","UpdateEmployeeDetails","employee_name","phone_number","AddEmployee","EmployeeList","employees","setEmployees","employeeID","EmployeeListPage","OrderSuccess","orderDetails","setOrderDetails","total","provider_name","OrderSuccessPage","AddProduct","availableProduct","base_price","ProductContext","ProductContextProvider","category","setCategory","localCategory","changeCategory","selectedCategory","SelectCategory","categories","setCategories","setSelectedCategory","AvailableProducts","availableProducts","setAvailableProducts","library","far","fas","fab","App","basename","path","exact","OrderDetailsPage","AvailableProductPage","AreasPage","HistoryPage","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f4bc3df.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const SettingsContext = createContext();\n\nconst SettingsContextProvider = (props) => {\n    const [isAnimated, setIsAnimated] = useState(false);\n\n    const changeIsAnimated = () => setIsAnimated(!isAnimated);\n\n    return (\n        <SettingsContext.Provider value={{ isAnimated, changeIsAnimated }}>\n            {props.children}\n        </SettingsContext.Provider>\n    );\n};\n\nexport default SettingsContextProvider;\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const AuthenticationContext = createContext();\n\nconst AuthenticationContextProvider = (props) => {\n    const history = useHistory();\n\n    const [isAuthenticated, setIsAuthenticated] = useState(\"\");\n\n    useEffect(() => {\n        const currentAuth = localStorage.getItem(\"isAuthenticated\");\n\n        if (currentAuth !== isAuthenticated) setIsAuthenticated(currentAuth);\n    }, [isAuthenticated]);\n\n    const handleAuthentication = (isAuthenticated) => {\n        setIsAuthenticated(isAuthenticated);\n        localStorage.setItem(\"isAuthenticated\", isAuthenticated);\n    };\n\n    const handleLogOut = async () => {\n        const API_URL =\n            localStorage.getItem(\"isServiceProvider\") === \"true\"\n                ? \"/servicelogout/\"\n                : \"/logout/\";\n\n        const response = await fetch(API_URL, {\n            method: \"GET\",\n        });\n\n        if (response.ok) {\n            handleAuthentication(\"\");\n            localStorage.setItem(\"userID\", \"\");\n            localStorage.setItem(\"username\", \"\");\n            localStorage.setItem(\"isServiceProvider\",\"\");\n            localStorage.setItem(\"phone_number\", \"\");\n            // window.location.replace(\"/login\");\n            history.push(\"/login\")\n        }\n    };\n\n    return (\n        <AuthenticationContext.Provider\n            value={{ isAuthenticated, handleAuthentication, handleLogOut }}\n        >\n            {props.children}\n        </AuthenticationContext.Provider>\n    );\n};\n\nexport default AuthenticationContextProvider;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const ThemeContext = createContext();\n\nconst ThemeContextProvider = (props) => {\n  const [isLightTheme, setIsLightTheme] = useState(false);\n\n  // componentDidMount\n  useEffect(() => {\n    const json = sessionStorage.getItem(\"theme\");\n    const localTheme = JSON.parse(json);\n\n    if (localTheme != null) setIsLightTheme(localTheme);\n  }, []);\n\n  // componentDidUpdate\n  useEffect(() => {\n    const json = sessionStorage.getItem(\"theme\");\n    const localTheme = JSON.parse(json);\n\n    if (localTheme !== isLightTheme)\n      sessionStorage.setItem(\"theme\", JSON.stringify(isLightTheme));\n  }, [isLightTheme]);\n\n  const theme = {\n    light: {\n      syntax:         \"\",\n      bg:             \"#ffffff\",\n      link:           \" link\",\n      ui:             \" bg-light\",\n      border:         \" custom-border\",\n      custom_text:    \" text-main\",\n      type:           \"main\",\n      dropdown_text:  \" dropdown-text\",\n      borderLeft:     \" #eee\",\n      currency_text:  \" text-success-light\",\n      success:        \"success-light\",\n      secondary:      \"secondary\",\n      mainColor:      \"#2980b9\",\n      mainBG:         \" bg-main-bg\",\n      dangerTextColor:\" text-danger\",\n      btnTypeClass:   \" btn-main\",\n      lineChartbg:    \"rgba(41, 127, 185, 0.15)\",\n    },\n    dark: {\n      syntax:         \" text-white\",\n      bg:             \"#20222b\",\n      link:           \" link-dark\",\n      ui:             \" bg-dark\",\n      border:         \" custom-border-dark\",\n      custom_text:    \" text-main-dark\",\n      type:           \"main-dark\",\n      dropdown_text:  \" dropdown-text-dark\",\n      borderLeft:     \" #cecece1f\",\n      currency_text:  \" text-success-dark\",\n      success:        \"success-dark\",\n      secondary:      \"secondary-dark\",\n      mainColor:      \"#feca57\",\n      mainBG:         \" bg-main-bg-dark\",\n      dangerTextColor:\" text-remove\",\n      btnTypeClass:   \" btn-main-dark\",\n      lineChartbg:    \"rgba(254, 201, 87, 0.4)\",\n    },\n  };\n\n  const toggleTheme = () => {\n    setIsLightTheme(!isLightTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isLightTheme, theme, toggleTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { WbSunny, NightsStay } from \"@material-ui/icons\";\n\nconst ToggleTheme = () => {\n    const { toggleTheme } = useContext(ThemeContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    return (\n        <div onClick={toggleTheme} className={\"font-weight-bold\" + custom_text}>\n            {isLightTheme ? (\n                <>\n                    <NightsStay className=\"mb-1\" />\n                    <span className=\"ml-2\">Dark Mode</span>\n                </>\n            ) : (\n                <>\n                    <WbSunny className=\"mb-1\" />\n                    <span className=\"ml-2\">Light Mode</span>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default ToggleTheme;\n","import React, { useState, useContext } from \"react\";\nimport { Navbar, Nav, Dropdown } from \"react-bootstrap\";\nimport {\n    History,\n    Equalizer,\n    ShoppingCart,\n    AccountCircle,\n    ArrowDropDown,\n} from \"@material-ui/icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useWindowScroll } from \"beautiful-react-hooks\";\n\nimport ToggleTheme from \"../theme/ToggleTheme\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { SettingsContext } from \"../../contexts/SettingsContext\";\n\nconst MainNav = (props) => {\n    // const { isAnimated } = useContext(SettingsContext);\n    const [isShadow, setIsShadow] = useState(window.scrollY > 20);\n    const [isAuthenticated] = useState(localStorage.getItem(\"isAuthenticated\"));\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    useWindowScroll((event) => {\n        setIsShadow(window.scrollY > 20);\n    });\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const dropdown_text = isLightTheme\n        ? theme.light.dropdown_text\n        : theme.dark.dropdown_text;\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n    const variant = isLightTheme ? \"light\" : \"dark\";\n    const borderLeft = isLightTheme\n        ? theme.light.borderLeft\n        : theme.dark.borderLeft;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const navLinkStyle = {\n        paddingLeft: 15,\n        paddingRight: 15,\n        cursor: \"pointer\",\n        // fontWeight: \"600\",\n        borderLeft: \"1px solid\" + borderLeft,\n    };\n\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <div\n            ref={ref}\n            style={navLinkStyle}\n            onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n            }}\n            className={\"h-100 pt-2\" + custom_text}\n        >\n            {children}\n            <ArrowDropDown className=\"mb-1\" />\n        </div>\n    ));\n\n    return (\n        <Navbar\n            expand=\"lg\"\n            sticky=\"top\"\n            variant={variant}\n            style={{ backgroundColor: bg }}\n            className={isShadow ? \"shadow\" : \"\"}\n        >\n            <Navbar.Brand\n                as={NavLink}\n                className={custom_text}\n                to={isServiceProvider ? \"/orders\" : \"/\"}\n                style={{ fontFamily: \"MuseoModerno\", fontSize: \"1.4rem\" }}\n            >\n                ProjectX\n                <sup>&alpha;</sup>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"main-nav\" />\n            <Navbar.Collapse id=\"main-nav\">\n                <Nav className=\"ml-auto\">\n                    <Nav.Link\n                        as={NavLink}\n                        style={navLinkStyle}\n                        className={\"font-weight-bold\" + custom_text}\n                        to={isAuthenticated ? \"/profile\" : \"/login\"}\n                    >\n                        <AccountCircle className=\"mb-1\" />\n                        <span className=\"ml-2\">\n                            {localStorage.getItem(\"username\")\n                                ? localStorage.getItem(\"username\")\n                                : \"Login\"}\n                        </span>\n                    </Nav.Link>\n\n                    <Nav.Link\n                        as={NavLink}\n                        to={\"/history\"}\n                        style={navLinkStyle}\n                        className={\"font-weight-bold\" + custom_text}\n                    >\n                        <History className=\"mb-1\" />\n                        <span className=\"ml-2\">History</span>\n                    </Nav.Link>\n\n                    <Nav.Link style={navLinkStyle}>\n                        <ToggleTheme />\n                    </Nav.Link>\n\n                    {isServiceProvider ? (\n                        <Dropdown alignRight={true}>\n                            <Dropdown.Toggle as={CustomToggle}>\n                                <Equalizer className=\"mb-1\" />\n                                <span className=\"font-weight-bold ml-2\">\n                                    Dashboard\n                                </span>\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu\n                                className={ui + border}\n                                style={{ width: \"15rem\" }}\n                            >\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/orders\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"tasks\"]}\n                                    />\n                                    Orders\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/statistics\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"chart-line\"]}\n                                    />\n                                    Statistics\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    variant={type}\n                                    to={`/service/provider/${localStorage.getItem(\n                                        \"userID\"\n                                    )}`}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"boxes\"]}\n                                    />\n                                    Inventory\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    variant={type}\n                                    to=\"/add/product\"\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"plus-circle\"]}\n                                    />\n                                    Add Products\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/areas\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"map-marked-alt\"]}\n                                    />\n                                    Manage Areas\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/employee\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"users-cog\"]}\n                                    />\n                                    Employee Details\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    ) : (\n                        <Nav.Link\n                            to=\"/cart\"\n                            as={NavLink}\n                            style={navLinkStyle}\n                            className={custom_text}\n                        >\n                            <ShoppingCart className=\"mb-1\" />\n                            <span className=\"ml-2\">Cart</span>\n                        </Nav.Link>\n                    )}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nexport default MainNav;\n","import React, { useContext } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Main = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n\n    return (\n        <div className=\"vertical-center\" style={{ background: bg }}>\n            <Container className=\"mt-5\">{props.children}</Container>\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Footer = () => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const bottomBorder = {\n        width: \"60px\",\n        height: \"2px\",\n        display: \"inline-block\",\n        backgroundColor: mainColor,\n    };\n\n    return (\n        <footer style={{ backgroundColor: bg }} className={\"pt-5\" + syntax}>\n            <div className=\"container p-4\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 mb-4 mb-md-0\">\n                        <h5>About</h5>\n                        <hr style={bottomBorder} className=\"mb-3 mt-n1\" />\n\n                        <p className={\"text-justify\" + link}>\n                            Project X is founded with a vision to provide every\n                            customer with a choice; The choice of buying\n                            organic, authentic and cost effective products with\n                            minimum friction. Project X is founded in 2020 by\n                            a few students at{\" \"}\n                            <a\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                className={custom_text}\n                                href=\"https://www.sust.edu/\"\n                            >\n                                SUST\n                            </a>\n                            . The local market place will be only finger-tips\n                            away for any customer in possession of a\n                            smartphone/computer and an internet connection. They\n                            will be able to purchase everything; from a\n                            safety-pin to car from our website. For service\n                            providers they can supervise their business at a\n                            glace from the website.\n                        </p>\n                    </div>\n\n                    {/* <div className=\"col-lg-3 col-6 mb-4 mb-md-0 text-lg-right\">\n                        <h5>Quick Links</h5>\n                        <hr style={bottomBorder} className=\"mb-3 mt-n1\" />\n\n                        <div className={link}>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 1\n                                </a>\n                            </p>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 2\n                                </a>\n                            </p>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 3\n                                </a>\n                            </p>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 4\n                                </a>\n                            </p>\n                        </div>\n                    </div> */}\n\n                    <div className=\"col-md-4 mb-4 mb-md-0 text-right\">\n                        <h5>Contacts</h5>\n                        <hr style={bottomBorder} className=\"mb-3 mt-n1\" />\n\n                        <div className={link}>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"phone\"]}\n                                />\n                                01886298142\n                            </p>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"phone\"]}\n                                />\n                                01534771222\n                            </p>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"envelope\"]}\n                                />\n                                project_x@gmail.com\n                            </p>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"home\"]}\n                                />\n                                Akhalia, Varsity gate, Sylhet\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                {localStorage.getItem(\"isAuthenticated\") !== \"Yes\" && (\n                    <div className={\"text-center\" + link}>\n                        Register for free{\" \"}\n                        <Link to=\"/registration\" className={custom_text}>\n                            Sign up\n                        </Link>\n                    </div>\n                )}\n\n                <section className=\"mt-4 text-center\">\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mx-4\"\n                        style={{ color: \"#3b5998\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"facebook-f\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#55acee\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#dd4b39\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"google\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#ac2bac\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"instagram\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#0082ca\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"linkedin-in\"]} />\n                    </a>\n                </section>\n            </div>\n\n            <div\n                className={\"text-center p-3\" + link}\n                // style={{ backgroundColor: \"rgba(0, 0, 0, 0.2)\" }}\n            >\n                © {new Date().getFullYear()} Copyright:{\" \"}\n                <a className={custom_text} href=\"#!\">\n                    ProjectX | All rights reserved\n                </a>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport MainNav from \"./navbar\";\nimport ThemeContextProvider from \"../../contexts/ThemeContext\";\nimport Main from \"./main\";\nimport Footer from \"./Footer\";\n\nconst Layout = (props) => {\n    return (\n        <ThemeContextProvider>\n            <MainNav />\n            <Main>\n                {window.scrollTo(0, 0)}\n                {props.children}\n            </Main>\n            <Footer />\n        </ThemeContextProvider>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst CustomAlert = (props) => {\n    return (\n        <div className={props.noCenter ? \"\" : \"text-center\"}>\n            <Alert\n                variant={props.variant ? props.variant : \"danger\"}\n                className={\n                    props.alertClass ? `ccard ${props.alertClass}` : \"ccard\"\n                }\n            >\n                {props.status}\n            </Alert>\n        </div>\n    );\n};\n\nexport default CustomAlert;\n","import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { Button, Row } from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\nimport CustomAlert from \"../generic/CustomAlert\";\nimport { AuthenticationContext } from \"../../contexts/AuthenticationContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst ProfileForm = () => {\n    const [user, setUser] = useState({});\n    const [canEdit, setCanEdit] = useState(false);\n    const [status, setStatus] = useState(undefined);\n    const [variant, setVariant] = useState(\"danger\");\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    const form = useRef(null);\n\n    const { handleLogOut } = useContext(AuthenticationContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    useEffect(() => {\n        const loadData = async () => {\n            const API_URL = isServiceProvider\n                ? \"/getProfile/\"\n                : \"/customerprofile/\";\n\n            const object = {\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            // if (response.status === 401) handleLogOut();\n\n            const data = await response.json();\n\n            if (!response.ok) setStatus(data.detail);\n            else setUser({ ...data });\n        };\n\n        loadData();\n    }, [isServiceProvider]);\n\n    const handleEdit = () => {\n        setStatus(\"\");\n        setCanEdit(!canEdit);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = isServiceProvider\n            ? \"/updateProfile/\"\n            : \"/customerupdateprofile/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n            object[\"userid\"] = localStorage.getItem(\"userID\");\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n                else {\n                    setVariant(\"success\");\n                    setStatus(\"Profile updated successfully\");\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n        setCanEdit(!canEdit);\n    };\n\n    return (\n        <div\n            className={\"card mx-auto\" + ui + syntax + border}\n            style={{ maxWidth: \"38rem\" }}\n        >\n            <article className=\"card-body\">\n                <h3 className=\"text-center mb-4\">\n                    {user.username && user.username + \"'s\"} Profile\n                </h3>\n                <form ref={form} onSubmit={handleSubmit} className=\"mx-auto\">\n                    {status && (\n                        <CustomAlert variant={variant} status={status} />\n                    )}\n\n                    <Row className=\"form-group\">\n                        <Col className=\"my-auto\">\n                            <FontAwesomeIcon\n                                className=\"mr-2\"\n                                icon={[\"fas\", \"user\"]}\n                            />\n                            Username:\n                        </Col>\n                        <Col md={8} sm={12}>\n                            <div className={\"input-group rounded\" + border}>\n                                <input\n                                    type=\"text\"\n                                    name=\"username\"\n                                    readOnly={!canEdit}\n                                    defaultValue={user.username}\n                                    className=\"form-control text-center rounded-0\"\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Col className=\"my-auto\">\n                            <FontAwesomeIcon\n                                className=\"mr-2\"\n                                icon={[\"fas\", \"phone\"]}\n                            />\n                            Phone:\n                        </Col>\n                        <Col md={8} sm={12}>\n                            <div className={\"input-group rounded\" + border}>\n                                <input\n                                    readOnly\n                                    type=\"number\"\n                                    name=\"userphone\"\n                                    defaultValue={user.userphone}\n                                    className=\"form-control text-center rounded-0\"\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n\n                    {isServiceProvider && (\n                        <>\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"building\"]}\n                                    />\n                                    Company:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"company_name\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.company_name}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"hand-holding-usd\"]}\n                                    />\n                                    Delivery Charge:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"number\"\n                                            readOnly={!canEdit}\n                                            name=\"delivery_charge\"\n                                            defaultValue={user.delivery_charge}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"plus\"]}\n                                    />\n                                    Description:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"description\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.description}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"id-card\"]}\n                                    />\n                                    NID:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            name=\"nid\"\n                                            type=\"text\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.nid}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"taxi\"]}\n                                    />\n                                    Service type:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"service_type\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.service_type}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"id-card\"]}\n                                    />\n                                    Trade license:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"trade_license\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.trade_license}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"location-arrow\"]}\n                                    />\n                                    Address:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"address\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.address}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n                        </>\n                    )}\n\n                    <div className=\"row mt-3\">\n                        <div\n                            className={\n                                canEdit\n                                    ? \"col-sm-12 mb-2 col-md-4\"\n                                    : \"col-sm-12 mb-2 col-md-6\"\n                            }\n                        >\n                            <Button\n                                className=\"w-100\"\n                                onClick={handleLogOut}\n                                variant={\"outline-\" + type}\n                            >\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"sign-out-alt\"]}\n                                />\n                                Logout\n                            </Button>\n                        </div>\n\n                        {canEdit && (\n                            <div\n                                className={\n                                    canEdit\n                                        ? \"col-sm-12 mb-2 col-md-4\"\n                                        : \"col-sm-12 mb-2 col-md-6\"\n                                }\n                            >\n                                <Button\n                                    variant=\"remove\"\n                                    className=\"w-100\"\n                                    onClick={handleEdit}\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"strikethrough\"]}\n                                    />\n                                    Cancel Edit\n                                </Button>\n                            </div>\n                        )}\n\n                        <div\n                            className={\n                                canEdit\n                                    ? \"col-sm-12 mb-2 col-md-4\"\n                                    : \"col-sm-12 mb-2 col-md-6\"\n                            }\n                        >\n                            <Button\n                                variant={type}\n                                className=\"w-100\"\n                                onClick={canEdit ? handleSubmit : handleEdit}\n                            >\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", canEdit ? \"wrench\" : \"edit\"]}\n                                />\n                                {canEdit ? \"Update Profile\" : \"Edit Profile\"}\n                            </Button>\n                        </div>\n                    </div>\n                </form>\n            </article>\n        </div>\n    );\n};\n\nexport default ProfileForm;\n","import React from \"react\";\nimport Layout from \"../components/generic/layout\";\nimport ProfileForm from \"../components/user/ProfileForm\";\n\nconst Profile = () => {\n    return (\n        <Layout>\n            <ProfileForm />\n        </Layout>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n    search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(3),\n            width: \"auto\",\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \"20ch\",\n        },\n    },\n    sectionDesktop: {\n        display: \"none\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"flex\",\n        },\n    },\n    sectionMobile: {\n        display: \"flex\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"none\",\n        },\n    },\n}));\n\nexport default function Test() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = \"primary-search-account-menu\";\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = \"primary-search-account-menu-mobile\";\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton\n                    aria-label=\"show 11 new notifications\"\n                    color=\"inherit\"\n                >\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Material-UI\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ \"aria-label\": \"search\" }}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton\n                            aria-label=\"show 4 new mails\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            aria-label=\"show 17 new notifications\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={17} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n","import React from \"react\";\nimport Test from \"./Test.jsx\"\nimport Layout from \"../components/generic/layout\";\n\nconst TestPage = () => {\n    return (\n        <Layout>\n            <Test />\n        </Layout>\n    );\n};\n\nexport default TestPage;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Title = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    return (\n        <span\n            className={custom_text}\n            style={{ fontWeight: \"600\", fontSize: \"1.08rem\" }}\n        >\n            {props.children}\n        </span>\n    );\n};\n\nexport default Title;\n","import React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Title from \"../generic/title\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Provider = (props) => {\n    const [show, setShow] = useState(true);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n\n    const [provider, setProvider] = useState({});\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/getProfile/\";\n\n        const loadData = async () => {\n            const servideID = {\n                userid: props.Service.service_id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(servideID),\n            });\n\n            const data = await response.json();\n\n            setProvider(data);\n        };\n        loadData();\n\n        if (\n            provider.userid &&\n            sessionStorage.getItem(\"service_id\") &&\n            sessionStorage.getItem(\"service_id\") !== provider.userid.toString()\n        )\n            setShow(false);\n    }, [props.Service, provider.userid]);\n\n    return (\n        <div className=\"col-lg-6 mb-3\">\n            <Card className={\"p-3 shadow\" + ui + border}>\n                <div>\n                    <div className=\"d-block\">\n                        <img\n                            src={`https://picsum.photos/id/${Math.floor(\n                                Math.random() * 1000\n                            )}/800`}\n                            onError={(e) => {\n                                e.target.onerror = null;\n                                e.target.src = \"/img/Default.png\";\n                            }}\n                            alt=\"provider's\"\n                            className={\n                                \"mb-1 mr-3 float-left profile-pic\" + border\n                            }\n                        />\n                    </div>\n\n                    <div className={syntax}>\n                        <Title>Company: </Title> {provider.company_name}\n                        <br />\n                        <Title>Address: </Title> {provider.address}\n                        <br />\n                        <Title>Service type: </Title> {provider.service_type}\n                        <br />\n                        <Title>Phone number: </Title> {provider.phone_1},{\" \"}\n                        {provider.phone_2}\n                        <br />\n                        <Title>Description: </Title> {provider.description}\n                    </div>\n\n                    <Button\n                        variant={type}\n                        disabled={!show}\n                        as={show && Link}\n                        className=\"w-100 mt-3\"\n                        to={\"/service/provider/\" + props.Service.service_id}\n                    >\n                        <FontAwesomeIcon\n                            className=\"fa-icon mr-2\"\n                            icon={[\"fas\", \"shopping-basket\"]}\n                        />\n                        Show their services\n                    </Button>\n                </div>\n            </Card>\n        </div>\n    );\n};\n\nexport default Provider;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Infobar = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    // const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const mainBG = isLightTheme ? theme.light.mainBG : theme.dark.mainBG;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const text_color = props.text ? \" \" + props.text : syntax;\n\n    return (\n        <div className=\"text-center mb-4\">\n            {/* <h5 className={\"rounded p-3\" + border + ui + text_color}> */}\n            <h5\n                className={\"rounded p-3\" + text_color + mainBG}\n                // style={{ backgroundColor: \"#feca57\" }}\n            >\n                {props.children}\n            </h5>\n        </div>\n    );\n};\n\nexport default Infobar;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const LocationContext = createContext();\n\nconst LocationContextProvider = (props) => {\n    const [location, setLocation] = useState({\n        id: -1,\n        area: \"\",\n        thana: \"\",\n        district: \"\",\n    });\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"location\");\n        const localLocation = JSON.parse(json);\n\n        if (localLocation) setLocation(localLocation);\n    }, []);\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"location\");\n        const localLocation = JSON.parse(json);\n\n        if (localLocation !== location)\n            sessionStorage.setItem(\"location\", JSON.stringify(location));\n    }, [location]);\n\n    const changeLocation = (selectedLocation) => {\n        const loadData = async () => {\n            const API_URL = \"/getAreaID/\";\n\n            const bodyData = {\n                ...selectedLocation,\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                // if (!response.ok) setStatus(data.message);\n\n                sessionStorage.setItem(\"areaID\", data.id);\n                setLocation({ ...selectedLocation, id: data.id });\n            } catch (error) {\n                // setStatus(error);\n            }\n        };\n\n        loadData();\n\n        // Updating sessionStorage\n        sessionStorage.setItem(\"location\", JSON.stringify(selectedLocation));\n    };\n\n    return (\n        <LocationContext.Provider value={{ location, changeLocation }}>\n            {props.children}\n        </LocationContext.Provider>\n    );\n};\n\nexport default LocationContextProvider;\n","import { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport React, { useContext, useState, useEffect } from \"react\";\n\nimport Provider from \"./provider\";\nimport Infobar from \"../generic/infobar\";\nimport { LocationContext } from \"../../contexts/LocationContext\";\n\nconst Providers = () => {\n    const { location } = useContext(LocationContext);\n\n    const [providers, setProviders] = useState([]);\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"getServiceName/\" + location.id;\n\n        const loadData = async () => {\n            try {\n                const apiData = [];\n                const response = await fetch(API_URL);\n                const data = await response.json();\n\n                data.services.map((service) => apiData.push(service));\n                setProviders(apiData);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        loadData();\n    }, [location]);\n\n    return location && location.district && location.area ? (\n        !providers.length > 0 ? (\n            <div className=\"mt-4\">\n                <Infobar>\n                    Sorry, currently we are not providing service in this area{\" \"}\n                    {emoji(\"🙁\")}\n                </Infobar>\n            </div>\n        ) : (\n            <div className=\"row mt-4\">\n                {providers.map((provider) => (\n                    // Here gives unmounted error 🙁\n                    <Provider Service={provider} key={uuidv4()} />\n                ))}\n            </div>\n        )\n    ) : (\n        <div className=\"mt-4\">\n            <Infobar>\n                Select a location to see the service providers {emoji(\"😀\")}\n            </Infobar>\n        </div>\n    );\n};\n\nexport default Providers;\n","import React, { useContext } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst LocationDropDown = (props) => {\n    const handleSelect = (e) => props.handleSelect(e);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const dropdown_text = isLightTheme\n        ? theme.light.dropdown_text\n        : theme.dark.dropdown_text;\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle\n                size={props.size}\n                disabled={props.status && props.status}\n                variant={props.type ? props.type : type}\n                className={\n                    props.customClass && props.customClass + \" text-wrap\"\n                }\n            >\n                {props.title}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className={\"text-center w-100 shadow\" + ui + border}>\n                {props.values &&\n                    props.values.map((value) => (\n                        <Dropdown.Item\n                            key={uuidv4()}\n                            eventKey={value}\n                            onSelect={handleSelect}\n                            className={\"text-wrap\" + syntax + dropdown_text}\n                        >\n                            {value}\n                        </Dropdown.Item>\n                    ))}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default LocationDropDown;\n","import React, { useState, useContext, useEffect } from \"react\";\n\n// import { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { LocationContext } from \"../../contexts/LocationContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport LocationDropDown from \"./LocationDropDown\";\n\nconst SelectLocation = () => {\n    const [areas, setAreas] = useState([]);\n    const [thanas, setThanas] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [selectedLocation, setSelectedLocation] = useState(\n        JSON.parse(sessionStorage.getItem(\"location\"))\n            ? JSON.parse(sessionStorage.getItem(\"location\"))\n            : {\n                  area: \"\",\n                  thana: \"\",\n                  district: \"\",\n              }\n    );\n    const [status, setStatus] = useState(undefined);\n\n    const { changeLocation } = useContext(LocationContext);\n\n    // // Themes\n    // const { isLightTheme, theme } = useContext(ThemeContext);\n    // const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    // ComponentDidMount\n    useEffect(() => {\n        // Setting previously selected location from sessionStorage\n        const json = sessionStorage.getItem(\"location\");\n        const localLocation = JSON.parse(json);\n\n        if (localLocation) {\n            // For refreshed page data\n            const loadData = async () => {\n                let API_URL = \"/getThana/\";\n\n                let bodyData = {\n                    district: localLocation.district,\n                };\n\n                try {\n                    // Getting Thanas\n                    let response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(bodyData),\n                    });\n\n                    let data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n\n                    setThanas(data.details);\n\n                    // Getting Areas\n                    API_URL = \"/getArea/\";\n\n                    bodyData = {\n                        thana: localLocation.thana,\n                        district: localLocation.district,\n                    };\n\n                    response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(bodyData),\n                    });\n\n                    data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n\n                    setAreas(data.details);\n                } catch (error) {\n                    setStatus(error);\n                }\n            };\n\n            loadData();\n        }\n\n        const loadData = async () => {\n            const API_URL = \"/getDistrict/\";\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"GET\",\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setDistricts(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, []);\n\n    const handleDistrictSelect = (e) => {\n        setSelectedLocation({\n            area: \"\",\n            thana: \"\",\n            district: e,\n        });\n\n        const loadData = async () => {\n            const API_URL = \"/getThana/\";\n\n            const bodyData = {\n                district: e,\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setThanas(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleThanaSelect = (e) => {\n        setSelectedLocation({ ...selectedLocation, area: \"\", thana: e });\n\n        const loadData = async () => {\n            const API_URL = \"/getArea/\";\n\n            const bodyData = {\n                thana: e,\n                district: selectedLocation.district,\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setAreas(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleAreaSelect = (e) => {\n        setSelectedLocation({ ...selectedLocation, area: e });\n        changeLocation({ ...selectedLocation, area: e });\n    };\n\n    return (\n        <div>\n            {status && <CustomAlert status={status} />}\n\n            <div className=\"row\">\n                <div className=\"col-sm-12 col-lg-4\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        status=\"\"\n                        customClass=\"mb-2 w-100\"\n                        values={districts ? districts : []}\n                        handleSelect={handleDistrictSelect}\n                        title={\n                            selectedLocation && selectedLocation.district\n                                ? selectedLocation.district\n                                : \"District\"\n                        }\n                    />\n                </div>\n\n                <div className=\"col-sm-12 col-lg-4\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        customClass=\"mb-2 w-100\"\n                        values={thanas ? thanas : []}\n                        status={!selectedLocation.district}\n                        handleSelect={handleThanaSelect}\n                        title={\n                            selectedLocation && selectedLocation.thana\n                                ? selectedLocation.thana\n                                : \"Thana\"\n                        }\n                    />\n                </div>\n\n                <div className=\"col-sm-12 col-lg-4\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        customClass=\"mb-2 w-100\"\n                        values={areas ? areas : []}\n                        status={!selectedLocation.thana}\n                        handleSelect={handleAreaSelect}\n                        title={\n                            selectedLocation && selectedLocation.area !== \"\"\n                                ? selectedLocation.area\n                                : \"Area\"\n                        }\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SelectLocation;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { ThemeContext } from \"../contexts/ThemeContext\";\n\nimport Providers from \"./providers/providers\";\nimport LocationContextProvider from \"../contexts/LocationContext\";\nimport SelectLocation from \"./location/SelectLocation\";\n\nconst Home = () => {\n    const history = useHistory();\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    return (\n        <>\n            <div className={\"text-center mt-2 mb-5\" + syntax}>\n                <h2>\n                    Why bother, when <span className=\"logo-text\">ProjectX</span>{\" \"}\n                    is here!\n                </h2>\n            </div>\n\n            <LocationContextProvider>\n                <SelectLocation />\n                <Providers />\n            </LocationContextProvider>\n\n            {localStorage.getItem(\"isServiceProvider\") === \"true\" &&\n                history.push(\"/orders\")}\n        </>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport Home from \"../components/Home\";\n\nconst HomePage = () => {\n    return (\n        <Layout>\n            <Home />\n        </Layout>\n    );\n};\n\nexport default HomePage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { Button } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport { AuthenticationContext } from \"../../contexts/AuthenticationContext\";\n\nconst LoginForm = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(\"\");\n    const { handleAuthentication } = useContext(AuthenticationContext);\n\n    const [isServiceProvider, setIsServiceProvider] = useState(false);\n    const [showVerificationArea, setShowVerificationArea] = useState(false);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = !showVerificationArea\n            ? isServiceProvider\n                ? \"/servicelogin/\"\n                : \"/login/\"\n            : isServiceProvider\n            ? \"/serviceverify/\"\n            : \"/verify/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n                else if (!showVerificationArea) {\n                    setStatus(undefined);\n                    setShowVerificationArea(true);\n                } else {\n                    localStorage.setItem(\"userID\", data.userid);\n                    localStorage.setItem(\"username\", data.username);\n                    localStorage.setItem(\"phone_number\", object.phone);\n                    // window.location.replace(\"/\");\n                    localStorage.setItem(\n                        \"isServiceProvider\",\n                        isServiceProvider\n                    );\n                    handleAuthentication(\"Yes\");\n                    isServiceProvider\n                        ? props.history.push(\"/orders\")\n                        : props.history.push(\"/\");\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleCheck = () => setIsServiceProvider(!isServiceProvider);\n\n    return (\n        <div\n            className={\"card mx-auto\" + ui + syntax + border}\n            style={{ maxWidth: \"30rem\" }}\n        >\n            <article className=\"card-body p-md-5 mx-auto\">\n                <div className=\"d-flex justify-content-between mb-4 mx-0\">\n                    <div className=\"w-50 p-0\">\n                        <img\n                            src=\"/img/profile_pic.png\"\n                            onError={(e) => {\n                                e.target.onerror = null;\n                                e.target.src = \"/img/Default.png\";\n                            }}\n                            alt=\"profile\"\n                            className={\"rounded-circle w-100\" + border}\n                            // className={\"rounded w-100\" + border}\n                        />\n                    </div>\n\n                    <div className=\"text-center my-auto\">\n                        <Link\n                            to=\"/registration\"\n                            className={\"btn btn-outline-\" + type}\n                        >\n                            Sign up\n                        </Link>\n                        <div className=\"my-3 text-center divider-text\">\n                            <span className={\"px-4\" + ui}>OR</span>\n                        </div>\n                        <h5 className=\"card-title\">Sign in</h5>\n                    </div>\n                </div>\n\n                <form ref={form} onSubmit={handleSubmit}>\n                    {status && <CustomAlert status={status} />}\n\n                    <div className={\"form-group input-group rounded\" + border}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text rounded-0\">\n                                <FontAwesomeIcon icon={[\"fas\", \"phone\"]} />\n                            </span>\n                        </div>\n                        {/* <select\n                            className=\"custom-select\"\n                            style={{ maxWidth: \"85px\" }}\n                        >\n                            <option defaultValue=\"\">+880</option>\n                            <option value=\"1\">+972</option>\n                            <option value=\"2\">+198</option>\n                            <option value=\"3\">+701</option>\n                        </select> */}\n                        <input\n                            required\n                            name=\"phone\"\n                            type=\"number\"\n                            placeholder=\"Phone number\"\n                            className=\"form-control rounded-0\"\n                        />\n                    </div>\n\n                    {showVerificationArea ? (\n                        <div\n                            className={\n                                \"form-group input-group rounded\" + border\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text rounded-0\">\n                                    <FontAwesomeIcon icon={[\"fas\", \"code\"]} />\n                                </span>\n                            </div>\n                            <input\n                                required\n                                name=\"code\"\n                                type=\"number\"\n                                placeholder=\"Verification Code\"\n                                className=\"form-control rounded-0\"\n                            />\n                        </div>\n                    ) : (\n                        <div className=\"form-group\">\n                            <input type=\"checkbox\" onClick={handleCheck} />\n                            <label className=\"ml-1\">\n                                Login as a Service Provider\n                            </label>\n                        </div>\n                    )}\n\n                    {showVerificationArea && (\n                        <div className=\"text-center mb-3\">\n                            <small>\n                                A 6 digit verification code has been sent to\n                                this phone number, type it to login into your\n                                account\n                            </small>\n                        </div>\n                    )}\n\n                    <div className=\"form-group\">\n                        <Button type=\"submit\" variant={type} className=\"w-100\">\n                            {showVerificationArea ? (\n                                <>\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"sign-in-alt\"]}\n                                    />\n                                    Login\n                                </>\n                            ) : (\n                                <>\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"code\"]}\n                                    />\n                                    Send Verification Code\n                                </>\n                            )}\n                        </Button>\n                    </div>\n                </form>\n            </article>\n        </div>\n    );\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport Layout from '../components/generic/layout';\nimport LoginForm from '../components/user/loginForm';\n\nconst UserLogin = () => {\n    return (\n        <Layout>\n            <LoginForm />\n        </Layout>\n    );\n}\n \nexport default UserLogin;","import React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { Button } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst SearchBar = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n\n    const handleChange = (e) => {\n        props.handleChange(e);\n    };\n\n    return (\n        <div className=\"my-5\">\n            <div className=\"d-flex\">\n                <input\n                    type=\"text\"\n                    onChange={handleChange}\n                    placeholder={props.placeholder}\n                    style={{ borderBottom: \"2px solid \" + mainColor }}\n                    className={\n                        \"transparent__input mr-3 pl-2 text-danger\" + custom_text\n                    }\n                />\n\n                <Button variant={type}>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-sm-2\"\n                        icon={[\"fas\", \"search\"]}\n                    />\n                    <span className=\"d-none d-sm-inline\">Search</span>\n                </Button>\n            </div>\n\n            <div className={\"text-center mt-3\" + syntax}>\n                <small>{props.searchBy}</small>\n            </div>\n        </div>\n    );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Table } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst CustomTable = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const variant = isLightTheme ? \"light\" : \"dark\";\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    return (\n        <div className={\"shadow rounded\" + border}>\n            <Table striped responsive=\"sm\" className=\"mb-0\" variant={variant}>\n                <thead>\n                    <tr>\n                        {props.ths.map((th) => (\n                            <th\n                                scope=\"col\"\n                                key={uuidv4()}\n                                className={\n                                    \"text-center align-middle \" + th.className\n                                }\n                            >\n                                {th.value}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.datas &&\n                        props.datas.map((data, index) => (\n                            <tr key={uuidv4()}>\n                                {props.index && (\n                                    <td className=\"text-center align-middle\">\n                                        {index + 1}\n                                    </td>\n                                )}\n\n                                {props.PreActionComponents &&\n                                    props.PreActionComponents.map(\n                                        (PreActionComponent) => (\n                                            <td\n                                                key={uuidv4()}\n                                                className={\n                                                    \"text-center align-middle \" +\n                                                    PreActionComponent.className\n                                                }\n                                            >\n                                                {PreActionComponent.component(\n                                                    data\n                                                )}\n                                            </td>\n                                        )\n                                    )}\n\n                                {/* Filter data[key] by the props.allowedEntry array */}\n                                {props.allowedEntry\n                                    ? Object.keys(\n                                          Object.keys(data)\n                                              .filter((key) =>\n                                                  props.allowedEntry.includes(\n                                                      key\n                                                  )\n                                              )\n                                              .reduce((obj, key) => {\n                                                  obj[key] = data[key];\n                                                  return obj;\n                                              }, {})\n                                      ).map((key, i) => (\n                                          <td\n                                              key={uuidv4()}\n                                              className={\n                                                  props.tdsClassName\n                                                      ? \"text-center align-middle \" +\n                                                        props.tdsClassName[i]\n                                                      : \"text-center align-middle\"\n                                              }\n                                          >\n                                              {data[key] ? data[key] : \"-----\"}\n                                          </td>\n                                      ))\n                                    : Object.keys(data).map((key, i) => (\n                                          <td\n                                              key={uuidv4()}\n                                              className={\n                                                  props.tdsClassName\n                                                      ? \"text-center align-middle \" +\n                                                        props.tdsClassName[i]\n                                                      : \"text-center align-middle\"\n                                              }\n                                          >\n                                              {data[key]}\n                                          </td>\n                                      ))}\n\n                                {props.ActionComponents &&\n                                    props.ActionComponents.map(\n                                        (ActionComponent) => (\n                                            <td\n                                                key={uuidv4()}\n                                                className={\n                                                    \"text-center align-middle \" +\n                                                    ActionComponent.className\n                                                }\n                                            >\n                                                {ActionComponent.component(\n                                                    data\n                                                )}\n                                            </td>\n                                        )\n                                    )}\n                            </tr>\n                        ))}\n                </tbody>\n            </Table>\n        </div>\n    );\n};\n\nexport default CustomTable;\n","import React, { useState, useContext } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst EmployeeDropDown = (props) => {\n    const [title, setTitle] = useState(props.title);\n\n    const handleSelect = (e, value) => {\n        setTitle(value);\n        // console.log(e, \"Needs name here\", value);\n        const tmp = { id: e, name: value };\n        // props.handleSelect(e);\n        props.handleSelect(tmp);\n    };\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const dropdown_text = isLightTheme\n        ? theme.light.dropdown_text\n        : theme.dark.dropdown_text;\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle\n                size={props.size}\n                disabled={props.status && props.status}\n                variant={props.type ? props.type : type}\n                className={\n                    props.customClass && props.customClass + \" text-wrap\"\n                }\n            >\n                {title}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className={\"text-center w-100 shadow\" + ui + border}>\n                {props.values.map((value) => (\n                    <Dropdown.Item\n                        eventKey={\n                            props.subElementKey\n                                ? value[props.subElementKey]\n                                : value\n                        }\n                        key={uuidv4()}\n                        onSelect={(e) =>\n                            handleSelect(\n                                e,\n                                props.subElementValue &&\n                                    value[props.subElementValue]\n                            )\n                        }\n                        className={\"text-wrap\" + syntax + dropdown_text}\n                    >\n                        {props.subElementValue\n                            ? value[props.subElementValue]\n                            : value}\n                    </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default EmployeeDropDown;\n","import { useHistory } from \"react-router-dom\";\nimport { Alert, Modal, Spinner } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\n\nconst CustomModalAlert = (props) => {\n    const timeoutTime = 1500;\n    const history = useHistory();\n    const [show] = useState(true);\n\n    const { setStatus, redirect, updateFlag } = props;\n\n    const { isAnimated } = useContext(SettingsContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleClose = useCallback(() => {\n        setStatus(undefined);\n        // setShow(false); gives this error -> \"Can't perform a React state update on an unmounted component.\"\n        redirect && history.push(redirect);\n        updateFlag && updateFlag();\n    }, [setStatus, history, redirect, updateFlag]);\n\n    useEffect(() => {\n        setTimeout(handleClose, timeoutTime);\n    }, [handleClose]);\n\n    return (\n        <Modal\n            centered\n            size=\"md\"\n            show={show}\n            onHide={handleClose}\n            animation={isAnimated}\n            className=\"text-center\"\n            style={{ background: bg }}\n        >\n            <div className={\"rounded\" + syntax + border + ui}>\n                <Modal.Body>\n                    <Alert\n                        className={\"m-0 \" + props.alertClass}\n                        variant={props.variant ? props.variant : \"danger\"}\n                    >\n                        <div className=\"mb-3\">\n                            <FontAwesomeIcon\n                                style={{ fontSize: \"4rem\" }}\n                                icon={[\n                                    \"fas\",\n                                    props.variant === \"success\"\n                                        ? \"check-circle\"\n                                        : \"times-circle\",\n                                ]}\n                            />\n                        </div>\n\n                        {props.status}\n\n                        {redirect && (\n                            <div className=\"mt-2\">\n                                <Spinner\n                                    size=\"sm\"\n                                    animation=\"border\"\n                                    className=\"mb-1\"\n                                />\n\n                                <span className=\"ml-2\">Redirecting...</span>\n                            </div>\n                        )}\n                    </Alert>\n                </Modal.Body>\n            </div>\n        </Modal>\n    );\n};\n\nexport default CustomModalAlert;\n","import React, { useContext, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Button, Modal, Col } from \"react-bootstrap\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst CustomModal = (props) => {\n    const { isAnimated } = useContext(SettingsContext);\n    const [show, setShow] = useState(props.show ? props.show : false);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    // const variant = isLightTheme ? \"light\" : \"dark\";\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    // const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const secondary = isLightTheme\n        ? theme.light.secondary\n        : theme.dark.secondary;\n    // const custom_text = isLightTheme\n    //     ? theme.light.custom_text\n    //     : theme.dark.custom_text;\n\n    const handleClose = () => {\n        setShow(false);\n        props.handleCloseAction && props.handleCloseAction();\n    };\n\n    const handleShow = () => setShow(true);\n    const handleAction = () => {\n        props.redirect && props.history.push(props.redirect);\n        // handleClose();\n        props.handleAction();\n        props.updateFlag && props.updateFlag();\n    };\n\n    return (\n        <>\n            {!props.noAction && (\n                <button\n                    onClick={handleShow}\n                    disabled={props.edit}\n                    style={props.modalButtonStyle}\n                    className={props.modalButtonClass}\n                >\n                    {props.children}\n                </button>\n            )}\n\n            <Modal\n                centered\n                show={show}\n                size={props.size}\n                onHide={handleClose}\n                animation={isAnimated}\n                className={props.modalClass}\n            >\n                <div className={\"rounded\" + syntax + border + ui}>\n                    <Modal.Body>\n                        <div className=\"mb-3\">\n                            {props.size === \"sm\" ? (\n                                props.modalTitle\n                            ) : (\n                                <Modal.Title>{props.modalTitle}</Modal.Title>\n                            )}\n                        </div>\n\n                        {props.modalBody}\n\n                        {!props.noAction ? (\n                            <div className=\"d-flex mt-4\">\n                                <Col className=\"pl-0\">\n                                    <Button\n                                        className=\"w-100\"\n                                        variant={secondary}\n                                        onClick={handleClose}\n                                    >\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"times\"]}\n                                            className=\"mr-2\"\n                                        />\n                                        Close\n                                    </Button>\n                                </Col>\n\n                                <Col className=\"p-0\">\n                                    <Button\n                                        className=\"w-100\"\n                                        onClick={handleAction}\n                                        variant={props.actionVariant}\n                                    >\n                                        {props.actionButtonBody}\n                                    </Button>\n                                </Col>\n                            </div>\n                        ) : (\n                            <div className=\"mt-4\">\n                                <Button\n                                    className=\"w-100\"\n                                    variant={secondary}\n                                    onClick={handleClose}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={[\"fas\", \"times\"]}\n                                        className=\"mr-2\"\n                                    />\n                                    Close\n                                </Button>\n                            </div>\n                        )}\n                    </Modal.Body>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default withRouter(CustomModal);\n","import React from \"react\";\nimport CustomModal from \"./CustomModal\";\nimport { withRouter } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst DeleteModal = (props) => {\n    const handleAction = () => {\n        props.redirect && props.history.push(props.redirect);\n        props.handleAction();\n        props.updateFlag && props.updateFlag();\n    };\n\n    return (\n        <CustomModal\n            modalTitle={props.deleteTitle ? props.deleteTitle : \"Delete\"}\n            actionVariant=\"danger\"\n            handleAction={handleAction}\n            modalBody={props.modalBody}\n            modalButtonClass=\"btn btn-sm btn-danger\"\n            actionButtonBody={\n                <>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"trash-alt\"]}\n                    />\n                    {props.deleteText ? props.deleteText : \"Delete\"}\n                </>\n            }\n        >\n            <FontAwesomeIcon\n                className={props.deleteText ? \"fa-icon mr-1\" : \"fa-icon\"}\n                icon={[\n                    \"fas\",\n                    props.deleteIcon ? props.deleteIcon : \"trash-alt\",\n                ]}\n            />\n            {props.deleteText && props.deleteText}\n        </CustomModal>\n    );\n};\n\nexport default withRouter(DeleteModal);\n","import Moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport { AppBar, Tabs, Tab, Box } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Infobar from \"../generic/infobar\";\nimport SearchBar from \"../generic/SearchBar\";\nimport CustomTable from \"../generic/CustomTable\";\nimport EmployeeDropDown from \"../employees/EmployeeDropDown\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport DeleteModal from \"../generic/DeleteModal\";\n\nconst Order = (props) => {\n    const [value, setValue] = useState(0);\n    const [flag, setFlag] = useState(true);\n    const [orders, setOrders] = useState([]);\n    const [employes, setEmployes] = useState([]);\n    const [status, setStatus] = useState(undefined);\n    const [searchData, setSearchData] = useState(\"\");\n    const [tabs] = useState([\"Not Assigned\", \"Assigned\"]);\n    const [assignedOrders, setAssignedOrders] = useState([]);\n    const [statusVariant, setStatusVariant] = useState(undefined);\n    const [selectedEmployeeID, setSelectedEmployeeID] = useState({}); // {27: 17, 28: 2, 32: 28.........}\n    const [selectedEmployeeName, setSelectedEmployeeName] = useState({}); // {27: \"Toha\", 28: \"Dhruvo\", 32: \"lkbnefj\".........}\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const success = isLightTheme ? theme.light.success : theme.dark.success;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        let API_URL = \"/getserviceorders/\";\n\n        const loadData = async () => {\n            let bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            let response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            let data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else setOrders(data.details);\n\n            // Get employee's list\n            API_URL = \"/getEmployee/\";\n\n            bodyData = {\n                search_data: searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else setEmployes(data.employee);\n\n            // Get assigned employee\n            API_URL = \"/getassignedserviceorders/\";\n\n            bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else setAssignedOrders(data.details);\n        };\n        loadData();\n    }, [flag, searchData]);\n\n    const handleOrderComplete = (order_id) => {\n        const API_URL = \"/completeserviceorder/\";\n\n        const loadData = async () => {\n            const orderID = {\n                order_id: order_id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(orderID),\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                // !alert(\n                //     `Order Id: ${order_id} has been completed successfully`\n                // ) && setFlag(!flag);\n                setFlag(!flag);\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatusVariant(\"danger\");\n                setStatus(data.message);\n            }\n        };\n        loadData();\n    };\n\n    const handleAssignComplete = (order_id) => {\n        const API_URL = \"/assignEmployee/\";\n\n        const loadData = async () => {\n            const body = {\n                order_id: order_id,\n                employee_id: selectedEmployeeID[order_id],\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(body),\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                // !alert(\n                //     `Employee ${selectedEmployeeName[order_id]} has been assigned successfully for Order Id: ${order_id}`\n                // ) && setFlag(!flag);\n                setFlag(!flag);\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatusVariant(\"danger\");\n                setStatus(data.message);\n            }\n        };\n        loadData();\n    };\n\n    const handleEmployeeSelect = (e, id) => {\n        setSelectedEmployeeID({ ...selectedEmployeeID, [id]: e.id });\n        setSelectedEmployeeName({ ...selectedEmployeeName, [id]: e.name });\n    };\n\n    const handleCancel = async (order_id) => {\n        const API_URL = \"/cancel/service/order/\";\n\n        const bodyData = {\n            order_id: order_id,\n            userid: localStorage.getItem(\"userID\"),\n        };\n\n        const response = await fetch(API_URL, {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(bodyData),\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n            setStatusVariant(\"success\");\n            setStatus(data.message);\n        } else {\n            setStatusVariant(\"danger\");\n            setStatus(data.message);\n        }\n    };\n\n    const handleSearchChange = (e) => setSearchData(e.target.value);\n\n    // Tab related settings.....\n    const TabPanel = (props) => {\n        const { children, value, index, ...other } = props;\n\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`scrollable-auto-tabpanel-${index}`}\n                aria-labelledby={`scrollable-auto-tab-${index}`}\n                {...other}\n            >\n                {value === index && <Box>{children}</Box>}\n            </div>\n        );\n    };\n\n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n\n    const a11yProps = (index) => {\n        return {\n            id: `scrollable-auto-tab-${index}`,\n            \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n        };\n    };\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Order ID\" },\n            { className: \"\", value: \"Customer Name\" },\n            { className: \"\", value: \"Customer Phone\" },\n            { className: \"\", value: \"Address\" },\n            {\n                className: \"\",\n                value: \"Further Description\",\n            },\n            { className: \"\", value: \"Payment\" },\n            { className: \"\", value: \"Time\" },\n            {\n                className: \"\",\n                value: \"Employee\",\n                // value: index === 0 ? \"Select Employee\" : \"Employee\",\n            },\n            { className: \"\", value: \"Action\" },\n            { className: \"\", value: \"Cancel\" },\n        ],\n        tdsClassName: [\"\", \"\", \"text-break\", \"\"],\n        allowedEntry: [\n            \"customer_name\",\n            \"customer_phone\",\n            \"address\",\n            \"further_description\",\n        ],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>Your Orders</h4>\n\n            <SearchBar\n                handleChange={handleSearchChange}\n                placeholder=\"Search orders....\"\n                searchBy={<>Search by anything except time and cancelled by</>}\n            />\n\n            <AppBar position=\"static\" className={\"rounded\" + ui}>\n                <Tabs\n                    value={value}\n                    variant=\"fullWidth\"\n                    className={custom_text}\n                    onChange={handleChange}\n                    TabIndicatorProps={{ style: { background: mainColor } }}\n                >\n                    {tabs.map((tab) => (\n                        <Tab\n                            label={\n                                tab === \"Not Assigned\" ? (\n                                    <div>\n                                        {tab}{\" \"}\n                                        <span\n                                            className={\n                                                \"badge badge-pill badge-\" + type\n                                            }\n                                        >\n                                            {orders ? orders.length : 0}\n                                        </span>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        {tab}{\" \"}\n                                        <span\n                                            className={\n                                                \"badge badge-pill badge-\" + type\n                                            }\n                                        >\n                                            {assignedOrders\n                                                ? assignedOrders.length\n                                                : 0}\n                                        </span>\n                                    </div>\n                                )\n                            }\n                            key={uuidv4()}\n                            {...a11yProps(uuidv4())}\n                            style={{ textTransform: \"none\" }}\n                        />\n                    ))}\n                </Tabs>\n            </AppBar>\n\n            {tabs.map((tab, index) => (\n                <TabPanel\n                    key={uuidv4()}\n                    value={value}\n                    index={index}\n                    className=\"pt-4\"\n                >\n                    {status && (\n                        <CustomModalAlert\n                            status={status}\n                            setStatus={setStatus}\n                            variant={statusVariant}\n                        />\n                    )}\n\n                    {(index === 0 ? orders : assignedOrders) ? (\n                        <CustomTable\n                            ths={tableData.ths}\n                            allowedEntry={tableData.allowedEntry}\n                            PreActionComponents={[\n                                {\n                                    component: (order) => (\n                                        <Link\n                                            to={`/order/details/${order.order_id}/`}\n                                        >\n                                            {order.order_id}\n                                        </Link>\n                                    ),\n                                    className: link,\n                                },\n                            ]}\n                            tdsClassName={tableData.tdsClassName}\n                            datas={index === 0 ? orders : assignedOrders}\n                            ActionComponents={[\n                                {\n                                    component: (order) => (\n                                        <>\n                                            <span className=\"font-weight-bold\">\n                                                ৳{\" \"}\n                                            </span>\n                                            {order.payment}\n                                        </>\n                                    ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) =>\n                                        Moment(order.time).format(\n                                            \"DD/MM/YY hh:mmA\"\n                                        ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) =>\n                                        index === 0 ? (\n                                            <EmployeeDropDown\n                                                size=\"sm\"\n                                                type={\n                                                    selectedEmployeeName[\n                                                        order.order_id\n                                                    ]\n                                                        ? type\n                                                        : \"outline-\" + type\n                                                }\n                                                subElementKey=\"employee_id\"\n                                                subElementValue=\"employee_name\"\n                                                values={\n                                                    employes ? employes : []\n                                                }\n                                                title={\n                                                    selectedEmployeeName[\n                                                        order.order_id\n                                                    ]\n                                                        ? selectedEmployeeName[\n                                                              order.order_id\n                                                          ]\n                                                        : \"Assign\"\n                                                }\n                                                handleSelect={(e) =>\n                                                    handleEmployeeSelect(\n                                                        e,\n                                                        order.order_id\n                                                    )\n                                                }\n                                            />\n                                        ) : (\n                                            order.employee\n                                        ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) => (\n                                        <Button\n                                            size=\"sm\"\n                                            variant={success}\n                                            disabled={\n                                                selectedEmployeeName[\n                                                    order.order_id\n                                                ]\n                                                    ? false\n                                                    : index === 0\n                                            }\n                                            onClick={() =>\n                                                index === 0\n                                                    ? handleAssignComplete(\n                                                          order.order_id\n                                                      )\n                                                    : handleOrderComplete(\n                                                          order.order_id\n                                                      )\n                                            }\n                                        >\n                                            {index === 0 ? (\n                                                <FontAwesomeIcon\n                                                    icon={[\"fas\", \"user-check\"]}\n                                                />\n                                            ) : (\n                                                <FontAwesomeIcon\n                                                    icon={[\"fas\", \"check\"]}\n                                                />\n                                            )}\n                                        </Button>\n                                    ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) => (\n                                        <DeleteModal\n                                            // deleteText=\"Cancel\"\n                                            deleteTitle=\"Cancel Order\"\n                                            updateFlag={() => setFlag(!flag)}\n                                            handleAction={() =>\n                                                handleCancel(order.order_id)\n                                            }\n                                            deleteIcon=\"ban\"\n                                            modalBody={\n                                                <>\n                                                    Do you really want to cancel\n                                                    this order?{\" \"}\n                                                    <span\n                                                        className={\n                                                            dangerTextColor\n                                                        }\n                                                    >\n                                                        Caution: This action\n                                                        cannot be undone\n                                                    </span>\n                                                </>\n                                            }\n                                        />\n                                    ),\n                                    className: \"\",\n                                },\n                            ]}\n                        />\n                    ) : index === 0 ? (\n                        <Infobar>\n                            You have no orders to show {emoji(\"🥲\")}\n                        </Infobar>\n                    ) : (\n                        <Infobar>\n                            You haven't assigned any orders yet! {emoji(\"🙁\")}\n                        </Infobar>\n                    )}\n                </TabPanel>\n            ))}\n        </>\n    );\n};\n\nexport default Order;\n","import React from \"react\";\n\nimport Order from \"../components/orders/Order\";\nimport Layout from \"../components/generic/layout\";\n\nconst OrderPage = () => {\n    return (\n        <Layout>\n            <Order />\n        </Layout>\n    );\n};\n\nexport default OrderPage;\n","import React, { useContext, useState } from \"react\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport DeleteModal from \"../generic/DeleteModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst RemoveArea = (props) => {\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const handleRemoveArea = () => {\n        const API_URL = \"/removearea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                area_id: props.area.area_id,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setStatus(data.message);\n                    setStatusVariant(\"success\");\n                    window.location.reload();\n                } else setStatus(data.message);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                />\n            )}\n\n            <DeleteModal\n                deleteText={\"Remove Area\"}\n                handleAction={handleRemoveArea}\n                modalBody={\n                    <>\n                        Do you really want to remove Area:{\" \"}\n                        <span className={custom_text}>\n                            {props.area.area_name}\n                        </span>{\" \"}\n                        from your service area?\n                    </>\n                }\n            />\n        </>\n    );\n};\n\nexport default RemoveArea;\n","import React, { useContext, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport CustomModalAlert from \"./CustomModalAlert\";\nimport Infobar from \"./infobar\";\n\nconst CustomCard = (props) => {\n    const { cardBodyData, values, noValueInfo, status, setStatus } = props;\n\n    const [statusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    return (\n        <>\n            {values && values.length > 0 ? (\n                <div className=\"row\">\n                    {status && (\n                        <CustomModalAlert\n                            status={status}\n                            setStatus={setStatus}\n                            variant={statusVariant}\n                        />\n                    )}\n\n                    {values.map((value) => (\n                        <div\n                            key={uuidv4()}\n                            className=\"col-lg-3 col-md-4 col-sm-6 mb-4 text-center\"\n                        >\n                            <Card className={\"shadow\" + ui + border}>\n                                <Card.Body className={syntax}>\n                                    {cardBodyData(value)}\n                                </Card.Body>\n                            </Card>\n                        </div>\n                    ))}\n                </div>\n            ) : (\n                <Infobar>{noValueInfo}</Infobar>\n            )}\n        </>\n    );\n};\n\nexport default CustomCard;\n","import React, { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport emoji from \"react-easy-emoji\";\n\nimport Title from \"../generic/title\";\nimport RemoveArea from \"./RemoveArea\";\nimport CustomCard from \"../generic/CustomCard\";\n// import { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst ServiceAreas = (props) => {\n    const [status, setStatus] = useState(undefined);\n    const [serviceAreas, setServiceAreas] = useState([]);\n\n    // Themes\n    // const { isLightTheme, theme } = useContext(ThemeContext);\n    // const link = isLightTheme ? theme.light.link : theme.dark.link;\n    // const custom_text = isLightTheme\n    //     ? theme.light.custom_text\n    //     : theme.dark.custom_text;\n\n    useEffect(() => {\n        const API_URL = \"/showarea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                search_data: props.searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setServiceAreas(data.Areas);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [props.searchData]);\n\n    return (\n        <CustomCard\n            status={status}\n            setStatus={setStatus}\n            values={serviceAreas}\n            cardBodyData={(serviceArea) => (\n                <>\n                    <Card.Title>{serviceArea.area_name}</Card.Title>\n\n                    <div>\n                        <Title>Thana: </Title> {serviceArea.thana}\n                        <br />\n                        <Title>District: </Title> {serviceArea.district}\n                        {/* <div className={\"py-2\" + link}>\n                            <a\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                className={custom_text}\n                                href={`http://www.google.com/maps/place/${serviceArea.lati},${serviceArea.longi}`}\n                            >\n                                Open in Google Map\n                            </a>\n                        </div> */}\n                    </div>\n\n                    {/* <div className=\"mt-2\"> */}\n                    <div className=\"mt-3\">\n                        <RemoveArea area={serviceArea} />\n                    </div>\n                </>\n            )}\n            noValueInfo={\n                <>\n                    Currently you don't provide your service to any area{\" \"}\n                    {emoji(\"☹\")}\n                </>\n            }\n        />\n    );\n};\n\nexport default ServiceAreas;\n","import React, { useContext, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModal from \"../generic/CustomModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst AddArea = (props) => {\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const btnTypeClass = isLightTheme\n        ? theme.light.btnTypeClass\n        : theme.dark.btnTypeClass;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const handleAddArea = () => {\n        const API_URL = \"/addArea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                area_id: props.area.area_id,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setStatus(data.message);\n                    setStatusVariant(\"success\");\n                    window.location.reload();\n                } else setStatus(data.message);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                />\n            )}\n\n            <CustomModal\n                actionVariant={type}\n                modalTitle=\"Add Product\"\n                handleAction={handleAddArea}\n                modalBody={\n                    <>\n                        Do you really want to add Area:{\" \"}\n                        <span className={custom_text}>\n                            {props.area.area_name}\n                        </span>{\" \"}\n                        as your service area?\n                    </>\n                }\n                modalButtonClass={\"btn btn-sm\" + btnTypeClass}\n                actionButtonBody={\n                    <>\n                        <FontAwesomeIcon\n                            className=\"fa-icon mr-2\"\n                            icon={[\"fas\", \"plus\"]}\n                        />\n                        Add\n                    </>\n                }\n            >\n                {/* <FontAwesomeIcon\n                    className=\"fa-icon mr-2\"\n                    icon={[\"fas\", \"warehouse\"]}\n                />\n                Add to Service Area */}\n                <FontAwesomeIcon\n                    className=\"fa-icon mr-2\"\n                    icon={[\"fas\", \"plus-circle\"]}\n                />\n                Add\n            </CustomModal>\n        </>\n    );\n};\n\nexport default AddArea;\n","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { LocationContext } from \"../../contexts/LocationContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport LocationDropDown from \"../location/LocationDropDown\";\n\nconst SelectArea = () => {\n    const [thanas, setThanas] = useState([]);\n    const [districts, setDistricts] = useState([]);\n    const [selectedLocation, setSelectedLocation] = useState(\n        JSON.parse(sessionStorage.getItem(\"location\"))\n            ? JSON.parse(sessionStorage.getItem(\"location\"))\n            : {\n                  area: \"\",\n                  thana: \"\",\n                  district: \"\",\n              }\n    );\n    const [status, setStatus] = useState(undefined);\n\n    const { changeLocation } = useContext(LocationContext);\n\n    // ComponentDidMount\n    useEffect(() => {\n        // Setting previously selected location from sessionStorage\n        const json = sessionStorage.getItem(\"location\");\n        const localLocation = JSON.parse(json);\n\n        if (localLocation) {\n            // For refreshed page data\n            const loadData = async () => {\n                let API_URL = \"/getThana/\";\n\n                let bodyData = {\n                    district: localLocation.district,\n                };\n\n                try {\n                    // Getting Thanas\n                    let response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(bodyData),\n                    });\n\n                    let data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n\n                    setThanas(data.details);\n                } catch (error) {\n                    setStatus(error);\n                }\n            };\n\n            loadData();\n        }\n\n        const loadData = async () => {\n            const API_URL = \"/getDistrict/\";\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"GET\",\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setDistricts(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, []);\n\n    const handleDistrictSelect = (e) => {\n        setSelectedLocation({\n            area: \"\",\n            thana: \"\",\n            district: e,\n        });\n\n        const loadData = async () => {\n            const API_URL = \"/getThana/\";\n\n            const bodyData = {\n                district: e,\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setThanas(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleThanaSelect = (e) => {\n        setSelectedLocation({ ...selectedLocation, thana: e });\n        changeLocation({ ...selectedLocation, thana: e });\n    };\n\n    return (\n        <div>\n            {status && <CustomAlert status={status} />}\n\n            <div className=\"row\">\n                <div className=\"col-sm-12 col-md-6\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        status=\"\"\n                        customClass=\"mb-2 w-100\"\n                        values={districts ? districts : []}\n                        handleSelect={handleDistrictSelect}\n                        title={\n                            selectedLocation && selectedLocation.district\n                                ? selectedLocation.district\n                                : \"District\"\n                        }\n                    />\n                </div>\n\n                <div className=\"col-sm-12 col-md-6\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        customClass=\"mb-2 w-100\"\n                        values={thanas ? thanas : []}\n                        status={!selectedLocation.district}\n                        handleSelect={handleThanaSelect}\n                        title={\n                            selectedLocation && selectedLocation.thana\n                                ? selectedLocation.thana\n                                : \"Thana\"\n                        }\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SelectArea;\n","import React, { useState, useEffect, useContext } from \"react\";\n// import { Card } from \"react-bootstrap\";\n// import emoji from \"react-easy-emoji\";\n\nimport AddArea from \"./AddArea\";\n// import Title from \"../generic/title\";\n// import CustomCard from \"../generic/CustomCard\";\nimport Infobar from \"../generic/infobar\";\nimport CustomTable from \"../generic/CustomTable\";\nimport SelectArea from \"./SelectArea\";\nimport CustomAlert from \"../generic/CustomAlert\";\nimport { LocationContext } from \"../../contexts/LocationContext\";\n// import { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst AvailableAreas = (props) => {\n    const [status, setStatus] = useState(undefined);\n    const [availableAreas, setAvailableAreas] = useState([]);\n\n    const { location } = useContext(LocationContext);\n\n    // Themes\n    // const { isLightTheme, theme } = useContext(ThemeContext);\n    // const link = isLightTheme ? theme.light.link : theme.dark.link;\n    // const custom_text = isLightTheme\n    //     ? theme.light.custom_text\n    //     : theme.dark.custom_text;\n\n    useEffect(() => {\n        const API_URL = \"/availablearea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                location: location,\n                search_data: props.searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setAvailableAreas(data.Areas);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [props.searchData, location]);\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Area Name\" },\n            { className: \"\", value: \"Add Area\" },\n        ],\n        allowedEntry: [\"area_name\"],\n    };\n\n    return (\n        // <CustomCard\n        //     status={status}\n        //     setStatus={setStatus}\n        //     values={availableAreas}\n        //     cardBodyData={(availableArea) => (\n        //         <>\n        //             <Card.Title>{availableArea.area_name}</Card.Title>\n\n        //             <div>\n        //                 <Title>Thana: </Title> {availableArea.thana}\n        //                 <br />\n        //                 <Title>District: </Title> {availableArea.district}\n        //                 {/* <div className={\"py-2\" + link}>\n        //                     <a\n        //                         target=\"_blank\"\n        //                         rel=\"noreferrer\"\n        //                         className={custom_text}\n        //                         href={`http://www.google.com/maps/place/${availableArea.lati},${availableArea.longi}`}\n        //                     >\n        //                         Open in Google Map\n        //                     </a>\n        //                 </div> */}\n        //             </div>\n\n        //             {/* <div className=\"mt-2\"> */}\n        //             <div className=\"mt-3\">\n        //                 <AddArea area={availableArea} />\n        //             </div>\n        //         </>\n        //     )}\n        //     noValueInfo={\n        //         <>No new areas to show to add to your area {emoji(\"☹\")}</>\n        //     }\n        // />\n        <>\n            {status && <CustomAlert status={status} />}\n\n            <div className=\"mb-4\">\n                <SelectArea />\n            </div>\n\n            {availableAreas.length ? (\n                <CustomTable\n                    ths={tableData.ths}\n                    datas={availableAreas}\n                    allowedEntry={tableData.allowedEntry}\n                    ActionComponents={[\n                        {\n                            component: (availableArea) => (\n                                <AddArea area={availableArea} />\n                            ),\n                            className: \"\",\n                        },\n                    ]}\n                />\n            ) : (\n                <Infobar>\n                    You have already added all the areas of this category 😁\n                </Infobar>\n            )}\n        </>\n    );\n};\n\nexport default AvailableAreas;\n","import React, { useContext, useState } from \"react\";\n// import emoji from \"react-easy-emoji\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport ProvidedAreas from \"./ServiceAreas\";\nimport SearchBar from \"../generic/SearchBar\";\nimport AvailableAreas from \"./AvailableAreas\";\nimport LocationContextProvider from \"../../contexts/LocationContext\";\n\nconst Areas = (props) => {\n    const [searchData, setSearchData] = useState(\"\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    return (\n        <LocationContextProvider>\n            <div className={\"text-center\" + syntax}>\n                <h4 className={\"mb-5 text-center\" + syntax}>\n                    Add your service area\n                </h4>\n\n                <SearchBar\n                    handleChange={handleChange}\n                    placeholder=\"Search area name....\"\n                    // searchBy={<>Search areas by Area Name {emoji(\"😄\")}</>}\n                />\n\n                <h4 className={\"mb-4 text-center\" + syntax}>\n                    Your Service Areas\n                </h4>\n\n                <div className=\"mb-4\">\n                    <ProvidedAreas searchData={searchData} />\n                </div>\n\n                <h4 className={\"mt-5 text-center\" + syntax}>Available Areas</h4>\n\n                <div className=\"my-4\">\n                    <AvailableAreas searchData={searchData} />\n                </div>\n            </div>\n        </LocationContextProvider>\n    );\n};\n\nexport default Areas;\n","import React from \"react\";\n\nimport Areas from \"../components/areas/Areas\";\nimport Layout from \"../components/generic/layout\";\n\nconst Home = () => {\n    return (\n        <Layout>\n            <Areas />\n        </Layout>\n    );\n};\n\nexport default Home;\n","import Moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { AppBar, Tabs, Tab, Box } from \"@material-ui/core\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Infobar from \"../generic/infobar\";\nimport SearchBar from \"../generic/SearchBar\";\nimport CustomTable from \"../generic/CustomTable\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport DeleteModal from \"../generic/DeleteModal\";\n\nconst History = (props) => {\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    const [value, setValue] = useState(0);\n    const [flag, setFlag] = useState(true);\n    const [status, setStatus] = useState(undefined);\n    const [searchData, setSearchData] = useState(\"\");\n    const [activeHistories, setActiveHistories] = useState([]);\n    const [statusVariant, setStatusVariant] = useState(undefined);\n    const [deliveredHistories, setDeliveredHistories] = useState([]);\n    const [cancelledHistories, setCancelledHistories] = useState([]);\n    const [tabs] = useState(\n        isServiceProvider\n            ? [\"Delivered Orders\", \"Cancelled Orders\"]\n            : [\"Active Orders\", \"Delivered Orders\", \"Cancelled Orders\"]\n    );\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        // Delivered Orders\n        let API_URL = isServiceProvider\n            ? \"/getserviceorderhistory/\"\n            : \"/orders/history/delivered/\";\n\n        const loadData = async () => {\n            let bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            let response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            let data = await response.json();\n            setDeliveredHistories(data.details);\n            // console.log(data.details);\n\n            // Active Orders\n            API_URL = \"/orders/history/active/\";\n\n            bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n            setActiveHistories(data.details);\n            // console.log(data.details);\n\n            // Cancelled Orders\n            API_URL = isServiceProvider\n                ? \"/getServiceCancelledOrderHistory/\"\n                : \"/orders/history/cancelled/\";\n\n            bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n            setCancelledHistories(data.details);\n            // console.log(data.details);\n        };\n        loadData();\n    }, [isServiceProvider, searchData, flag]);\n\n    const handleCancel = async (order_id) => {\n        const API_URL = \"/order/cancel/\";\n\n        const bodyData = {\n            order_id: order_id,\n            userid: localStorage.getItem(\"userID\"),\n        };\n\n        const response = await fetch(API_URL, {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(bodyData),\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n            setStatusVariant(\"success\");\n            setStatus(data.message);\n        } else {\n            setStatusVariant(\"danger\");\n            setStatus(data.message);\n        }\n    };\n\n    const handleChange = (e) => setSearchData(e.target.value);\n    const updateFlag = () => setFlag(!flag);\n\n    // Tab related settings.....\n    const TabPanel = (props) => {\n        const { children, value, index, ...other } = props;\n\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`scrollable-auto-tabpanel-${index}`}\n                aria-labelledby={`scrollable-auto-tab-${index}`}\n                {...other}\n            >\n                {value === index && <Box>{children}</Box>}\n            </div>\n        );\n    };\n\n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n\n    const a11yProps = (index) => {\n        return {\n            id: `scrollable-auto-tab-${index}`,\n            \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n        };\n    };\n\n    const handleTabChange = (event, newValue) => setValue(newValue);\n\n    const tableData = {\n        activeThs: [\n            { className: \"\", value: \"Order ID\" },\n            { className: \"\", value: \"Phone\" },\n            { className: \"\", value: \"Address\" },\n            { className: \"\", value: \"Further Description\" },\n            { className: \"\", value: \"Payment\" },\n            { className: \"\", value: \"Time\" },\n            { className: \"\", value: \"Cancel\" },\n        ],\n        cancelledThs: isServiceProvider\n            ? [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Customer Name\" },\n                  { className: \"\", value: \"Phone\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n                  { className: \"\", value: \"Cancelled By\" },\n              ]\n            : [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Phone\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n                  { className: \"\", value: \"Cancelled By\" },\n              ],\n        deliveredThs: isServiceProvider\n            ? [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Customer Name\" },\n                  { className: \"\", value: \"Phone\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Employee\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n              ]\n            : [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Phone\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n              ],\n        tdsClassName: isServiceProvider\n            ? [\"\", \"\", \"text-break\", \"\", \"\"]\n            : [\"\", \"text-break\", \"\"],\n        activeAllowedEntry: [\n            \"customer_phone\",\n            \"address\",\n            \"further_description\",\n        ],\n        cancelledAllowedEntry: isServiceProvider\n            ? [\n                  \"customer_name\",\n                  \"customer_phone\",\n                  \"address\",\n                  \"further_description\",\n              ]\n            : [\"customer_phone\", \"address\", \"further_description\"],\n        deliveredAllowedEntry: isServiceProvider\n            ? [\n                  \"customer_name\",\n                  \"customer_phone\",\n                  \"address\",\n                  \"further_description\",\n                  \"employee\",\n              ]\n            : [\"customer_phone\", \"address\", \"further_description\"],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>Order History</h4>\n\n            <SearchBar\n                handleChange={handleChange}\n                placeholder=\"Search histories....\"\n                searchBy={<>Search by anything except time and cancelled by</>}\n            />\n\n            <AppBar position=\"static\" className={\"rounded\" + ui}>\n                <Tabs\n                    value={value}\n                    variant=\"fullWidth\"\n                    className={custom_text}\n                    onChange={handleTabChange}\n                    TabIndicatorProps={{ style: { background: mainColor } }}\n                >\n                    {tabs.map((tab) => (\n                        <Tab\n                            label={\n                                tab === \"Active Orders\" ? (\n                                    <div>\n                                        {tab}{\" \"}\n                                        <span\n                                            className={\n                                                \"badge badge-pill badge-\" + type\n                                            }\n                                        >\n                                            {activeHistories\n                                                ? activeHistories.length\n                                                : 0}\n                                        </span>\n                                    </div>\n                                ) : tab === \"Delivered Orders\" ? (\n                                    <div>\n                                        {tab}{\" \"}\n                                        <span\n                                            className={\n                                                \"badge badge-pill badge-\" + type\n                                            }\n                                        >\n                                            {deliveredHistories\n                                                ? deliveredHistories.length\n                                                : 0}\n                                        </span>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        {tab}{\" \"}\n                                        <span\n                                            className={\n                                                \"badge badge-pill badge-\" + type\n                                            }\n                                        >\n                                            {cancelledHistories\n                                                ? cancelledHistories.length\n                                                : 0}\n                                        </span>\n                                    </div>\n                                )\n                            }\n                            key={uuidv4()}\n                            {...a11yProps(uuidv4())}\n                            style={{ textTransform: \"none\" }}\n                        />\n                    ))}\n                </Tabs>\n            </AppBar>\n\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                />\n            )}\n\n            {tabs.map((tab, index) => (\n                <TabPanel\n                    key={uuidv4()}\n                    value={value}\n                    index={index}\n                    className=\"pt-4\"\n                >\n                    {(\n                        tab === \"Active Orders\"\n                            ? activeHistories\n                            : tab === \"Cancelled Orders\"\n                            ? cancelledHistories\n                            : deliveredHistories\n                    ) ? (\n                        <CustomTable\n                            ths={\n                                tab === \"Active Orders\"\n                                    ? tableData.activeThs\n                                    : tab === \"Cancelled Orders\"\n                                    ? tableData.cancelledThs\n                                    : tableData.deliveredThs\n                            }\n                            allowedEntry={\n                                tab === \"Active Orders\"\n                                    ? tableData.activeAllowedEntry\n                                    : tab === \"Cancelled Orders\"\n                                    ? tableData.cancelledAllowedEntry\n                                    : tableData.deliveredAllowedEntry\n                            }\n                            PreActionComponents={[\n                                {\n                                    component: (history) => (\n                                        <Link\n                                            to={`/order/details/${history.order_id}/`}\n                                        >\n                                            {history.order_id}\n                                        </Link>\n                                    ),\n                                    className: link,\n                                },\n                            ]}\n                            datas={\n                                tab === \"Active Orders\"\n                                    ? activeHistories\n                                    : tab === \"Cancelled Orders\"\n                                    ? cancelledHistories\n                                    : deliveredHistories\n                            }\n                            tdsClassName={tableData.tdsClassName}\n                            ActionComponents={\n                                tab === \"Active Orders\"\n                                    ? [\n                                          {\n                                              component: (history) => (\n                                                  <>\n                                                      <span className=\"font-weight-bold\">\n                                                          ৳{\" \"}\n                                                      </span>\n                                                      {history.payment}\n                                                  </>\n                                              ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) =>\n                                                  Moment(history.time).format(\n                                                      \"DD/MM/YY hh:mmA\"\n                                                  ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) => (\n                                                  <DeleteModal\n                                                      // deleteText=\"Cancel\"\n                                                      deleteTitle=\"Cancel Order\"\n                                                      updateFlag={updateFlag}\n                                                      handleAction={() =>\n                                                          handleCancel(\n                                                              history.order_id\n                                                          )\n                                                      }\n                                                      deleteIcon=\"ban\"\n                                                      modalBody={\n                                                          <>\n                                                              Do you really want\n                                                              to cancel this\n                                                              order?{\" \"}\n                                                              <span\n                                                                  className={\n                                                                      dangerTextColor\n                                                                  }\n                                                              >\n                                                                  Caution: This\n                                                                  action cannot\n                                                                  be undone\n                                                              </span>\n                                                          </>\n                                                      }\n                                                  />\n                                              ),\n                                              className: \"\",\n                                          },\n                                      ]\n                                    : tab === \"Cancelled Orders\"\n                                    ? [\n                                          {\n                                              component: (history) => (\n                                                  <>\n                                                      <span className=\"font-weight-bold\">\n                                                          ৳{\" \"}\n                                                      </span>\n                                                      {history.payment}\n                                                  </>\n                                              ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) =>\n                                                  Moment(history.time).format(\n                                                      \"DD/MM/YY hh:mmA\"\n                                                  ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) => (\n                                                  <span\n                                                      className={\n                                                          dangerTextColor\n                                                      }\n                                                  >\n                                                      {history.reason}\n                                                  </span>\n                                              ),\n                                              className: \"\",\n                                          },\n                                      ]\n                                    : [\n                                          {\n                                              component: (history) => (\n                                                  <>\n                                                      <span className=\"font-weight-bold\">\n                                                          ৳{\" \"}\n                                                      </span>\n                                                      {history.payment}\n                                                  </>\n                                              ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) =>\n                                                  Moment(history.time).format(\n                                                      \"DD/MM/YY hh:mmA\"\n                                                  ),\n                                              className: \"\",\n                                          },\n                                      ]\n                            }\n                        />\n                    ) : tab === \"Active Orders\" ? (\n                        <Infobar>\n                            You currently don't have any active orders{\" \"}\n                            {emoji(\"🥲\")}\n                        </Infobar>\n                    ) : tab === \"Cancelled Orders\" ? (\n                        <Infobar>\n                            You haven't cancelled any orders yet! {emoji(\"😄\")}\n                        </Infobar>\n                    ) : (\n                        <Infobar>\n                            No delivered orders yet! {emoji(\"😅\")}\n                        </Infobar>\n                    )}\n                </TabPanel>\n            ))}\n        </>\n    );\n};\n\nexport default History;\n","import React from \"react\";\nimport Layout from \"../components/generic/layout\";\nimport History from \"../components/user/History\";\n\nconst Home = () => {\n    return (\n        <Layout>\n            <History />\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const CartContext = createContext();\n\nconst CartContextProvider = (props) => {\n    const [items, setItems] = useState([]);\n    const [totalPrice, setTotalPrice] = useState(0);\n    const [subTotalPrice, setSubTotalPrice] = useState(0);\n    const discount = 8;\n\n    // componentDidMount\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"items\");\n        const local = JSON.parse(json);\n\n        if (local) setItems(local);\n    }, []);\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"items\");\n        const local = JSON.parse(json);\n\n        if (local !== items)\n            sessionStorage.setItem(\"items\", JSON.stringify(items));\n    }, [items]);\n\n    useEffect(() => {\n        let tmpPrice = 0;\n        items.map((item) => (tmpPrice += item.count * item.price));\n        setSubTotalPrice(tmpPrice);\n        tmpPrice = Math.floor(tmpPrice - tmpPrice * (discount / 100));\n        setTotalPrice(tmpPrice);\n    }, [items]);\n\n    const addItem = (item) => {\n        setItems([...items, item]);\n    };\n\n    const handleAddOne = (id) => {\n        let newItem = items.map((item) => {\n            if (item.id === id) {\n                item.count++;\n                return item;\n            }\n            return item;\n        });\n        setItems([...newItem]);\n    };\n\n    const handleMinusOne = (id) => {\n        let newItem = items.map((item) => {\n            if (item.id === id) {\n                item.count > 1 ? item.count-- : (item.count = 1);\n                return item;\n            }\n            return item;\n        });\n\n        setItems([...newItem]);\n    };\n\n    const postCountUpdate = (id, count) => {\n        let newItem = items.map((item) => {\n            if (item.id === id) {\n                item.count = count;\n                return item;\n            }\n            return item;\n        });\n        setItems([...newItem]);\n    };\n\n    const handleRemove = (id) => {\n        setItems(items.filter((item) => item.id !== id));\n        items.length === 1 && sessionStorage.setItem(\"service_id\", \"\");\n    };\n\n    return (\n        <CartContext.Provider\n            value={{\n                items,\n                addItem,\n                discount,\n                totalPrice,\n                handleRemove,\n                handleAddOne,\n                subTotalPrice,\n                setTotalPrice,\n                handleMinusOne,\n                postCountUpdate,\n            }}\n        >\n            {props.children}\n        </CartContext.Provider>\n    );\n};\n\nexport default CartContextProvider;\n","import React, { useState, useEffect } from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { useContext } from \"react\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Counter = (props) => {\n    const { items, handleAddOne, handleMinusOne, postCountUpdate } = useContext(\n        CartContext\n    );\n    const [count, setCount] = useState(1);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    useEffect(() => {\n        items.map((item) =>\n            item.id === props.id ? setCount(item.count) : undefined\n        );\n    }, [items, props.id]);\n\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <Icon\n                style={{\n                    fontSize: \"1.125rem\",\n                    color: \"#d9534f\",\n                }}\n                onClick={() => handleMinusOne(props.id)}\n                className=\"mt-1\"\n            >\n                remove_circle\n            </Icon>\n            <input\n                type=\"number\"\n                value={count}\n                style={{ maxWidth: \"2.5rem\" }}\n                onChange={(e) => setCount(e.target.value)}\n                className={\"show-cart-count mx-1\" + syntax}\n                onBlur={(e) => postCountUpdate(props.id, e.target.value)}\n                onKeyDown={(e) =>\n                    [\"e\", \"E\", \"+\", \"-\", \".\"].includes(e.key) &&\n                    e.preventDefault()\n                }\n            />\n            <Icon\n                style={{\n                    fontSize: \"1.125rem\",\n                    color: \"#0275d8\",\n                }}\n                onClick={() => handleAddOne(props.id)}\n                className=\"mt-1\"\n            >\n                add_circle\n            </Icon>\n        </div>\n    );\n};\n\nexport default Counter;\n","import React from \"react\";\nimport Counter from \"../generic/counter\";\nimport { Table, Button } from \"react-bootstrap\";\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { Link } from \"react-router-dom\";\nimport emoji from \"react-easy-emoji\";\nimport Infobar from \"../generic/infobar\";\n\nconst Cart = () => {\n    const {\n        items,\n        discount,\n        totalPrice,\n        handleRemove,\n        subTotalPrice,\n    } = useContext(CartContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const variant = isLightTheme ? \"light\" : \"dark\";\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    return (\n        <div>\n            {items.length > 0 ? (\n                <div>\n                    <section\n                        className={\n                            \"jumbotron text-center p-3 mb-3\" +\n                            ui +\n                            syntax +\n                            border\n                        }\n                    >\n                        <h5 className=\"jumbotron-heading my-auto cart-header\">\n                            Your Cart\n                        </h5>\n                    </section>\n                    <div\n                        // id=\"cart-table\"\n                        className={\"shadow rounded mb-3\" + border}\n                    >\n                        <Table responsive=\"sm\" className=\"mb-0\" striped variant={variant}>\n                            <thead>\n                                <tr>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Product\n                                    </th>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Quantity\n                                    </th>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Price\n                                    </th>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Remove\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {items.map((item) => (\n                                    <tr key={uuidv4()}>\n                                        <td className=\"text-center align-middle\">\n                                            {item.productName}\n                                            <br />({item.qty} {item.unit})\n                                        </td>\n                                        <td className=\"text-center align-middle\">\n                                            <Counter id={item.id} />\n                                        </td>\n                                        <td className=\"text-center align-middle\">\n                                            Tk {item.count * item.price}\n                                        </td>\n                                        <td className=\"text-center align-middle\">\n                                            <button\n                                                onClick={() => {\n                                                    handleRemove(item.id);\n                                                }}\n                                                className=\"btn btn-xs btn-danger\"\n                                            >\n                                                <DeleteTwoToneIcon />\n                                            </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    </div>\n\n                    <div\n                        className={\n                            \"row text-center rounded mx-auto shadow\" +\n                            ui +\n                            border +\n                            custom_text\n                        }\n                    >\n                        <div className=\"col-4 py-2 my-auto\">\n                            <div className=\"amount-label\">Sub Total</div>\n                            <div className=\"amount\">Tk {subTotalPrice}</div>\n                        </div>\n\n                        <div className=\"col-4 py-2 my-auto\">\n                            <div className=\"amount-label\">Discount</div>\n                            <div className=\"amount\">{discount}%</div>\n                        </div>\n\n                        <div className=\"col-4 py-2 my-auto\">\n                            <div className=\"amount-label\">Grand Total</div>\n                            <div className=\"amount\">Tk {totalPrice}</div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"mb-3\">\n                    <Infobar>Your cart is empty {emoji(\"🙁\")}</Infobar>\n                </div>\n            )}\n\n            <div className=\"row mt-3\">\n                <div className=\"col-sm-12 mb-2 col-md-6\">\n                    <Button\n                        variant={\"outline-\" + type}\n                        className=\"w-100\"\n                        as={Link}\n                        to=\"/\"\n                    >\n                        <Icon\n                            style={{\n                                fontSize: \"1.125rem\",\n                            }}\n                            className=\"align-middle mr-2 mb-1\"\n                        >\n                            add_shopping_cart\n                        </Icon>\n                        Continue Shopping\n                    </Button>\n                </div>\n                <div className=\"col-sm-12 col-md-6 mb-2 text-right\">\n                    <Button\n                        to=\"/checkout\"\n                        variant={type}\n                        className=\"w-100\"\n                        disabled={!items.length > 0}\n                        as={items.length > 0 && Link}\n                    >\n                        <Icon\n                            style={{\n                                fontSize: \"1.125rem\",\n                            }}\n                            className=\"align-middle mr-2 mb-1\"\n                        >\n                            check\n                        </Icon>\n                        Checkout\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Cart;\n","import React from 'react';\nimport CartContextProvider from '../contexts/CartContext';\nimport Cart from '../components/shoppingCart/cart';\nimport Layout from '../components/generic/layout';\n\nconst ShoppingCart = () => {\n    return (\n        <Layout>\n            <CartContextProvider>\n                <Cart />\n            </CartContextProvider>\n        </Layout>\n    );\n}\n \nexport default ShoppingCart;","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment-timezone\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport emoji from \"react-easy-emoji\";\nimport Infobar from \"../generic/infobar\";\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst Checkout = (props) => {\n    const form = useRef(null);\n    const { items, discount, totalPrice } = useContext(CartContext);\n\n    const [statusVariant] = useState(\"danger\");\n    const [addressess, setAddressess] = useState([]);\n    const [newAddress, setNewAddress] = useState({});\n    const [status, setStatus] = useState(undefined);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const variant = isLightTheme ? \"light\" : \"dark\";\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const success = isLightTheme ? theme.light.success : theme.dark.success;\n\n    useEffect(() => {\n        const loadData = async () => {\n            const API_URL = \"/getCustomerAddress/\";\n\n            const object = {\n                customerId: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            // if (response.status === 401) handleLogOut();\n\n            const data = await response.json();\n\n            if (!response.ok) setStatus(data.detail);\n            else setAddressess(data.address);\n        };\n\n        loadData();\n    }, []);\n\n    const handleSelect = (e) => {\n        let tmp = {};\n        addressess.map(\n            (address) =>\n                address.customer_add_id.toString() === e.target.value &&\n                (tmp = address)\n        );\n        setNewAddress(tmp);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let API_URL = \"/createCustomerAddress/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n            object[\"userid\"] = localStorage.getItem(\"userID\");\n\n            try {\n                // Confirming Address\n                let response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                let data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n                else {\n                    // Confirming Order\n                    API_URL = \"/createcustomerorder/\";\n\n                    let details = [];\n\n                    items.map((item) =>\n                        details.push({\n                            price: item.price,\n                            product_id: item.id,\n                            qty: `${item.qty * item.count} ${item.unit}`,\n                        })\n                    );\n\n                    var currentTime = new Date();\n                    const convertTime = moment(currentTime)\n                        .tz(\"America/Danmarkshavn\")\n                        .format(\"YYYY-MM-DD HH:mm:ss\");\n                    const today = new Date(convertTime);\n                    // nothing here\n                    const date =\n                        today.getFullYear() +\n                        \"-\" +\n                        (today.getMonth() + 1) +\n                        \"-\" +\n                        today.getDate();\n                    const time = today.getHours() + \":\" + today.getMinutes();\n\n                    object = {};\n                    object[\"userid\"] = localStorage.getItem(\"userID\");\n                    object[\"service_id\"] = sessionStorage.getItem(\"service_id\");\n                    object[\"order_time\"] = date + \" \" + time;\n                    object[\"customer_address_id\"] = data.customer_add_id;\n                    object[\"payment\"] = totalPrice;\n                    object[\"details\"] = details;\n\n                    response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(object),\n                    });\n\n                    data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n                    else {\n                        // setStatusVariant(\"success\");\n                        // setStatus(\n                        //     \"We have recieved your order successfully 😄\"\n                        // );\n                        handleCleanUP(data.order_id);\n                    }\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleCleanUP = (order_id) => {\n        sessionStorage.setItem(\"items\", \"[]\");\n        sessionStorage.setItem(\"service_id\", \"\");\n        props.history.push(`/order/success/${order_id}`);\n    };\n\n    return (\n        <div className={\"card\" + ui + syntax + border}>\n            <div className=\"card-body row\">\n                <div className=\"col-md-4 order-md-2 mb-4\">\n                    <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n                        <span style={{ opacity: \"0.7\" }}>Your cart</span>\n                        <span className={\"badge badge-pill badge-\" + type}>\n                            {items.length}\n                        </span>\n                    </h4>\n\n                    {items.length > 0 ? (\n                        <div\n                            className={\"rounded mb-3\" + border}\n                            style={{ height: \"15rem\", overflow: \"scroll\" }}\n                        >\n                            <Table responsive=\"sm\" striped variant={variant}>\n                                <tbody>\n                                    {items.map((item) => (\n                                        <tr key={item.id}>\n                                            <td className=\"align-middle\">\n                                                {item.productName}\n                                                <br />\n                                                <small\n                                                    style={{\n                                                        opacity: \"0.7\",\n                                                    }}\n                                                >\n                                                    Item count: {item.count},\n                                                    Per Item Price:{\" \"}\n                                                    <span className=\"font-weight-bold\">\n                                                        ৳{\" \"}\n                                                    </span>\n                                                    {item.price}\n                                                </small>\n                                            </td>\n                                            <td className=\"text-right align-middle\">\n                                                Tk {item.count * item.price}\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        </div>\n                    ) : (\n                        <div className=\"mb-3\">\n                            <Infobar>Your cart is empty {emoji(\"🙁\")}</Infobar>\n                        </div>\n                    )}\n\n                    <div className={\"text-center mb-3\" + link}>\n                        <Link to=\"/cart\">Back to shopping cart</Link>\n                    </div>\n\n                    <div className={\"rounded mb-3\" + border}>\n                        <Table responsive=\"sm\" striped variant={variant}>\n                            <tbody>\n                                <tr>\n                                    <td\n                                        className={\n                                            \"align-middle text-\" + success\n                                        }\n                                    >\n                                        <div>\n                                            <h6 className=\"my-0\">Discount</h6>\n                                            <small>\n                                                For Early Birds: {discount}%\n                                            </small>\n                                        </div>\n                                    </td>\n                                    <td className=\"text-right align-middle\">\n                                        Tk -\n                                        {Math.floor(\n                                            totalPrice * (discount / 100)\n                                        )}\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td className=\"align-middle\">\n                                        <span>Total (BDT)</span>\n                                    </td>\n                                    <td className=\"text-right align-middle\">\n                                        <strong>TK {totalPrice}</strong>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </div>\n\n                    <form className={\"card p-2\" + ui + border}>\n                        <div className=\"input-group\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Promo code\"\n                                className=\"form-control\"\n                            />\n                            <div className=\"input-group-append\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-secondary\"\n                                >\n                                    Redeem\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-8 order-md-1\">\n                    <h4 className=\"mb-3\">Shipping address</h4>\n                    <form\n                        ref={form}\n                        noValidate\n                        onSubmit={handleSubmit}\n                        className=\"needs-validation\"\n                    >\n                        <div className=\"row\">\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"username\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"user\"]}\n                                    />\n                                    Name\n                                </label>\n                                <input\n                                    readOnly\n                                    type=\"text\"\n                                    id=\"username\"\n                                    defaultValue={localStorage.getItem(\n                                        \"username\"\n                                    )}\n                                    className={\n                                        \"text-center form-control\" + border\n                                    }\n                                />\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"phone\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"phone\"]}\n                                    />\n                                    Phone\n                                </label>\n                                <input\n                                    readOnly\n                                    id=\"phone\"\n                                    type=\"phone\"\n                                    className={\n                                        \"text-center form-control\" + border\n                                    }\n                                    defaultValue={localStorage.getItem(\n                                        \"phone_number\"\n                                    )}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"mb-3\">\n                            <small style={{ opacity: \"0.7\" }}>\n                                Want them to call you to another number? Provide\n                                it in the further description filed\n                            </small>\n                        </div>\n\n                        <hr\n                            className=\"mb-4\"\n                            style={{\n                                borderColor: \"inherit\",\n                                opacity: \"0.2\",\n                            }}\n                        />\n\n                        <div className=\"row\">\n                            <div className=\"col mb-3\">\n                                <label htmlFor=\"address\">Addresses</label>\n                                <select\n                                    required\n                                    id=\"address\"\n                                    onChange={handleSelect}\n                                    className={\n                                        \"custom-select d-block w-100\" + border\n                                    }\n                                >\n                                    <option defaultValue=\"\">\n                                        Select from saved addresses...\n                                    </option>\n                                    {addressess.map((address) => (\n                                        <option\n                                            key={address.customer_add_id}\n                                            value={address.customer_add_id}\n                                        >\n                                            House No: {address.house_no}, Road\n                                            No: {address.road_no}, Area :{\" \"}\n                                            {address.area_name}, Further\n                                            Description:{\" \"}\n                                            {address.further_description\n                                                ? address.further_description\n                                                : \"Null\"}\n                                            ,\n                                        </option>\n                                    ))}\n                                </select>\n                                <div className=\"invalid-feedback\">\n                                    Please select a valid address\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"house_no\">House No</label>\n                                <input\n                                    required\n                                    type=\"text\"\n                                    id=\"house_no\"\n                                    name=\"house_no\"\n                                    placeholder=\"8\"\n                                    defaultValue={newAddress.house_no}\n                                    className={\n                                        \"form-control text-center\" + border\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">\n                                    Please select a valid house.\n                                </div>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"road_no\">Road No</label>\n                                <input\n                                    required\n                                    type=\"text\"\n                                    id=\"road_no\"\n                                    name=\"road_no\"\n                                    placeholder=\"2/B\"\n                                    defaultValue={newAddress.road_no}\n                                    className={\n                                        \"form-control text-center\" + border\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">\n                                    Please provide a valid road number.\n                                </div>\n                            </div>\n                            <div className=\"d-none\">\n                                <label htmlFor=\"area_id\">Area ID</label>\n                                <input\n                                    required\n                                    type=\"text\"\n                                    id=\"area_id\"\n                                    name=\"area_id\"\n                                    placeholder=\"1209\"\n                                    defaultValue={sessionStorage.getItem(\n                                        \"areaID\"\n                                    )}\n                                    className={\n                                        \"form-control text-center\" + border\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">\n                                    Area ID is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"mb-4\">\n                            <label htmlFor=\"further_description\">\n                                Further Description\n                            </label>\n                            <input\n                                required\n                                type=\"text\"\n                                id=\"further_description\"\n                                name=\"further_description\"\n                                defaultValue={newAddress.further_description}\n                                placeholder=\"Sector-17, Uttara, Dhaka, Phone: 012xx-xxx-xxx\"\n                                className={\"form-control\" + border}\n                            />\n                            <div className=\"invalid-feedback\">\n                                Please enter your shipping further description.\n                            </div>\n                        </div>\n\n                        <h4 className=\"mb-3\">Payment</h4>\n\n                        <div className=\"d-block my-3\">\n                            <div className=\"custom-control custom-radio\">\n                                <input\n                                    disabled\n                                    id=\"bkash\"\n                                    type=\"radio\"\n                                    name=\"paymentMethod\"\n                                    className=\"custom-control-input\"\n                                />\n                                <label\n                                    htmlFor=\"bkash\"\n                                    className=\"custom-control-label\"\n                                >\n                                    Bkash\n                                </label>\n                            </div>\n\n                            <div className=\"custom-control custom-radio\">\n                                <input\n                                    required\n                                    type=\"radio\"\n                                    defaultChecked\n                                    id=\"cashOnDelivery\"\n                                    className=\"custom-control-input\"\n                                />\n                                <label\n                                    htmlFor=\"cashOnDelivery\"\n                                    className=\"custom-control-label\"\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"hand-holding-usd\"]}\n                                    />\n                                    Cash on delivery\n                                </label>\n                            </div>\n                        </div>\n\n                        <hr\n                            className=\"mb-4\"\n                            style={{\n                                borderColor: \"inherit\",\n                                opacity: \"0.2\",\n                            }}\n                        />\n\n                        {status && (\n                            <CustomAlert\n                                variant={statusVariant}\n                                status={status}\n                            />\n                        )}\n\n                        <div className=\"row mt-3\">\n                            <div className=\"col-sm-12 mb-2 col-md-6\">\n                                <Button\n                                    type=\"submit\"\n                                    variant={type}\n                                    className=\"w-100\"\n                                    disabled={\n                                        !items.length ||\n                                        statusVariant === \"success\"\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"check-circle\"]}\n                                    />\n                                    Confirm Purchase\n                                </Button>\n                            </div>\n                            <div className=\"col-sm-12 col-md-6 mb-2 text-right\">\n                                <Button\n                                    to=\"/\"\n                                    as={Link}\n                                    variant={type}\n                                    className=\"w-100\"\n                                    disabled={\n                                        items.length &&\n                                        !(statusVariant === \"success\")\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"home\"]}\n                                    />\n                                    Back To Home Page\n                                </Button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Checkout);\n","import React from \"react\";\nimport CartContextProvider from \"../contexts/CartContext\";\nimport Layout from \"../components/generic/layout\";\nimport Checkout from \"../components/shoppingCart/checkout\";\n\nconst CheckoutPage = () => {\n    return (\n        <Layout>\n            <CartContextProvider>\n                <Checkout />\n            </CartContextProvider>\n        </Layout>\n    );\n};\n\nexport default CheckoutPage;\n","import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst NotFound = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    return (\n        <div\n            className={\n                \"d-flex justify-content-center rounded shadow mx-auto\" + border\n            }\n            style={{ maxWidth: \"55rem\" }}\n        >\n            <div className=\"notfound pb-4 pb-md-5\">\n                <div className=\"notfound-404\">\n                    <h1>404</h1>\n                </div>\n                <h2 className={\"mb-3 mt-5 pt-3\" + syntax}>\n                    Oops! This Page Could Not Be Found\n                </h2>\n                <p className={syntax}>\n                    Sorry, but the page you are looking for does not exist, have\n                    been removed, name changed or is temporarily unavailable\n                </p>\n                <Button variant={type} className=\"mt-3\" as={Link} to=\"/\">\n                    <FontAwesomeIcon className=\"mr-2\" icon={[\"fas\", \"home\"]} />\n                    Homepage\n                </Button>\n                <Button\n                    variant={type}\n                    className=\"mt-3 ml-2\"\n                    onClick={() => props.history.goBack()}\n                >\n                    <FontAwesomeIcon\n                        className=\"mr-2\"\n                        icon={[\"fas\", \"arrow-circle-left\"]}\n                    />\n                    Go Back\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(NotFound);\n","import React from \"react\";\nimport Layout from \"../components/generic/layout\";\nimport NotFound from \"../components/generic/NotFound\";\n\nconst NotFoundPage = () => {\n    return (\n        <Layout>\n            <NotFound />\n        </Layout>\n    );\n};\n\nexport default NotFoundPage;\n","import emoji from \"react-easy-emoji\";\nimport { Col, Row } from \"react-bootstrap\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Chart, Line, Bar, Polar } from \"react-chartjs-2\";\nimport \"chart.piecelabel.js\";\nimport \"chartjs-plugin-datalabels\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Title from \"../generic/title\";\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst Charts = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const pointBorderColor = isLightTheme ? \"#205c85\" : \"#ffae00\";\n    const ticksBackdropColor = isLightTheme ? \"#f8f9fa\" : \"#343a40\";\n    const lineChartbg = isLightTheme\n        ? theme.light.lineChartbg\n        : theme.dark.lineChartbg;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const fontColor = isLightTheme ? \"black\" : \"white\";\n    const gridColor = isLightTheme\n        ? \"rgba(0, 0, 0, 0.3)\"\n        : \"rgba(255, 255, 255, 0.3)\";\n\n    const [status, setStatus] = useState(undefined);\n    const [barChartData, setBarChartData] = useState({});\n    const [lineChartData, setLineChartData] = useState({});\n    const [polarChartData, setPolarChartData] = useState({});\n\n    // componentDidMount\n    useEffect(() => {\n        const loadData = async () => {\n            // Pie chart\n            let API_URL = \"/piechart/\";\n            const bodyData = {\n                end_date: props.date.end_date,\n                start_date: props.date.start_date,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                let response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                let data = await response.json();\n                // console.log(data.details);\n\n                if (!response.ok) setStatus(data.message);\n                else setPolarChartData(data.details);\n\n                // Line chart\n                API_URL = \"/linechart/\";\n\n                response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                data = await response.json();\n                // console.log(data.details);\n\n                if (!response.ok) setStatus(data.message);\n                else setLineChartData(data.details);\n\n                // Bar chart\n                API_URL = \"/horizontalbarchart/\";\n\n                response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                data = await response.json();\n                // console.log(data.details);\n                // console.log(data.details[0].map((e) => e[0].split(\" \")));\n\n                if (!response.ok) setStatus(data.message);\n                else setBarChartData(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [props.date]);\n\n    Chart.defaults.global.defaultFontColor = fontColor;\n    Chart.defaults.global.defaultFontFamily = \"Montserrat\";\n\n    // Chart.scaleService.defaults.radialLinear.ticks.backdropColor =\n    //     \"rgba(0, 0, 0, 0)\";\n    // Chart.defaults.scale.gridLines.color = \"#ddd\";\n\n    // This line of code took a lot of my time to figure 😑\n    Chart.helpers.each(Chart.instances, (instance) => instance.chart.update());\n\n    const chartsData = {\n        dataLine: {\n            // labels: [\n            //     \"January\",\n            //     \"February\",\n            //     \"March\",\n            //     \"April\",\n            //     \"May\",\n            //     \"June\",\n            //     \"July\",\n            // ],\n            labels: lineChartData[0],\n            // labels: [\"3-1-2021\", \"3-4-2020\", \"4-16-2021\"],\n            options: {\n                // responsive: true,\n                legend: {\n                    display: false,\n                },\n                plugins: {\n                    datalabels: {\n                        display: false,\n                    },\n                },\n                scales: {\n                    xAxes: [\n                        {\n                            // type: \"time\",\n                            // time: {\n                            //     unit: \"day\",\n                            //     unitStepSize: 1000,\n                            //     displayFormats: {\n                            //         millisecond: \"MMM DD, YY\",\n                            //         second: \"MMM DD, YY\",\n                            //         minute: \"MMM DD, YY\",\n                            //         hour: \"MMM DD, YY\",\n                            //         day: \"MMM DD, YY\",\n                            //         week: \"MMM DD, YY\",\n                            //         month: \"MMM DD, YY\",\n                            //         quarter: \"MMM DD, YY\",\n                            //         year: \"MMM DD, YY\",\n                            //     },\n                            // },\n\n                            ticks: {\n                                source: \"labels\",\n                            },\n\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Date\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                        },\n                    ],\n                    yAxes: [\n                        {\n                            // type: \"time\",\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Orders\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                            // ticks: {\n                            //     stepSize: 1,\n                            // },\n                        },\n                    ],\n                },\n            },\n            datasets: [\n                {\n                    // label: \"My First dataset\",\n                    fill: true,\n                    lineTension: 0.3,\n                    backgroundColor: lineChartbg,\n                    borderColor: mainColor,\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: pointBorderColor,\n                    pointBackgroundColor: \"rgb(255, 255, 255)\",\n                    pointBorderWidth: 8,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                    pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    // data: [28, 48, 40, 19, 86, 27, 90],\n                    data: lineChartData[1],\n                },\n            ],\n        },\n        dataBar: {\n            // labels: [\n            //     \"Red\",\n            //     \"Orange\",\n            //     \"Yellow\",\n            //     \"Green\",\n            //     \"Blue\",\n            //     \"Purple\",\n            //     \"Grey\",\n            // ],\n            labels: barChartData[0],\n            options: {\n                // responsive: true,\n                maintainAspectRatio: false,\n                legend: {\n                    display: false,\n                },\n                layout: {\n                    padding: {\n                        left: 0,\n                        right: 0,\n                        top: 20,\n                        bottom: 0,\n                    },\n                },\n                scales: {\n                    xAxes: [\n                        {\n                            // type: \"time\",\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Employee Name\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                        },\n                    ],\n                    yAxes: [\n                        {\n                            // type: \"text\",\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Income\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                        },\n                    ],\n                },\n            },\n            datasets: [\n                {\n                    // label: \"My First dataHorizontal\",\n                    // data: [22, 33, 55, 12, 86, 23, 14],\n                    data: barChartData[1],\n                    fill: false,\n                    datalabels: {\n                        align: \"end\",\n                        anchor: \"end\",\n                    },\n                    backgroundColor: [\n                        \"rgba(255, 99, 132, 0.4)\",\n                        \"rgba(75, 192, 192, 0.4)\",\n                        \"rgba(54, 162, 235, 0.4)\",\n                        \"rgba(255, 205, 86, 0.4)\",\n                        \"rgba(255, 159, 64, 0.4)\",\n                        // \"rgba(153, 102, 255, 0.6)\",\n                        // \"rgba(201, 203, 207, 0.6)\",\n                    ],\n                    borderColor: [\n                        \"rgb(255, 99, 132)\",\n                        \"rgb(75, 192, 192)\",\n                        \"rgb(54, 162, 235)\",\n                        \"rgb(255, 205, 86)\",\n                        \"rgb(255, 159, 64)\",\n                        // \"rgb(153, 102, 255)\",\n                        // \"rgb(201, 203, 207)\",\n                    ],\n                    borderWidth: 3,\n                },\n            ],\n        },\n        dataPolar: {\n            // labels: [[\"Red\", \"Red Red Red Red Red Red Red Red\"], \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\n            labels: polarChartData[0],\n            options: {\n                // responsive: true,\n                maintainAspectRatio: false,\n                // legend: {\n                //     position: \"bottom\",\n                // },\n                plugins: {\n                    datalabels: {\n                        display: false,\n                    },\n                },\n                pieceLabel: {\n                    showZero: true,\n                    render: \"percentage\",\n                    fontColor: fontColor,\n                },\n                scale: {\n                    gridLines: {\n                        color: gridColor,\n                    },\n                    ticks: {\n                        backdropColor: ticksBackdropColor,\n                    },\n                },\n            },\n            datasets: [\n                {\n                    // title: \"My First dataHorizontal\",\n                    // data: [300, 50, 100, 40, 120],\n                    data: polarChartData[1],\n                    borderAlign: \"inner\",\n                    // borderColor: \"#777\",\n                    borderColor: [\n                        \"rgba(247, 70, 74, 1)\",\n                        \"rgba(70, 191, 189, 1)\",\n                        \"rgba(253, 180, 92, 1)\",\n                        \"rgba(54, 162, 235, 1)\",\n                        \"rgba(255, 99, 132, 1)\",\n                        \"rgba(172, 100, 173, 1)\",\n                    ],\n                    backgroundColor: [\n                        \"rgba(247, 70, 74, 0.4)\",\n                        \"rgba(70, 191, 189, 0.4)\",\n                        \"rgba(253, 180, 92, 0.4)\",\n                        \"rgba(54, 162, 235, 0.4)\",\n                        \"rgba(255, 99, 132, 0.4)\",\n                        \"rgba(172, 100, 173, 0.4)\",\n                    ],\n                    hoverBackgroundColor: [\n                        \"#FF5A5E\",\n                        \"#5AD3D1\",\n                        \"#FFC870\",\n                        \"rgba(54, 162, 235, 0.8)\",\n                        \"rgba(255, 99, 132, 0.8)\",\n                        \"#DA92DB\",\n                    ],\n                    borderWidth: 3,\n                },\n            ],\n        },\n    };\n\n    return (\n        <>\n            <Row>\n                {status && <CustomAlert status={status} />}\n\n                <Col lg={6} className=\"mb-4\">\n                    {props.extraData}\n                </Col>\n\n                <Col lg={6} className=\"mb-4\">\n                    <div className={\"card h-100\" + ui + syntax + border}>\n                        {lineChartData[0] && lineChartData[0].length > 0 ? (\n                            <div className=\"p-2 p-md-3\">\n                                {lineChartData[0] && (\n                                    <div className=\"text-center mb-3\">\n                                        {emoji(\"🔥\")} Top{\" \"}\n                                        <Title>{lineChartData[0].length}</Title>{\" \"}\n                                        most ordered\n                                        {Object.keys(lineChartData).length > 1\n                                            ? \" days \"\n                                            : \" day \"}\n                                        {emoji(\"🔥\")}\n                                    </div>\n                                )}\n                                <Line\n                                    data={chartsData.dataLine}\n                                    options={chartsData.dataLine.options}\n                                />\n                            </div>\n                        ) : (\n                            <div className=\"card-body mx-auto mt-2 d-flex align-items-center\">\n                                <h5>\n                                    Not enough data to show a chart!{\" \"}\n                                    {emoji(\"🙁\")}\n                                </h5>\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                <Col lg={6} className=\"mb-4\">\n                    <div className={\"card\" + ui + syntax + border}>\n                        {polarChartData[0] && polarChartData[0].length > 0 ? (\n                            <div\n                                className=\"p-2 p-md-3\"\n                                style={{ maxHeight: \"55rem\" }}\n                            >\n                                {polarChartData[0] && (\n                                    <div className=\"text-center mb-3\">\n                                        {emoji(\"🔥\")} Top{\" \"}\n                                        <Title>\n                                            {polarChartData[0].length}\n                                        </Title>{\" \"}\n                                        sold\n                                        {Object.keys(lineChartData).length > 1\n                                            ? \" products \"\n                                            : \" product \"}\n                                        {emoji(\"🔥\")}\n                                    </div>\n                                )}\n                                <Polar\n                                    data={chartsData.dataPolar}\n                                    options={chartsData.dataPolar.options}\n                                />\n                            </div>\n                        ) : (\n                            <div className=\"card-body mx-auto mt-2 d-flex align-items-center\">\n                                <h5>\n                                    Not enough data to show a chart!{\" \"}\n                                    {emoji(\"🙁\")}\n                                </h5>\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                <Col lg={6} className=\"mb-4\">\n                    <div className={\"card\" + ui + syntax + border}>\n                        {barChartData[0] && barChartData[0].length > 0 ? (\n                            <div\n                                className=\"p-2 p-md-3\"\n                                style={{ maxHeight: \"55rem\" }}\n                            >\n                                {barChartData[0] && (\n                                    <div className=\"text-center mb-3\">\n                                        {emoji(\"🔥\")} Top{\" \"}\n                                        <Title>{barChartData[0].length}</Title>\n                                        {Object.keys(lineChartData).length > 1\n                                            ? \" employees \"\n                                            : \" employee \"}{\" \"}\n                                        income {emoji(\"🔥\")}\n                                    </div>\n                                )}\n                                <Bar\n                                    data={chartsData.dataBar}\n                                    options={chartsData.dataBar.options}\n                                />\n                            </div>\n                        ) : (\n                            <div className=\"card-body mx-auto mt-2 d-flex align-items-center\">\n                                <h5>\n                                    Not enough data to show a chart!{\" \"}\n                                    {emoji(\"🙁\")}\n                                </h5>\n                            </div>\n                        )}\n                    </div>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Charts;\n","import moment from \"moment-timezone\";\nimport \"moment-duration-format\";\nimport emoji from \"react-easy-emoji\";\nimport { withRouter } from \"react-router-dom\";\nimport React, { useContext, useRef, useState, useEffect } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomTable from \"../generic/CustomTable\";\nimport Charts from \"./Charts\";\n\nconst Statistics = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [statistics, setStatistics] = useState({});\n\n    const currentTime = moment(new Date()).add(1, \"day\");\n    const convertTime = moment(currentTime)\n        .tz(\"America/Danmarkshavn\")\n        .format(\"YYYY-MM-DD HH:mm:ss\");\n    const today = new Date(convertTime);\n\n    const [date, setDate] = useState({\n        start_date: localStorage.getItem(\"start_date\")\n            ? localStorage.getItem(\"start_date\")\n            : moment(today).subtract(1, \"year\").format(\"YYYY-MM-DD\"),\n        end_date: localStorage.getItem(\"end_date\")\n            ? localStorage.getItem(\"end_date\")\n            : today.toLocaleDateString(\"en-CA\"),\n    });\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/getservicestats/\";\n\n        const loadData = async () => {\n            let object = {\n                ...date,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            // Check date validity\n            const start = moment(object[\"start_date\"]);\n            const end = moment(object[\"end_date\"]);\n\n            if (start.isBefore(end)) {\n                try {\n                    const response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(object),\n                    });\n\n                    const data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n                    else {\n                        setStatistics(data);\n                        setStatus(undefined);\n                    }\n                } catch (error) {\n                    setStatus(error);\n                }\n            } else setStatus(\"Start date must be lesser than End date\");\n        };\n\n        loadData();\n    }, [date]);\n\n    const handleSubmit = (e) => {\n        e && e.preventDefault();\n\n        const API_URL = \"/getservicestats/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n            object[\"end_date\"] = moment(object[\"end_date\"]).format(\n                \"YYYY-MM-DD\"\n            );\n\n            // Check date validity\n            const start = moment(object[\"start_date\"]);\n            const end = moment(object[\"end_date\"]);\n\n            if (start.isBefore(end)) {\n                // Set new date\n                setDate({\n                    start_date: object[\"start_date\"],\n                    end_date: object[\"end_date\"],\n                });\n\n                localStorage.setItem(\"start_date\", object[\"start_date\"]);\n                localStorage.setItem(\"end_date\", object[\"end_date\"]);\n\n                try {\n                    const response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(object),\n                    });\n\n                    const data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n                    else {\n                        setStatistics(data);\n                        setStatus(undefined);\n                    }\n                } catch (error) {\n                    setStatus(error);\n                }\n            } else setStatus(\"Start date must be lesser than End date\");\n        };\n\n        loadData();\n    };\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Employee Name\" },\n            { className: \"\", value: \"Phone Number\" },\n            { className: \"\", value: \"Delivered\" },\n            { className: \"\", value: \"Income\" },\n        ],\n        allowedEntry: [\"name\", \"phone\", \"delivered\"],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>\n                Statistics of last{\" \"}\n                <span className={custom_text}>\n                    {moment\n                        .duration(\n                            moment(date.end_date).diff(moment(date.start_date))\n                        )\n                        .format(\"Y [year] M [month] w [week] d [days]\")}\n                </span>\n            </h4>\n\n            {status && <CustomAlert status={status} />}\n\n            <Row>\n                <Col className=\"mb-4\">\n                    <div className={\"card\" + ui + syntax + border}>\n                        <div className=\"card-body\">\n                            <form ref={form} onSubmit={handleSubmit}>\n                                <Row className=\"d-flex align-items-center\">\n                                    <Col lg={4}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"mr-2\"\n                                                    icon={[\n                                                        \"fas\",\n                                                        \"hourglass-start\",\n                                                    ]}\n                                                />\n                                                Start Date:\n                                            </Col>\n                                            <Col\n                                                md={7}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    className={\n                                                        \"input-group rounded\" +\n                                                        border\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"date\"\n                                                        id=\"start_date\"\n                                                        name=\"start_date\"\n                                                        placeholder=\"2020-02-17\"\n                                                        defaultValue={\n                                                            date.start_date\n                                                        }\n                                                        className=\"form-control text-center rounded-0\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please select a valid\n                                                        date\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={4}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"mr-2\"\n                                                    icon={[\n                                                        \"fas\",\n                                                        \"hourglass-end\",\n                                                    ]}\n                                                />\n                                                End Date:\n                                            </Col>\n                                            <Col\n                                                md={7}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    className={\n                                                        \"input-group rounded\" +\n                                                        border\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"date\"\n                                                        id=\"end_date\"\n                                                        name=\"end_date\"\n                                                        placeholder=\"2021-02-18\"\n                                                        defaultValue={\n                                                            date.end_date\n                                                        }\n                                                        className=\"form-control text-center rounded-0\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please provide a valid\n                                                        date\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={4}>\n                                        <Button\n                                            type=\"submit\"\n                                            variant={type}\n                                            className=\"w-100\"\n                                        >\n                                            <FontAwesomeIcon\n                                                className=\"mr-2\"\n                                                icon={[\n                                                    \"fas\",\n                                                    \"file-invoice-dollar\",\n                                                ]}\n                                            />\n                                            Update statistics\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </form>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n\n            <Charts\n                date={date}\n                extraData={\n                    <div className={\"card h-100\" + ui + syntax + border}>\n                        <div className=\"card-body d-flex mx-auto\">\n                            <div className=\"my-auto\">\n                                <div className=\"text-center mb-4\">\n                                    {emoji(\"🔥\")} Summary of your orders{\" \"}\n                                    {emoji(\"🔥\")}\n                                </div>\n\n                                <Row className=\"form-group\">\n                                    <Col className=\"my-auto\">\n                                        <FontAwesomeIcon\n                                            className=\"mr-2\"\n                                            icon={[\"fas\", \"sort-amount-down\"]}\n                                        />\n                                        Orders Recieved:\n                                    </Col>\n                                    <Col md={6} sm={12}>\n                                        <div\n                                            className={\n                                                \"input-group rounded\" + border\n                                            }\n                                        >\n                                            <input\n                                                readOnly\n                                                type=\"number\"\n                                                name=\"total_orders\"\n                                                defaultValue={\n                                                    statistics.total_orders\n                                                }\n                                                className=\"form-control text-center rounded-0\"\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"form-group\">\n                                    <Col className=\"my-auto\">\n                                        <FontAwesomeIcon\n                                            className=\"mr-2\"\n                                            icon={[\"fas\", \"truck\"]}\n                                        />\n                                        Delivered:\n                                    </Col>\n                                    <Col md={6} sm={12}>\n                                        <div\n                                            className={\n                                                \"input-group rounded\" + border\n                                            }\n                                        >\n                                            <input\n                                                readOnly\n                                                type=\"number\"\n                                                name=\"delivered\"\n                                                defaultValue={\n                                                    statistics.delivered\n                                                }\n                                                className=\"form-control text-center rounded-0\"\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col className=\"my-auto\">\n                                        <span className=\"font-weight-bold mr-2\">\n                                            ৳\n                                        </span>\n                                        Total Income (BDT):\n                                    </Col>\n                                    <Col md={6} sm={12}>\n                                        <div\n                                            className={\n                                                \"input-group rounded\" + border\n                                            }\n                                        >\n                                            <input\n                                                readOnly\n                                                type=\"number\"\n                                                name=\"income\"\n                                                defaultValue={statistics.income}\n                                                className=\"form-control text-center rounded-0\"\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </div>\n                    </div>\n                }\n            />\n\n            {statistics.employee && statistics.employee.length > 0 && (\n                <Row>\n                    <Col>\n                        <CustomTable\n                            ths={tableData.ths}\n                            datas={statistics.employee}\n                            allowedEntry={tableData.allowedEntry}\n                            ActionComponents={[\n                                {\n                                    component: (employee) => (\n                                        <>\n                                            <span className=\"font-weight-bold\">\n                                                ৳{\" \"}\n                                            </span>\n                                            {employee.income}\n                                        </>\n                                    ),\n                                    className: \"\",\n                                },\n                            ]}\n                        />\n                    </Col>\n                </Row>\n            )}\n        </>\n    );\n};\n\nexport default withRouter(Statistics);\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport Statistics from \"../components/statistics/Statistics\";\n\nconst StatisticsPage = () => {\n    return (\n        <Layout>\n            <Statistics />\n        </Layout>\n    );\n};\n\nexport default StatisticsPage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomModal from \"../generic/CustomModal\";\n\nconst UpdateProductDetails = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleUpdate = () => {\n        const API_URL = \"/updateproduct/\";\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n\n            object[\"product_id\"] = props.id;\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatus(data.message);\n                setStatusVariant(\"danger\");\n            }\n        };\n        loadData();\n    };\n\n    return (\n        <CustomModal\n            actionVariant={type}\n            handleAction={handleUpdate}\n            modalTitle=\"Update Product Details\"\n            actionButtonBody={\n                <>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"wrench\"]}\n                    />\n                    Update\n                </>\n            }\n            modalButtonClass={\"btn btn-sm btn-\" + type}\n            modalBody={\n                <form ref={form}>\n                    {status &&\n                        (statusVariant === \"success\" ? (\n                            <CustomModalAlert\n                                status={status}\n                                setStatus={setStatus}\n                                variant={statusVariant}\n                                updateFlag={props.updateFlag}\n                            />\n                        ) : (\n                            <CustomAlert\n                                status={status}\n                                variant={statusVariant}\n                            />\n                        ))}\n\n                    <div className=\"form-group\">\n                        <label>Product Name</label>\n\n                        <div\n                            className={\n                                \"form-group input-group rounded\" + border\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text rounded-0\">\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-1\"\n                                        icon={[\"fab\", \"product-hunt\"]}\n                                    />\n                                </span>\n                            </div>\n                            <input\n                                disabled\n                                type=\"text\"\n                                name=\"product_name\"\n                                placeholder=\"Product Name\"\n                                className=\"form-control rounded-0\"\n                                defaultValue={props.product.product_name}\n                            />\n                        </div>\n\n                        <label className=\"mt-3\">Price (Vat Excluded)</label>\n\n                        <div\n                            className={\n                                \"form-group input-group rounded\" + border\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text py-0 rounded-0\">\n                                    <span\n                                        className=\"font-weight-bold mx-1\"\n                                        style={{\n                                            fontSize: \"1.2rem\",\n                                        }}\n                                    >\n                                        ৳{\" \"}\n                                    </span>\n                                </span>\n                            </div>\n                            <input\n                                autoFocus\n                                name=\"price\"\n                                type=\"number\"\n                                placeholder=\"Product price\"\n                                defaultValue={props.product.price}\n                                className=\"form-control rounded-0\"\n                            />\n                        </div>\n                    </div>\n                </form>\n            }\n        >\n            <FontAwesomeIcon\n                className=\"fa-icon mr-1\"\n                icon={[\"fas\", \"wrench\"]}\n            />\n            Update\n        </CustomModal>\n    );\n};\n\nexport default UpdateProductDetails;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Title from \"../generic/title\";\nimport UpdateProductDetails from \"../products/UpdateProductDetails\";\nimport DeleteModal from \"../generic/DeleteModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst Service = (props) => {\n    const [show, setShow] = useState(false);\n    const [count, setCount] = useState(1);\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    const { items, addItem, postCountUpdate } = useContext(CartContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const success = isLightTheme ? theme.light.success : theme.dark.success;\n    const currency_text = isLightTheme\n        ? theme.light.currency_text\n        : theme.dark.currency_text;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"items\");\n        const local = JSON.parse(json);\n\n        if (local) {\n            local.map((item) => {\n                if (item.id === props.serviceInfo.product_id) {\n                    setShow(true);\n                    setCount(item.count);\n                }\n                return item;\n            });\n        }\n    }, [props.serviceInfo.product_id]);\n\n    useEffect(() => {\n        if (show) postCountUpdate(props.serviceInfo.product_id, count);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [show, count, props.serviceInfo.product_id]);\n\n    const price = Math.floor(\n        props.serviceInfo.price +\n            (props.serviceInfo.price * props.serviceInfo.vat) / 100\n    );\n\n    const handleShow = () => {\n        setShow(true);\n    };\n\n    const handleAddItem = () => {\n        let results = false;\n\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].id === props.serviceInfo.product_id) {\n                results = true;\n                break;\n            }\n        }\n\n        if (!results) {\n            const product = {\n                id: props.serviceInfo.product_id,\n                productName: props.serviceInfo.product_name,\n                qty: props.serviceInfo.qty,\n                unit: props.serviceInfo.unit,\n                count,\n                price,\n            };\n\n            addItem(product);\n            handleShow();\n        }\n\n        sessionStorage.setItem(\"service_id\", props.serviceInfo.service_id);\n    };\n\n    const handleDeleteItem = (id) => {\n        const API_URL = \"/deleteproduct/\";\n        const loadData = async () => {\n            const bodyData = {\n                product_id: id,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n            const data = await response.json();\n            if (response.ok) setStatusVariant(\"success\");\n            setStatus(data.message);\n        };\n        loadData();\n    };\n\n    const addOne = () => setCount(count + 1);\n    const minusOne = () => (count > 1 ? setCount(count - 1) : setCount(1));\n\n    return (\n        <div className=\"col-lg-3 col-md-4 col-sm-6 mb-4 text-center\">\n            <Card className={\"shadow\" + ui + border}>\n                {status && (\n                    <CustomModalAlert\n                        status={status}\n                        setStatus={setStatus}\n                        variant={statusVariant}\n                    />\n                )}\n\n                <div className={\"inner border-bottom border-\" + type}>\n                    <Card.Img\n                        variant=\"top\"\n                        src={`https://picsum.photos/id/${Math.floor(\n                            Math.random() * 1000\n                        )}/800`}\n                        onError={(e) => {\n                            e.target.onerror = null;\n                            e.target.src = \"/img/Default.png\";\n                        }}\n                        style={{ maxHeight: \"12rem\" }}\n                        alt=\"card image\"\n                    />\n                </div>\n\n                <Card.Body className={syntax}>\n                    <Card.Title>{props.serviceInfo.product_name}</Card.Title>\n                    <h5 className={currency_text}>\n                        <span className=\"font-weight-bold\">৳ </span>\n\n                        {isServiceProvider\n                            ? props.serviceInfo.price\n                            : count * price}\n                    </h5>\n\n                    {isServiceProvider ? (\n                        <p className={custom_text}>(Vat Excluded)</p>\n                    ) : (\n                        <p className={custom_text}>(Vat included)</p>\n                    )}\n\n                    <div>\n                        <Title>Vat: </Title> {props.serviceInfo.vat}%\n                        <br />\n                        <Title>Quantity: </Title>{\" \"}\n                        {count * props.serviceInfo.qty} {props.serviceInfo.unit}\n                        <br />\n                        <Title>Company: </Title>{\" \"}\n                        {props.serviceInfo.company_name}\n                        {!isServiceProvider && (\n                            <>\n                                <br />\n                                <div className=\"my-3 d-flex justify-content-center\">\n                                    <Icon\n                                        style={{\n                                            fontSize: \"1.125rem\",\n                                            color: \"#d9534f\",\n                                        }}\n                                        onClick={minusOne}\n                                        className=\"mt-1\"\n                                    >\n                                        remove_circle\n                                    </Icon>\n                                    <input\n                                        type=\"number\"\n                                        className={\n                                            \"show-cart-count mx-1\" + syntax\n                                        }\n                                        value={count}\n                                        style={{ maxWidth: \"2.5rem\" }}\n                                        onChange={(e) =>\n                                            setCount(e.target.value)\n                                        }\n                                        onKeyDown={(e) =>\n                                            [\"e\", \"E\", \"+\", \"-\", \".\"].includes(\n                                                e.key\n                                            ) && e.preventDefault()\n                                        }\n                                    />\n                                    <Icon\n                                        style={{\n                                            fontSize: \"1.125rem\",\n                                            color: \"#0275d8\",\n                                        }}\n                                        onClick={addOne}\n                                        className=\"mt-1\"\n                                    >\n                                        add_circle\n                                    </Icon>\n                                </div>\n                            </>\n                        )}\n                    </div>\n\n                    {isServiceProvider ? (\n                        <div className=\"d-flex justify-content-around mt-3\">\n                            <UpdateProductDetails\n                                product={props.serviceInfo}\n                                updateFlag={props.updateFlag}\n                                id={props.serviceInfo.product_id}\n                                service_id={localStorage.getItem(\"userID\")}\n                            />\n\n                            <DeleteModal\n                                deleteText={\"Delete\"}\n                                updateFlag={props.updateFlag}\n                                handleAction={() =>\n                                    handleDeleteItem(\n                                        props.serviceInfo.product_id\n                                    )\n                                }\n                                modalBody={\n                                    <>\n                                        Do you really want to delete Product:{\" \"}\n                                        <span className={custom_text}>\n                                            {props.serviceInfo.product_name}\n                                        </span>{\" \"}\n                                        from your inventory?\n                                        <br />\n                                        <span className={dangerTextColor}>\n                                            Caution: This action cannot be\n                                            undone\n                                        </span>\n                                    </>\n                                }\n                            />\n                        </div>\n                    ) : (\n                        <Button\n                            variant={show ? success : type}\n                            onClick={handleAddItem}\n                        >\n                            {show ? (\n                                <div>\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"check\"]}\n                                    />\n                                    Added to the cart\n                                </div>\n                            ) : (\n                                <div>\n                                    <Icon\n                                        style={{\n                                            verticalAlign: \"middle\",\n                                            fontSize: \"18px\",\n                                        }}\n                                        className=\"mr-2 mb-1\"\n                                    >\n                                        add_shopping_cart\n                                    </Icon>\n                                    Add to cart\n                                </div>\n                            )}\n                        </Button>\n                    )}\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n\nexport default Service;\n","import React, { useContext } from \"react\";\nimport Pagination from \"react-js-pagination\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst CustomPagination = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n    const paginationActiveLinkClass = isLightTheme\n        ? \"paginationActiveLinkClass\"\n        : \"paginationActiveLinkClass-dark\";\n\n    window.scrollTo(0, 0);\n\n    return (\n        <div className=\"d-flex justify-content-center mt-5\">\n            <Pagination\n                itemClass=\"page-item\"\n                activeLinkClass={paginationActiveLinkClass}\n                linkClass={\"page-link\" + custom_text + ui}\n                itemsCountPerPage={10}\n                pageRangeDisplayed={5}\n                activePage={props.activePage}\n                onChange={props.handlePageClick}\n                totalItemsCount={props.totalPage * 10}\n            />\n        </div>\n    );\n};\n\nexport default CustomPagination;\n","import React, { useContext, useState, useEffect } from \"react\";\n// import { Image } from \"react-bootstrap\";\nimport Service from \"./service\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport { useParams } from \"react-router-dom\";\n\nimport Infobar from \"../generic/infobar\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport SearchBar from \"../generic/SearchBar\";\nimport CustomPagination from \"../generic/CustomPagination\";\n\nconst Services = () => {\n    const params = useParams();\n    const [flag, setFlag] = useState(true);\n    const [sName, setSName] = useState(\"\");\n    const [services, setServices] = useState([]);\n    const [searchData, setSearchData] = useState(\"\");\n\n    const [totalPage, setTotalPage] = useState(0);\n    const [activePage, setActivePage] = useState(1);\n\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    // componentDidMount\n    useEffect(() => {\n        let API_URL = \"/ownProducts/\";\n\n        const loadData = async () => {\n            let bodyData = {\n                service_id: params.id,\n                page_number: activePage,\n                search_data: searchData,\n            };\n\n            let response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            let data = await response.json();\n\n            setServices(data.products);\n\n            // Gey total page\n            API_URL = \"/inventory/page/\";\n\n            bodyData = {\n                service_id: params.id,\n                search_data: searchData,\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n\n            setTotalPage(data.details);\n        };\n        loadData();\n    }, [params, flag, searchData, activePage]);\n\n    useEffect(() => {\n        // if (services.length > 0) {\n        const API_URL = \"/getProfile/\";\n\n        const loadData = async () => {\n            const servideID = {\n                userid: params.id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(servideID),\n            });\n\n            const data = await response.json();\n\n            setSName(data.company_name);\n        };\n        loadData();\n        // }\n    }, [services, params.id]);\n\n    // componentDidMount\n    useEffect(() => {\n        setActivePage(1);\n    }, [searchData]);\n\n    const updateFlag = () => setFlag(!flag);\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    const handlePageClick = (e) => setActivePage(e);\n\n    return (\n        <div>\n            <div className={\"text-center\" + syntax}>\n                {/* <div className={\"inner rounded mb-4\" + border}>\n                    <Image\n                        className=\"w-100 profile-pic\"\n                        alt=\"profile picture\"\n                        src={`https://picsum.photos/id/${Math.floor(\n                            Math.random() * 1000\n                        )}/800`}\n                        onError={(e) => {\n                            e.target.onerror = null;\n                            e.target.src = \"/img/profile_pic_default.png\";\n                        }}\n                    />\n                </div> */}\n\n                <h4 className={\"mb-5\" + syntax}>\n                    {isServiceProvider ? \"Your Inventory\" : \"Our Services\"}\n                </h4>\n\n                <SearchBar\n                    handleChange={handleChange}\n                    placeholder=\"Search products....\"\n                    searchBy=\"Search products by product name, company name or price\"\n                />\n\n                {sName && (\n                    <Infobar>\n                        {sName}\n                        {/* {emoji(\"🤪\")} */}\n                    </Infobar>\n                )}\n            </div>\n\n            {services && services.length > 0 ? (\n                <>\n                    <div className=\"row\">\n                        {services.map((service) => (\n                            // Here gives unmounted error 🙁\n                            <Service\n                                key={uuidv4()}\n                                serviceInfo={service}\n                                updateFlag={updateFlag}\n                            />\n                        ))}\n                    </div>\n\n                    <CustomPagination\n                        totalPage={totalPage}\n                        activePage={activePage}\n                        handlePageClick={handlePageClick}\n                    />\n                </>\n            ) : (\n                <Infobar>No services {emoji(\"☹\")}</Infobar>\n            )}\n        </div>\n    );\n};\n\nexport default Services;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport Services from \"../components/services/services\";\nimport CartContextProvider from \"../contexts/CartContext\";\nimport LocationContextProvider from \"../contexts/LocationContext\";\n\nconst ServiceProviders = () => {\n    return (\n        <Layout>\n            <LocationContextProvider>\n                <CartContextProvider>\n                    <Services />\n                </CartContextProvider>\n            </LocationContextProvider>\n        </Layout>\n    );\n};\n\nexport default ServiceProviders;\n","import React, { useContext, useState, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faTwitter, faFacebook } from \"@fortawesome/free-brands-svg-icons\";\n\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst RegistrationForm = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(\"\");\n    const [isServiceProvider, setIsServiceProvider] = useState(false);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleSelect = (e) => {\n        e.target.value === \"2\"\n            ? setIsServiceProvider(true)\n            : setIsServiceProvider(false);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = isServiceProvider ? \"/serviceregister/\" : \"/register/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n\n            // for (var pair of formData.entries()) {\n            //     console.log(pair[0] + \" - \" + pair[1]);\n            // }\n            // console.log(JSON.stringify(object));\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data[Object.keys(data)[0]]);\n                else props.history.push(\"/login/\");\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <div\n            className={\"card shadow mx-auto\" + ui + syntax + border}\n            style={{ maxWidth: \"30rem\" }}\n        >\n            <article\n                style={{ maxWidth: \"28rem\" }}\n                className=\"card-body col mx-auto\"\n            >\n                <h4 className=\"card-title text-center\">Create an Account</h4>\n                <p className=\"text-center\">\n                    Get started with your free account\n                </p>\n\n                <form ref={form} onSubmit={handleSubmit}>\n                    {status && <CustomAlert status={status} />}\n\n                    <div className={\"form-group input-group rounded\" + border}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text rounded-0\">\n                                <FontAwesomeIcon icon={[\"fas\", \"user\"]} />\n                            </span>\n                        </div>\n                        <input\n                            name={\n                                isServiceProvider ? \"service_name\" : \"username\"\n                            }\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            className=\"form-control rounded-0\"\n                        />\n                    </div>\n\n                    <div className={\"form-group input-group rounded\" + border}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text rounded-0\">\n                                <FontAwesomeIcon icon={[\"fas\", \"phone\"]} />\n                            </span>\n                        </div>\n                        {/* <select\n                            className=\"custom-select\"\n                            style={{ maxWidth: \"85px\" }}\n                        >\n                            <option defaultValue=\"+880\">+880</option>\n                            <option value=\"1\">+972</option>\n                            <option value=\"2\">+198</option>\n                            <option value=\"3\">+701</option>\n                        </select> */}\n                        <input\n                            name=\"phone\"\n                            type=\"number\"\n                            className=\"form-control rounded-0\"\n                            placeholder=\"Phone number\"\n                        />\n                    </div>\n\n                    <div className={\"form-group input-group rounded\" + border}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text rounded-0\">\n                                <FontAwesomeIcon icon={[\"fas\", \"building\"]} />\n                            </span>\n                        </div>\n                        <select\n                            required\n                            onChange={handleSelect}\n                            className=\"form-control rounded-0\"\n                        >\n                            <option defaultValue=\"1\">Customer</option>\n                            <option value=\"2\">Service Provider</option>\n                        </select>\n                    </div>\n\n                    {isServiceProvider && (\n                        <>\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"id-card\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    name=\"nid\"\n                                    type=\"number\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"NID number\"\n                                />\n                            </div>\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"id-card\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"number\"\n                                    name=\"trade_license\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Trade license number\"\n                                />\n                            </div>\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"building\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    name=\"company_name\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Company name\"\n                                />\n                            </div>\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"taxi\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    name=\"service_type\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Service type\"\n                                />\n                            </div>\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"hand-holding-usd\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"number\"\n                                    name=\"delivery_charge\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Delivery charge\"\n                                />\n                            </div>\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"plus\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    name=\"description\"\n                                    type=\"text\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Description\"\n                                />\n                            </div>\n\n                            {/* <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"home\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    name=\"\"\n                                    disabled\n                                    type=\"text\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"House\"\n                                />\n                                <input\n                                    name=\"\"\n                                    disabled\n                                    type=\"text\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Road\"\n                                />\n                            </div> */}\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"location-arrow\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    name=\"address\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Location Description\"\n                                />\n                            </div>\n                        </>\n                    )}\n\n                    <div className=\"form-group\">\n                        <Button variant={type} type=\"submit\" className=\"w-100\">\n                            <FontAwesomeIcon\n                                className=\"mr-2\"\n                                icon={[\"fas\", \"user-plus\"]}\n                            />\n                            Create Account\n                        </Button>\n                    </div>\n\n                    <div className={\"text-center\" + link}>\n                        Have an account? <Link to=\"/login\">Log In</Link>\n                    </div>\n                </form>\n            </article>\n        </div>\n    );\n};\n\nexport default withRouter(RegistrationForm);\n","import React from 'react';\nimport Layout from '../components/generic/layout';\nimport RegistrationForm from '../components/user/userRegistrationForm';\n\nconst UserRegistration = () => {\n    return (\n        <Layout>\n            <RegistrationForm />\n        </Layout>\n    );\n}\n \nexport default UserRegistration;","import { useParams } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomTable from \"../generic/CustomTable\";\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst OrderDetails = (props) => {\n    const params = useParams();\n    const [status, setStatus] = useState(undefined);\n    const [orderDetailsState, setOrderDetailsState] = useState([]);\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = isServiceProvider\n            ? \"/service/orderDetails/\"\n            : \"/customer/orderDetails/\";\n\n        const loadData = async () => {\n            const orderID = {\n                order_id: params.order_id,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(orderID),\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else {\n                setStatus(undefined);\n                setOrderDetailsState(data.details);\n            }\n        };\n        loadData();\n    }, [params.order_id, isServiceProvider]);\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Product Name\" },\n            { className: \"\", value: \"Quantity\" },\n            { className: \"\", value: \"Product Size\" },\n            { className: \"\", value: \"Price (per unit)\" },\n        ],\n        allowedEntry: [\"product_name\", \"quantity\", \"product_size\"],\n    };\n\n    return (\n        <>\n            {status ? (\n                <CustomAlert status={status} />\n            ) : (\n                <>\n                    <h4 className={\"mb-5 text-center\" + syntax}>\n                        Order Details\n                    </h4>\n                    <CustomTable\n                        ths={tableData.ths}\n                        datas={orderDetailsState}\n                        allowedEntry={tableData.allowedEntry}\n                        ActionComponents={[\n                            {\n                                component: (order) => (\n                                    <>\n                                        <span className=\"font-weight-bold\">\n                                            ৳{\" \"}\n                                        </span>\n                                        {order.product_price_per_unit}\n                                    </>\n                                ),\n                                className: \"\",\n                            },\n                        ]}\n                    />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default OrderDetails;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport OrderDetails from \"../components/orders/OrderDetails\";\n\nconst OrderPage = () => {\n    return (\n        <Layout>\n            <OrderDetails />\n        </Layout>\n    );\n};\n\nexport default OrderPage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomModal from \"../generic/CustomModal\";\n\nconst UpdateEmployeeDetails = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleUpdate = () => {\n        const API_URL = \"/updateEmployee/\";\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n            object[\"employee_id\"] = props.employee.employee_id;\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatus(data.message);\n                setStatusVariant(\"danger\");\n            }\n        };\n        loadData();\n    };\n\n    return (\n        <CustomModal\n            // size=\"md\"\n            actionVariant={type}\n            handleAction={handleUpdate}\n            modalTitle=\"Update Employee Details\"\n            actionButtonBody={\n                <>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"wrench\"]}\n                    />\n                    Update\n                </>\n            }\n            modalButtonClass={\"btn btn-sm btn-\" + type}\n            modalBody={\n                <form ref={form}>\n                    {status &&\n                        (statusVariant === \"success\" ? (\n                            <CustomModalAlert\n                                status={status}\n                                setStatus={setStatus}\n                                variant={statusVariant}\n                                updateFlag={props.updateFlag}\n                            />\n                        ) : (\n                            <CustomAlert\n                                status={status}\n                                variant={statusVariant}\n                            />\n                        ))}\n\n                    <div className=\"form-group\">\n                        <label>Employee Name</label>\n\n                        <div\n                            className={\n                                \"form-group input-group rounded\" + border\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text rounded-0\">\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon\"\n                                        icon={[\"fas\", \"user\"]}\n                                    />\n                                </span>\n                            </div>\n                            <input\n                                required\n                                autoFocus\n                                type=\"text\"\n                                name=\"employee_name\"\n                                placeholder=\"Employee Name\"\n                                className=\"form-control rounded-0\"\n                                defaultValue={props.employee.employee_name}\n                            />\n                        </div>\n\n                        <label className=\"mt-3\">Phone Number</label>\n\n                        <div\n                            className={\n                                \"form-group input-group rounded\" + border\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text rounded-0\">\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon\"\n                                        icon={[\"fas\", \"phone\"]}\n                                    />\n                                </span>\n                            </div>\n                            <input\n                                type=\"text\"\n                                name=\"phone_number\"\n                                placeholder=\"Phone Number\"\n                                className=\"form-control rounded-0\"\n                                defaultValue={props.employee.phone_number}\n                            />\n                        </div>\n                    </div>\n                </form>\n            }\n        >\n            <FontAwesomeIcon className=\"fa-icon\" icon={[\"fa\", \"wrench\"]} />\n        </CustomModal>\n    );\n};\n\nexport default UpdateEmployeeDetails;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst AddEmployee = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [variant, setVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = \"/addEmployee/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setVariant(\"success\");\n                    setStatus(data.message);\n                    props.updateFlag();\n                } else {\n                    setVariant(\"danger\");\n                    setStatus(data.message);\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status &&\n                (variant === \"success\" ? (\n                    <CustomModalAlert\n                        status={status}\n                        variant={variant}\n                        setStatus={setStatus}\n                    />\n                ) : (\n                    <CustomAlert status={status} variant={variant} />\n                ))}\n\n            <Row>\n                <Col className=\"mb-4\">\n                    <div className={\"card\" + ui + syntax + border}>\n                        <div className=\"card-body\">\n                            <form ref={form} onSubmit={handleSubmit}>\n                                <Row className=\"d-flex align-items-center\">\n                                    <Col lg={4}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"fa-icon mr-2\"\n                                                    icon={[\"fas\", \"user-plus\"]}\n                                                />\n                                                Name:\n                                            </Col>\n                                            <Col\n                                                md={8}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    className={\n                                                        \"input-group rounded\" +\n                                                        border\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"text\"\n                                                        id=\"employee_name\"\n                                                        name=\"employee_name\"\n                                                        placeholder=\"Employee name\"\n                                                        className=\"form-control text-center rounded-0\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please select a valid\n                                                        name\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={5}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"fa-icon mr-2\"\n                                                    icon={[\"fas\", \"phone\"]}\n                                                />\n                                                Phone Number:\n                                            </Col>\n                                            <Col\n                                                md={7}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    className={\n                                                        \"input-group rounded\" +\n                                                        border\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"number\"\n                                                        id=\"phone_number\"\n                                                        name=\"phone_number\"\n                                                        placeholder=\"Phone Number\"\n                                                        className=\"form-control text-center rounded-0\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please provide a valid\n                                                        phone number\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={3}>\n                                        <Button\n                                            type=\"submit\"\n                                            variant={type}\n                                            className=\"w-100\"\n                                        >\n                                            <FontAwesomeIcon\n                                                className=\"mr-2\"\n                                                icon={[\"fas\", \"user-plus\"]}\n                                            />\n                                            Add Employee\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </form>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default AddEmployee;\n","import { useContext } from \"react\";\nimport emoji from \"react-easy-emoji\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Infobar from \"../generic/infobar\";\nimport DeleteModal from \"../generic/DeleteModal\";\nimport CustomTable from \"../generic/CustomTable\";\nimport UpdateEmployeeDetails from \"./UpdateEmployeeDetails\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport AddEmployee from \"./AddEmployee\";\nimport SearchBar from \"../generic/SearchBar\";\n\nconst EmployeeList = (props) => {\n    const [flag, setFlag] = useState(true);\n    const [employees, setEmployees] = useState([]);\n    const [status, setStatus] = useState(undefined);\n    const [searchData, setSearchData] = useState(\"\");\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/getEmployee/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                search_data: searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            const data = await response.json();\n            setEmployees(data.employee);\n        };\n        loadData();\n    }, [flag, searchData]);\n\n    const handleDelete = (id) => {\n        const API_URL = \"/deleteEmployee/\";\n\n        const loadData = async () => {\n            const employeeID = {\n                employee_id: id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(employeeID),\n            });\n\n            const data = await response.json();\n            if (response.ok) setStatusVariant(\"success\");\n            setStatus(data.message);\n        };\n        loadData();\n    };\n\n    const updateFlag = () => setFlag(!flag);\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Index\" },\n            { className: \"\", value: \"Employee Name\" },\n            { className: \"\", value: \"Phone\" },\n            { className: \"\", value: \"Update\" },\n            { className: \"\", value: \"Delete\" },\n        ],\n        allowedEntry: [\"employee_name\", \"phone_number\"],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>Employees Details</h4>\n\n            <SearchBar\n                handleChange={handleChange}\n                placeholder=\"Search employees details....\"\n                searchBy={<>Search by anything {emoji(\"😄\")}</>}\n            />\n\n            <AddEmployee updateFlag={updateFlag} />\n\n            {employees ? (\n                <>\n                    {status && (\n                        <CustomModalAlert\n                            status={status}\n                            setStatus={setStatus}\n                            variant={statusVariant}\n                        />\n                    )}\n\n                    <CustomTable\n                        index={true}\n                        datas={employees}\n                        ths={tableData.ths}\n                        allowedEntry={tableData.allowedEntry}\n                        ActionComponents={[\n                            {\n                                component: (employee) => (\n                                    <UpdateEmployeeDetails\n                                        employee={employee}\n                                        updateFlag={updateFlag}\n                                    />\n                                ),\n                                className: \"\",\n                            },\n                            {\n                                component: (employee) => (\n                                    <DeleteModal\n                                        employee={employee}\n                                        updateFlag={updateFlag}\n                                        handleAction={() =>\n                                            handleDelete(employee.employee_id)\n                                        }\n                                        modalBody={\n                                            <>\n                                                Do you really want to delete\n                                                details of Employee:{\" \"}\n                                                <span className={custom_text}>\n                                                    {employee.employee_name}\n                                                </span>\n                                                ?<br />\n                                                <span\n                                                    className={dangerTextColor}\n                                                >\n                                                    Caution: This action cannot\n                                                    be undone\n                                                </span>\n                                            </>\n                                        }\n                                    />\n                                ),\n                                className: \"\",\n                            },\n                        ]}\n                    />\n                </>\n            ) : (\n                <Infobar>\n                    You have no employee details to show {emoji(\"🙁\")}\n                </Infobar>\n            )}\n        </>\n    );\n};\n\nexport default EmployeeList;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport EmployeeList from \"../components/employees/EmployeeList\";\n\nconst EmployeeListPage = () => {\n    return (\n        <Layout>\n            <EmployeeList />\n        </Layout>\n    );\n};\n\nexport default EmployeeListPage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport moment from \"moment\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst OrderSuccess = () => {\n    const params = useParams();\n    const [orderDetails, setOrderDetails] = useState({});\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/order/success/\";\n\n        const loadData = async () => {\n            const orderID = {\n                order_id: params.order_id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(orderID),\n            });\n\n            const data = await response.json();\n            setOrderDetails(data.details);\n        };\n        loadData();\n    }, [params.order_id]);\n\n    return (\n        <div className={\"text-center\" + syntax}>\n            <div className=\"mx-auto\" style={{ maxWidth: \"35rem\" }}>\n                <div className=\"mb-4\">\n                    <h4 className=\"mb-3\">Thanks for your order</h4>\n                    We're processing your order now, here are the details\n                </div>\n\n                <CustomAlert\n                    variant=\"success\"\n                    status={\n                        <>\n                            <div className=\"mb-3\">\n                                <FontAwesomeIcon\n                                    style={{ fontSize: \"6rem\" }}\n                                    icon={[\"fas\", \"check-circle\"]}\n                                />\n                            </div>\n                            We have recieved your order successfully 😄\n                            <div className=\"text-left mt-3\">\n                                <div className=\"d-flex justify-content-between\">\n                                    <b>\n                                        <em>Net Total:</em>\n                                    </b>\n                                    <div>\n                                        <span className=\"font-weight-bold\">\n                                            ৳{\" \"}\n                                        </span>\n                                        {orderDetails.total}\n                                    </div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    <b>\n                                        <em>Ordered Time:</em>\n                                    </b>\n                                    <div>\n                                        {moment(orderDetails.time).format(\n                                            \"MMM DD, YY hh:mm a\"\n                                        )}\n                                    </div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    <b>\n                                        <em>Ordered Number:</em>\n                                    </b>\n                                    <div>{orderDetails.phone_number}</div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    <b>\n                                        <em>Service Provider:</em>\n                                    </b>\n                                    <div>{orderDetails.provider_name}</div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    <b>\n                                        <em>Delivery Address:</em>\n                                    </b>\n                                    <div>{orderDetails.address}</div>\n                                </div>\n                            </div>\n                        </>\n                    }\n                />\n\n                <Button variant={type} className=\"mt-3 w-100\" as={Link} to=\"/\">\n                    <FontAwesomeIcon className=\"mr-2\" icon={[\"fas\", \"home\"]} />\n                    Go to Homepage\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderSuccess;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport OrderSuccess from \"../components/orders/OrderSuccess\";\nimport CartContextProvider from \"../contexts/CartContext\";\n\nconst OrderSuccessPage = () => {\n    return (\n        <Layout>\n            <CartContextProvider>\n                <OrderSuccess />\n            </CartContextProvider>\n        </Layout>\n    );\n};\n\nexport default OrderSuccessPage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModal from \"../generic/CustomModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst AddProduct = (props) => {\n    const form = useRef(null);\n    const { availableProduct } = props;\n\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const btnTypeClass = isLightTheme\n        ? theme.light.btnTypeClass\n        : theme.dark.btnTypeClass;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const handleAddProduct = () => {\n        const API_URL = \"/addtoinventory/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setStatus(data.message);\n                    setStatusVariant(\"success\");\n                } else setStatus(data.message);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                    updateFlag={props.updateFlag}\n                />\n            )}\n\n            <form ref={form} onSubmit={(e) => e.preventDefault()}>\n                <input\n                    type=\"hidden\"\n                    name=\"product_id\"\n                    value={availableProduct.product_id}\n                />\n\n                <div\n                    className=\"mt-2 mb-3 input-group mx-auto\"\n                    style={{ maxWidth: \"10rem\" }}\n                >\n                    <input\n                        required\n                        name=\"price\"\n                        type=\"number\"\n                        placeholder=\"Your Price...\"\n                        style={{ maxWidth: \"7.18rem\" }}\n                        defaultValue={props.base_price}\n                        className={\"show-cart-count ml-1\" + syntax}\n                    />\n                    <span className=\"font-weight-bold show-cart-count\">\n                        BDT\n                    </span>\n                </div>\n\n                <CustomModal\n                    actionVariant={type}\n                    modalTitle=\"Add Product\"\n                    handleAction={handleAddProduct}\n                    modalBody={\n                        <>\n                            Do you really want to add Product:{\" \"}\n                            <span className={custom_text}>\n                                {props.product_name}\n                            </span>{\" \"}\n                            into your inventory?\n                        </>\n                    }\n                    modalButtonClass={\"btn btn-sm\" + btnTypeClass}\n                    actionButtonBody={\n                        <>\n                            <FontAwesomeIcon\n                                className=\"fa-icon mr-2\"\n                                icon={[\"fas\", \"plus\"]}\n                            />\n                            Add\n                        </>\n                    }\n                >\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"warehouse\"]}\n                    />\n                    Add to Inventory\n                </CustomModal>\n            </form>\n        </>\n    );\n};\n\nexport default AddProduct;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const ProductContext = createContext();\n\nconst ProductContextProvider = (props) => {\n    const [category, setCategory] = useState(\"\");\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"product_category\");\n        const localCategory = JSON.parse(json);\n\n        if (localCategory) setCategory(localCategory);\n    }, []);\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"product_category\");\n        const localCategory = JSON.parse(json);\n\n        if (localCategory !== category)\n            sessionStorage.setItem(\n                \"product_category\",\n                JSON.stringify(category)\n            );\n    }, [category]);\n\n    const changeCategory = (selectedCategory) => {\n        setCategory(selectedCategory);\n\n        // Updating sessionStorage\n        sessionStorage.setItem(\"product_category\", JSON.stringify(selectedCategory));\n    };\n\n    return (\n        <ProductContext.Provider value={{ category, changeCategory }}>\n            {props.children}\n        </ProductContext.Provider>\n    );\n};\n\nexport default ProductContextProvider;\n","import React, { useState, useContext, useEffect } from \"react\";\n\nimport { ProductContext } from \"../../contexts/ProductContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport LocationDropDown from \"../location/LocationDropDown\";\n\nconst SelectCategory = () => {\n    const [categories, setCategories] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState(\n        JSON.parse(sessionStorage.getItem(\"product_category\"))\n            ? JSON.parse(sessionStorage.getItem(\"product_category\"))\n            : \"\"\n    );\n    const [status, setStatus] = useState(undefined);\n\n    const { changeCategory } = useContext(ProductContext);\n\n    // ComponentDidMount\n    useEffect(() => {\n        const loadData = async () => {\n            const API_URL = \"/product/category/\";\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"GET\",\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setCategories(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, []);\n\n    const handleCategorySelect = (e) => {\n        setSelectedCategory(e);\n        changeCategory(e);\n    };\n\n    return (\n        <div>\n            {status && <CustomAlert status={status} />}\n\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        status=\"\"\n                        customClass=\"mb-2 w-100\"\n                        values={categories ? categories : []}\n                        handleSelect={handleCategorySelect}\n                        title={\n                            selectedCategory\n                                ? selectedCategory\n                                : \"Select Category\"\n                        }\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SelectCategory;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport emoji from \"react-easy-emoji\";\n\nimport Title from \"../generic/title\";\nimport AddProduct from \"./AddProduct\";\nimport SearchBar from \"../generic/SearchBar\";\nimport CustomCard from \"../generic/CustomCard\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport SelectCategory from \"./SelectCategory\";\nimport { ProductContext } from \"../../contexts/ProductContext\";\nimport CustomPagination from \"../generic/CustomPagination\";\n\nconst AvailableProducts = (props) => {\n    const [flag, setFlag] = useState(true);\n    const [totalPage, setTotalPage] = useState(0);\n    const [status, setStatus] = useState(undefined);\n    const [activePage, setActivePage] = useState(1);\n    const [searchData, setSearchData] = useState(\"\");\n    const [availableProducts, setAvailableProducts] = useState([]);\n\n    const { category } = useContext(ProductContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    useEffect(() => {\n        let API_URL = \"/availableProduct/\";\n\n        const loadData = async () => {\n            let bodyData = {\n                category: category,\n                search_data: searchData,\n                page_number: activePage,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                let response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                let data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setAvailableProducts(data.items);\n\n                // Get total page count\n                API_URL = \"/category/page/\";\n\n                bodyData = {\n                    category: category,\n                    search_data: searchData,\n                    service_id: localStorage.getItem(\"userID\"),\n                };\n\n                response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setTotalPage(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [flag, searchData, category, activePage]);\n\n    // componentDidMount\n    useEffect(() => {\n        setActivePage(1);\n    }, [searchData]);\n\n    const updateFlag = () => setFlag(!flag);\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    const handlePageClick = (e) => setActivePage(e);\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>\n                Add to your Inventory\n            </h4>\n\n            <SearchBar\n                handleChange={handleChange}\n                placeholder=\"Search products....\"\n                searchBy=\"Search products by product name or company name\"\n            />\n\n            <div className=\"mb-4\">\n                <SelectCategory />\n            </div>\n\n            <h4 className={\"mb-5 text-center\" + syntax}>Available Products</h4>\n\n            <CustomCard\n                status={status}\n                setStatus={setStatus}\n                values={availableProducts}\n                cardBodyData={(availableProduct) => (\n                    <>\n                        <Card.Title>{availableProduct.product_name}</Card.Title>\n\n                        <div>\n                            <Title>Vat: </Title> {availableProduct.vat}%\n                            <br />\n                            {/* <Title>Base Price: </Title>{\" \"}\n                            <span className=\"font-weight-bold\">৳ </span>\n                            {availableProduct.base_price} BDT\n                            <br /> */}\n                            <Title>Quantity: </Title> {availableProduct.qty}{\" \"}\n                            {availableProduct.unit}\n                            <br />\n                            <Title>Company: </Title>{\" \"}\n                            {availableProduct.company_name}\n                        </div>\n\n                        <AddProduct\n                            updateFlag={updateFlag}\n                            availableProduct={availableProduct}\n                            base_price={availableProduct.base_price}\n                            product_name={availableProduct.product_name}\n                        />\n                    </>\n                )}\n                noValueInfo={\n                    <>\n                        No new products to show to add to your inventory{\" \"}\n                        {emoji(\"☹\")}\n                    </>\n                }\n            />\n\n            <CustomPagination\n                totalPage={totalPage}\n                activePage={activePage}\n                handlePageClick={handlePageClick}\n            />\n        </>\n    );\n};\n\nexport default AvailableProducts;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport AvailableProducts from \"../components/products/AvailableProducts\";\nimport ProductContextProvider from \"../contexts/ProductContext\";\n\nconst Home = () => {\n    return (\n        <Layout>\n            <ProductContextProvider>\n                <AvailableProducts />\n            </ProductContextProvider>\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\n//import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./assets/styles/styles.scss\";\n\nimport SettingsContextProvider from \"./contexts/SettingsContext\";\nimport AuthenticationContextProvider from \"./contexts/AuthenticationContext\";\n\nimport Profile from \"./pages/Profile\";\nimport TestPage from \"./test/TestPage\";\nimport HomePage from \"./pages/HomePage\";\nimport UserLogin from \"./pages/UserLogin\";\nimport OrderPage from \"./pages/OrderPage\";\nimport AreasPage from \"./pages/AreasPage\";\nimport HistoryPage from \"./pages/HistoryPage\";\nimport ShoppingCart from \"./pages/ShoppingCart\";\nimport CheckoutPage from \"./pages/CheckoutPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport StatisticsPage from \"./pages/StatisticsPage\";\nimport ServiceProviders from \"./pages/ServiceProviders\";\nimport UserRegistration from \"./pages/UserRegistration\";\nimport OrderDetailsPage from \"./pages/OrderDetailsPage\";\nimport EmployeeListPage from \"./pages/EmployeeListPage\";\nimport OrderSuccessPage from \"./pages/OrderSuccessPage\";\nimport AvailableProductPage from \"./pages/AvailableProductPage\";\n\nlibrary.add(far, fas, fab);\n\nconst App = () => {\n    // Console Developer Info\n    console.log(\n        `        %cProjectX`,\n        `color: #2980b9; font-weight: bold; font-family: helvetica; font-size: 2rem`\n    );\n    console.log(`\n            Developed By: \n\n        Shahriar Elahi Dhruvo\n        SWE, SUST\n        Mutasim Billah Toha\n        SWE, SUST\n        Zobaer Hossain Rowan\n        CSE, SUST\n    `);\n\n    return (\n       // <Router>\n       <Router basename=\"/static\">\n            <SettingsContextProvider>\n                <AuthenticationContextProvider>\n                    <Switch>\n                        <Route\n                            path=\"/service/provider/:id\"\n                            component={ServiceProviders}\n                        />\n                        <Route exact path=\"/orders\" component={OrderPage} />\n                        <Route\n                            exact\n                            path=\"/order/success/:order_id\"\n                            component={OrderSuccessPage}\n                        />\n                        <Route\n                            exact\n                            path=\"/order/details/:order_id\"\n                            component={OrderDetailsPage}\n                        />\n                        <Route\n                            exact\n                            path=\"/add/product\"\n                            component={AvailableProductPage}\n                        />\n                        <Route exact path=\"/areas\" component={AreasPage} />\n                        <Route\n                            exact\n                            path=\"/employee\"\n                            component={EmployeeListPage}\n                        />\n                        <Route\n                            exact\n                            path=\"/statistics\"\n                            component={StatisticsPage}\n                        />\n                        <Route\n                            exact\n                            path=\"/checkout\"\n                            component={CheckoutPage}\n                        />\n                        <Route exact path=\"/cart\" component={ShoppingCart} />\n                        <Route\n                            exact\n                            path=\"/registration\"\n                            component={UserRegistration}\n                        />\n                        <Route exact path=\"/login\" component={UserLogin} />\n                        <Route exact path=\"/profile\" component={Profile} />\n                        <Route exact path=\"/history\" component={HistoryPage} />\n                        <Route exact path=\"/test\" component={TestPage} />\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route component={NotFoundPage} />\n                    </Switch>\n                </AuthenticationContextProvider>\n            </SettingsContextProvider>\n        </Router>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}