{"version":3,"sources":["contexts/SettingsContext.jsx","contexts/AuthenticationContext.jsx","contexts/ThemeContext.jsx","components/theme/ToggleTheme.jsx","components/generic/navbar.jsx","components/generic/main.jsx","components/generic/Footer.jsx","components/generic/layout.jsx","components/generic/title.jsx","components/providers/provider.jsx","components/generic/infobar.jsx","contexts/LocationContext.jsx","components/providers/providers.jsx","components/location/LocationDropDown.jsx","components/location/SelectLocation.jsx","pages/Home.jsx","components/generic/CustomAlert.jsx","components/user/ProfileForm.jsx","pages/Profile.jsx","test/Test.jsx","test/TestPage.jsx","components/user/loginForm.jsx","pages/UserLogin.jsx","components/generic/SearchBar.jsx","components/generic/CustomTable.jsx","components/employees/EmployeeDropDown.jsx","components/generic/CustomModalAlert.jsx","components/generic/CustomModal.jsx","components/generic/DeleteModal.jsx","components/orders/Order.jsx","pages/OrderPage.jsx","components/areas/RemoveArea.jsx","components/generic/CustomCard.jsx","components/areas/ServiceAreas.jsx","components/areas/AddArea.jsx","components/areas/AvailableAreas.jsx","components/areas/Areas.jsx","pages/AreasPage.jsx","components/user/History.jsx","pages/HistoryPage.jsx","contexts/CartContext.jsx","components/generic/counter.jsx","components/shoppingCart/cart.jsx","pages/ShoppingCart.jsx","components/shoppingCart/checkout.jsx","pages/CheckoutPage.jsx","components/generic/NotFound.jsx","pages/NotFoundPage.jsx","components/statistics/Charts.jsx","components/statistics/Statistics.jsx","pages/StatisticsPage.jsx","components/products/UpdateProductDetails.jsx","components/services/service.jsx","components/services/services.jsx","pages/ServiceProviders.jsx","components/user/userRegistrationForm.jsx","pages/UserRegistration.jsx","components/orders/OrderDetails.jsx","pages/OrderDetailsPage.jsx","components/employees/UpdateEmployeeDetails.jsx","components/employees/AddEmployee.jsx","components/employees/EmployeeList.jsx","pages/EmployeeListPage.jsx","components/orders/OrderSuccess.jsx","pages/OrderSuccessPage.jsx","components/products/AddProduct.jsx","components/products/AvailableProducts.jsx","pages/AvailableProductPage.jsx","App.js","index.js"],"names":["SettingsContext","createContext","SettingsContextProvider","props","useState","isAnimated","setIsAnimated","Provider","value","changeIsAnimated","children","AuthenticationContext","AuthenticationContextProvider","isAuthenticated","setIsAuthenticated","useEffect","currentAuth","localStorage","getItem","handleAuthentication","setItem","handleLogOut","a","API_URL","fetch","method","ok","window","location","replace","ThemeContext","ThemeContextProvider","isLightTheme","setIsLightTheme","json","sessionStorage","localTheme","JSON","parse","stringify","theme","light","syntax","bg","link","ui","border","custom_text","type","dropdown_text","borderLeft","currency_text","success","secondary","mainColor","dangerTextColor","btnTypeClass","lineChartbg","dark","toggleTheme","ToggleTheme","useContext","onClick","className","WbSunny","NightsStay","MainNav","scrollY","isShadow","setIsShadow","isServiceProvider","useWindowScroll","event","variant","navLinkStyle","paddingLeft","paddingRight","cursor","CustomToggle","React","forwardRef","ref","style","e","preventDefault","ArrowDropDown","Navbar","expand","sticky","backgroundColor","Brand","as","NavLink","to","fontFamily","fontSize","Toggle","aria-controls","Collapse","id","Nav","Link","AccountCircle","Dropdown","alignRight","Equalizer","Menu","width","Item","icon","Main","background","Container","Footer","bottomBorder","height","display","target","rel","href","role","color","Date","getFullYear","Layout","Title","fontWeight","show","setShow","provider","setProvider","servideID","userid","Service","service_id","headers","Accept","body","response","data","loadData","toString","Card","src","Math","floor","random","onError","onerror","alt","company_name","address","service_type","phone_1","phone_2","description","Button","disabled","Infobar","text_color","text","LocationContext","LocationContextProvider","locationsfs","setLocationsfs","areaIDs","setAreaIDs","district","area","setLocation","apiData","areas","map","chk","area_name","area_id","push","localLocation","changeLocation","Providers","providers","setProviders","services","service","console","log","length","emoji","uuidv4","LocationDropDown","title","setTitle","handleSelect","size","status","customClass","values","eventKey","onSelect","SelectLocation","setDistrict","setArea","setAreas","districts","Object","keys","Home","history","useHistory","CustomAlert","noCenter","Alert","alertClass","ProfileForm","user","setUser","canEdit","setCanEdit","undefined","setStatus","setVariant","form","useRef","object","detail","handleEdit","handleSubmit","formData","FormData","current","forEach","key","message","maxWidth","username","onSubmit","Row","Col","md","sm","name","readOnly","defaultValue","userphone","delivery_charge","nid","trade_license","Profile","useStyles","makeStyles","grow","flexGrow","menuButton","marginRight","spacing","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","Test","classes","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","mobileMenuId","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-haspopup","AppBar","Toolbar","edge","Typography","noWrap","InputBase","placeholder","root","input","inputProps","TestPage","withRouter","setIsServiceProvider","showVerificationArea","setShowVerificationArea","phone","required","UserLogin","SearchBar","autoFocus","onChange","handleChange","borderBottom","searchBy","CustomTable","Table","striped","responsive","ths","th","scope","datas","index","PreActionComponents","PreActionComponent","component","allowedEntry","filter","includes","reduce","obj","i","tdsClassName","ActionComponents","ActionComponent","EmployeeDropDown","subElementKey","tmp","subElementValue","CustomModalAlert","redirect","updateFlag","handleClose","useCallback","setTimeout","Modal","centered","onHide","animation","Body","Spinner","handleCloseAction","noAction","edit","modalButtonStyle","modalButtonClass","modalClass","modalTitle","modalBody","handleAction","actionVariant","actionButtonBody","deleteTitle","deleteText","deleteIcon","Order","setValue","flag","setFlag","orders","setOrders","employes","setEmployes","searchData","setSearchData","tabs","assignedOrders","setAssignedOrders","statusVariant","setStatusVariant","selectedEmployeeID","setSelectedEmployeeID","selectedEmployeeName","setSelectedEmployeeName","bodyData","search_data","details","employee","handleCancel","order_id","TabPanel","other","hidden","aria-labelledby","Box","tableData","Tabs","newValue","TabIndicatorProps","tab","Tab","label","textTransform","order","payment","Moment","time","format","handleEmployeeSelect","employee_id","orderID","handleOrderComplete","OrderPage","RemoveArea","reload","CustomCard","cardBodyData","noValueInfo","ServiceAreas","serviceAreas","setServiceAreas","Areas","serviceArea","thana","upazilla","lati","longi","AddArea","AvailableAreas","availableAreas","setAvailableAreas","availableArea","History","activeHistories","setActiveHistories","deliveredHistories","setDeliveredHistories","cancelledHistories","setCancelledHistories","activeThs","cancelledThs","deliveredThs","activeAllowedEntry","cancelledAllowedEntry","deliveredAllowedEntry","reason","CartContext","CartContextProvider","items","setItems","totalPrice","setTotalPrice","subTotalPrice","setSubTotalPrice","local","tmpPrice","item","count","price","addItem","discount","handleRemove","handleAddOne","newItem","handleMinusOne","postCountUpdate","Counter","setCount","Icon","onBlur","onKeyDown","Cart","productName","qty","unit","ShoppingCart","addressess","setAddressess","newAddress","setNewAddress","customerId","handleCleanUP","opacity","overflow","noValidate","product_id","today","date","getMonth","getDate","getHours","getMinutes","customer_add_id","htmlFor","borderColor","house_no","road_no","further_description","defaultChecked","CheckoutPage","goBack","NotFoundPage","Charts","pointBorderColor","ticksBackdropColor","fontColor","gridColor","barChartData","setBarChartData","lineChartData","setLineChartData","polarChartData","setPolarChartData","end_date","start_date","Chart","defaults","global","defaultFontColor","defaultFontFamily","helpers","each","instances","instance","chart","update","chartsData","dataLine","labels","options","legend","plugins","datalabels","scales","xAxes","ticks","source","scaleLabel","labelString","gridLines","yAxes","datasets","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","dataBar","layout","left","right","top","bottom","align","anchor","borderWidth","dataPolar","pieceLabel","showZero","render","scale","backdropColor","borderAlign","hoverBackgroundColor","lg","extraData","statistics","setStatistics","moment","toLocaleDateString","subtract","setDate","start","end","isBefore","duration","diff","add","total_orders","delivered","income","StatisticsPage","UpdateProductDetails","product","product_name","serviceInfo","vat","Img","maxHeight","results","verticalAlign","Services","params","useParams","sName","setSName","setServices","products","ServiceProviders","UserRegistration","OrderDetails","orderDetailsState","setOrderDetailsState","product_price_per_unit","UpdateEmployeeDetails","employee_name","phone_number","AddEmployee","EmployeeList","employees","setEmployees","employeeID","EmployeeListPage","OrderSuccess","orderDetails","setOrderDetails","total","provider_name","OrderSuccessPage","AddProduct","availableProduct","AvailableProducts","availableProducts","setAvailableProducts","library","far","fas","fab","App","path","exact","OrderDetailsPage","AvailableProductPage","AreasPage","HistoryPage","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b102ba5.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const SettingsContext = createContext();\n\nconst SettingsContextProvider = (props) => {\n    const [isAnimated, setIsAnimated] = useState(false);\n\n    const changeIsAnimated = () => setIsAnimated(!isAnimated);\n\n    return (\n        <SettingsContext.Provider value={{ isAnimated, changeIsAnimated }}>\n            {props.children}\n        </SettingsContext.Provider>\n    );\n};\n\nexport default SettingsContextProvider;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const AuthenticationContext = createContext();\n\nconst AuthenticationContextProvider = (props) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(\"\");\n\n    useEffect(() => {\n        const currentAuth = localStorage.getItem(\"isAuthenticated\");\n\n        if (currentAuth !== isAuthenticated) setIsAuthenticated(currentAuth);\n    }, [isAuthenticated]);\n\n    const handleAuthentication = (isAuthenticated) => {\n        setIsAuthenticated(isAuthenticated);\n        localStorage.setItem(\"isAuthenticated\", isAuthenticated);\n    };\n\n    const handleLogOut = async () => {\n        const API_URL =\n            localStorage.getItem(\"isServiceProvider\") === \"true\"\n                ? \"/servicelogout/\"\n                : \"/logout/\";\n\n        const response = await fetch(API_URL, {\n            method: \"GET\",\n        });\n\n        if (response.ok) {\n            handleAuthentication(\"\");\n            localStorage.setItem(\"userID\", \"\");\n            localStorage.setItem(\"username\", \"\");\n            localStorage.setItem(\"isServiceProvider\",\"\");\n            localStorage.setItem(\"phone_number\", \"\");\n            window.location.replace(\"/login\");\n        }\n    };\n\n    return (\n        <AuthenticationContext.Provider\n            value={{ isAuthenticated, handleAuthentication, handleLogOut }}\n        >\n            {props.children}\n        </AuthenticationContext.Provider>\n    );\n};\n\nexport default AuthenticationContextProvider;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const ThemeContext = createContext();\n\nconst ThemeContextProvider = (props) => {\n  const [isLightTheme, setIsLightTheme] = useState(false);\n\n  // componentDidMount\n  useEffect(() => {\n    const json = sessionStorage.getItem(\"theme\");\n    const localTheme = JSON.parse(json);\n\n    if (localTheme != null) setIsLightTheme(localTheme);\n  }, []);\n\n  // componentDidUpdate\n  useEffect(() => {\n    const json = sessionStorage.getItem(\"theme\");\n    const localTheme = JSON.parse(json);\n\n    if (localTheme !== isLightTheme)\n      sessionStorage.setItem(\"theme\", JSON.stringify(isLightTheme));\n  }, [isLightTheme]);\n\n  const theme = {\n    light: {\n      syntax:         \"\",\n      bg:             \"#ffffff\",\n      link:           \" link\",\n      ui:             \" bg-light\",\n      border:         \" custom-border\",\n      custom_text:    \" text-main\",\n      type:           \"main\",\n      dropdown_text:  \" dropdown-text\",\n      borderLeft:     \" #eee\",\n      currency_text:  \" text-success\",\n      success:        \"success\",\n      secondary:      \"secondary\",\n      mainColor:      \"#2980b9\",\n      dangerTextColor:\" text-danger\",\n      btnTypeClass:   \" btn-main\",\n      lineChartbg:    \"rgba(41, 127, 185, 0.15)\",\n    },\n    dark: {\n      syntax:         \" text-white\",\n      bg:             \"#20222b\",\n      link:           \" link-dark\",\n      ui:             \" bg-dark\",\n      border:         \" custom-border-dark\",\n      custom_text:    \" text-main-dark\",\n      type:           \"main-dark\",\n      dropdown_text:  \" dropdown-text-dark\",\n      borderLeft:     \" #cecece1f\",\n      currency_text:  \" text-success-dark\",\n      success:        \"success-dark\",\n      secondary:      \"secondary-dark\",\n      mainColor:      \"#feca57\",\n      dangerTextColor:\" text-remove\",\n      btnTypeClass:   \" btn-main-dark\",\n      lineChartbg:    \"rgba(254, 201, 87, 0.4)\",\n    },\n  };\n\n  const toggleTheme = () => {\n    setIsLightTheme(!isLightTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isLightTheme, theme, toggleTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { WbSunny, NightsStay } from \"@material-ui/icons\";\n\nconst ToggleTheme = () => {\n    const { toggleTheme } = useContext(ThemeContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    return (\n        <div onClick={toggleTheme} className={\"font-weight-bold\" + custom_text}>\n            {isLightTheme ? (\n                <>\n                    <WbSunny className=\"mb-1\" />\n                    <span className=\"ml-2\">Light Mode</span>\n                </>\n            ) : (\n                <>\n                    <NightsStay className=\"mb-1\" />\n                    <span className=\"ml-2\">Dark Mode</span>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default ToggleTheme;\n","import React, { useState, useContext } from \"react\";\nimport { Navbar, Nav, Dropdown } from \"react-bootstrap\";\nimport {\n    History,\n    Equalizer,\n    ShoppingCart,\n    AccountCircle,\n    ArrowDropDown,\n} from \"@material-ui/icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useWindowScroll } from \"beautiful-react-hooks\";\n\nimport ToggleTheme from \"../theme/ToggleTheme\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { SettingsContext } from \"../../contexts/SettingsContext\";\n\nconst MainNav = (props) => {\n    // const { isAnimated } = useContext(SettingsContext);\n    const [isShadow, setIsShadow] = useState(window.scrollY > 20);\n    const [isAuthenticated] = useState(localStorage.getItem(\"isAuthenticated\"));\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    useWindowScroll((event) => {\n        setIsShadow(window.scrollY > 20);\n    });\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const dropdown_text = isLightTheme\n        ? theme.light.dropdown_text\n        : theme.dark.dropdown_text;\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n    const variant = isLightTheme ? \"light\" : \"dark\";\n    const borderLeft = isLightTheme\n        ? theme.light.borderLeft\n        : theme.dark.borderLeft;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const navLinkStyle = {\n        paddingLeft: 15,\n        paddingRight: 15,\n        cursor: \"pointer\",\n        // fontWeight: \"600\",\n        borderLeft: \"1px solid\" + borderLeft,\n    };\n\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <div\n            ref={ref}\n            style={navLinkStyle}\n            onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n            }}\n            className={\"h-100 pt-2\" + custom_text}\n        >\n            {children}\n            <ArrowDropDown className=\"mb-1\" />\n        </div>\n    ));\n\n    return (\n        <Navbar\n            expand=\"lg\"\n            sticky=\"top\"\n            variant={variant}\n            style={{ backgroundColor: bg }}\n            className={isShadow ? \"shadow\" : \"\"}\n        >\n            <Navbar.Brand\n                as={NavLink}\n                className={custom_text}\n                to={isServiceProvider ? \"/orders\" : \"/\"}\n                style={{ fontFamily: \"MuseoModerno\", fontSize: \"1.4rem\" }}\n            >\n                ProjectX\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"main-nav\" />\n            <Navbar.Collapse id=\"main-nav\">\n                <Nav className=\"ml-auto\">\n                    <Nav.Link\n                        as={NavLink}\n                        style={navLinkStyle}\n                        className={\"font-weight-bold\" + custom_text}\n                        to={isAuthenticated ? \"/profile\" : \"/login\"}\n                    >\n                        <AccountCircle className=\"mb-1\" />\n                        <span className=\"ml-2\">\n                            {localStorage.getItem(\"username\")\n                                ? localStorage.getItem(\"username\")\n                                : \"Login\"}\n                        </span>\n                    </Nav.Link>\n\n                    <Nav.Link\n                        as={NavLink}\n                        to={\"/history\"}\n                        style={navLinkStyle}\n                        className={\"font-weight-bold\" + custom_text}\n                    >\n                        <History className=\"mb-1\" />\n                        <span className=\"ml-2\">History</span>\n                    </Nav.Link>\n\n                    <Nav.Link style={navLinkStyle}>\n                        <ToggleTheme />\n                    </Nav.Link>\n\n                    {isServiceProvider ? (\n                        <Dropdown alignRight={true}>\n                            <Dropdown.Toggle as={CustomToggle}>\n                                <Equalizer className=\"mb-1\" />\n                                <span className=\"font-weight-bold ml-2\">\n                                    Dashboard\n                                </span>\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu\n                                className={ui + border}\n                                style={{ width: \"14rem\" }}\n                            >\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/orders\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"tasks\"]}\n                                    />\n                                    Orders\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/statistics\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"chart-line\"]}\n                                    />\n                                    Statistics\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    variant={type}\n                                    to={`/service/provider/${localStorage.getItem(\n                                        \"userID\"\n                                    )}`}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"boxes\"]}\n                                    />\n                                    Inventory\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    variant={type}\n                                    to=\"/add/product\"\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"plus-circle\"]}\n                                    />\n                                    Add Products\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/areas\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"map-marked-alt\"]}\n                                    />\n                                    Manage Areas\n                                </Dropdown.Item>\n\n                                <Dropdown.Item\n                                    as={NavLink}\n                                    to=\"/employee\"\n                                    variant={type}\n                                    className={\n                                        \"text-wrap\" + syntax + dropdown_text\n                                    }\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"users-cog\"]}\n                                    />\n                                    Employee Details\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    ) : (\n                        <Nav.Link\n                            to=\"/cart\"\n                            as={NavLink}\n                            style={navLinkStyle}\n                            className={custom_text}\n                        >\n                            <ShoppingCart className=\"mb-1\" />\n                            <span className=\"ml-2\">Cart</span>\n                        </Nav.Link>\n                    )}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nexport default MainNav;\n","import React, { useContext } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Main = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n\n    return (\n        <div className=\"vertical-center\" style={{ background: bg }}>\n            <Container className=\"mt-5\">{props.children}</Container>\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Footer = () => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const bottomBorder = {\n        width: \"60px\",\n        height: \"2px\",\n        display: \"inline-block\",\n        backgroundColor: mainColor,\n    };\n\n    return (\n        <footer style={{ backgroundColor: bg }} className={\"pt-5\" + syntax}>\n            <div className=\"container p-4\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 mb-4 mb-md-0\">\n                        <h5>About</h5>\n                        <hr style={bottomBorder} className=\"mb-3 mt-n1\" />\n\n                        <p className={\"text-justify\" + link}>\n                            Project X is founded with a vision to provide every\n                            customer with a choice; The choice of buying\n                            organic, authentic and cost effective products with\n                            minimum friction. Project X is founded in 2020 by\n                            a few students at{\" \"}\n                            <a\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                className={custom_text}\n                                href=\"https://www.sust.edu/\"\n                            >\n                                SUST\n                            </a>\n                            . The local market place will be only finger-tips\n                            away for any customer in possession of a\n                            smartphone/computer and an internet connection. They\n                            will be able to purchase everything; from a\n                            safety-pin to car from our website. For service\n                            providers they can supervise their business at a\n                            glace from the website.\n                        </p>\n                    </div>\n\n                    {/* <div className=\"col-lg-3 col-6 mb-4 mb-md-0 text-lg-right\">\n                        <h5>Quick Links</h5>\n                        <hr style={bottomBorder} className=\"mb-3 mt-n1\" />\n\n                        <div className={link}>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 1\n                                </a>\n                            </p>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 2\n                                </a>\n                            </p>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 3\n                                </a>\n                            </p>\n                            <p>\n                                <a href=\"#!\" className={custom_text}>\n                                    Link 4\n                                </a>\n                            </p>\n                        </div>\n                    </div> */}\n\n                    <div className=\"col-md-4 mb-4 mb-md-0 text-right\">\n                        <h5>Contacts</h5>\n                        <hr style={bottomBorder} className=\"mb-3 mt-n1\" />\n\n                        <div className={link}>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"phone\"]}\n                                />\n                                01886298142\n                            </p>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"phone\"]}\n                                />\n                                01534771222\n                            </p>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"envelope\"]}\n                                />\n                                project_x@gmail.com\n                            </p>\n                            <p>\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"home\"]}\n                                />\n                                Akhalia, Varsity gate, Sylhet\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                {localStorage.getItem(\"isAuthenticated\") !== \"Yes\" && (\n                    <div className={\"text-center\" + link}>\n                        Register for free{\" \"}\n                        <Link to=\"/registration\" className={custom_text}>\n                            Sign up\n                        </Link>\n                    </div>\n                )}\n\n                <section className=\"mt-4 text-center\">\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mx-4\"\n                        style={{ color: \"#3b5998\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"facebook-f\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#55acee\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#dd4b39\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"google\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#ac2bac\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"instagram\"]} />\n                    </a>\n\n                    <a\n                        href=\"#!\"\n                        role=\"button\"\n                        className=\"mr-4\"\n                        style={{ color: \"#0082ca\", fontSize: \"1.5rem\" }}\n                    >\n                        <FontAwesomeIcon icon={[\"fab\", \"linkedin-in\"]} />\n                    </a>\n                </section>\n            </div>\n\n            <div\n                className={\"text-center p-3\" + link}\n                // style={{ backgroundColor: \"rgba(0, 0, 0, 0.2)\" }}\n            >\n                © {new Date().getFullYear()} Copyright:{\" \"}\n                <a className={custom_text} href=\"#!\">\n                    ProjectX | All rights reserved\n                </a>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport MainNav from \"./navbar\";\nimport ThemeContextProvider from \"../../contexts/ThemeContext\";\nimport Main from \"./main\";\nimport Footer from \"./Footer\";\n\nconst Layout = (props) => {\n    return (\n        <ThemeContextProvider>\n            <MainNav />\n            <Main>{props.children}</Main>\n            <Footer />\n        </ThemeContextProvider>\n    );\n};\n\nexport default Layout;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Title = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    return (\n        <span\n            className={custom_text}\n            style={{ fontWeight: \"600\" }}\n        >\n            {props.children}\n        </span>\n    );\n};\n\nexport default Title;\n","import React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Title from \"../generic/title\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Provider = (props) => {\n    const [show, setShow] = useState(true);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n\n    const [provider, setProvider] = useState({});\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/getProfile/\";\n\n        const loadData = async () => {\n            const servideID = {\n                userid: props.Service.service_id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(servideID),\n            });\n\n            const data = await response.json();\n\n            setProvider(data);\n        };\n        loadData();\n\n        if (\n            provider.userid &&\n            sessionStorage.getItem(\"service_id\") &&\n            sessionStorage.getItem(\"service_id\") !== provider.userid.toString()\n        )\n            setShow(false);\n    }, [props.Service, provider.userid]);\n\n    return (\n        <div className=\"col-lg-6 mb-3\">\n            <Card className={\"p-3 shadow\" + ui + border}>\n                <div>\n                    <div className=\"d-block\">\n                        <img\n                            src={`https://picsum.photos/id/${Math.floor(\n                                Math.random() * 1000\n                            )}/800`}\n                            onError={(e) => {\n                                e.target.onerror = null;\n                                e.target.src = \"/img/Default.png\";\n                            }}\n                            alt=\"provider's\"\n                            className={\n                                \"mb-1 mr-3 float-left profile-pic\" + border\n                            }\n                        />\n                    </div>\n\n                    <div className={syntax}>\n                        <Title>Company: </Title> {provider.company_name}\n                        <br />\n                        <Title>Address: </Title> {provider.address}\n                        <br />\n                        <Title>Service type: </Title> {provider.service_type}\n                        <br />\n                        <Title>Phone number: </Title> {provider.phone_1},{\" \"}\n                        {provider.phone_2}\n                        <br />\n                        <Title>Description: </Title> {provider.description}\n                    </div>\n\n                    <Button\n                        variant={type}\n                        disabled={!show}\n                        as={show && Link}\n                        className=\"w-100 mt-3\"\n                        to={\"/service/provider/\" + props.Service.service_id}\n                    >\n                        <FontAwesomeIcon\n                            className=\"fa-icon mr-2\"\n                            icon={[\"fas\", \"shopping-basket\"]}\n                        />\n                        Show their services\n                    </Button>\n                </div>\n            </Card>\n        </div>\n    );\n};\n\nexport default Provider;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Infobar = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const text_color = props.text ? \" \" + props.text : syntax;\n\n    return (\n        <div className=\"text-center mb-4\">\n            <h4\n                className={\"rounded p-3\" + border + ui + text_color}\n            >\n                {props.children}\n            </h4>\n        </div>\n    );\n};\n\nexport default Infobar;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const LocationContext = createContext();\n\nconst LocationContextProvider = (props) => {\n    // locationsfs ==> locations from server\n    const [locationsfs, setLocationsfs] = useState({});\n    const [areaIDs, setAreaIDs] = useState({});\n    const [location, setLocation] = useState({\n        id: -1,\n        district: \"\",\n        area: \"\",\n    });\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/getServiceArea/\";\n\n        const loadData = async () => {\n            const apiData = {};\n            const response = await fetch(API_URL);\n            const data = await response.json();\n            const areaIDs = {};\n\n            let chk;\n\n            data.areas.map((area) => {\n                chk = area.district in apiData;\n\n                areaIDs[area.area_name] = area.area_id;\n\n                if (chk) return apiData[area.district].push(area.area_name);\n                return (\n                    (apiData[area.district] = []),\n                    apiData[area.district].push(area.area_name)\n                );\n            });\n            setLocationsfs(apiData);\n            setAreaIDs(areaIDs);\n        };\n        loadData();\n\n        const json = sessionStorage.getItem(\"location\");\n        const localLocation = JSON.parse(json);\n\n        if (localLocation) setLocation(localLocation);\n    }, []);\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"location\");\n        const localLocation = JSON.parse(json);\n\n        if (localLocation !== location)\n            sessionStorage.setItem(\"location\", JSON.stringify(location));\n    }, [location]);\n\n    const changeLocation = (district, area) => {\n        const id = areaIDs[area];\n        sessionStorage.setItem(\"areaID\", id);\n        setLocation({ ...location, id, district, area });\n    };\n\n    return (\n        <LocationContext.Provider\n            value={{ locationsfs, location, changeLocation }}\n        >\n            {props.children}\n        </LocationContext.Provider>\n    );\n};\n\nexport default LocationContextProvider;\n","import { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport React, { useContext, useState, useEffect } from \"react\";\n\nimport Provider from \"./provider\";\nimport Infobar from \"../generic/infobar\";\nimport { LocationContext } from \"../../contexts/LocationContext\";\n\nconst Providers = () => {\n    const { location } = useContext(LocationContext);\n\n    const [providers, setProviders] = useState([]);\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"getServiceName/\" + location.id;\n\n        const loadData = async () => {\n            try {\n                const apiData = [];\n                const response = await fetch(API_URL);\n                const data = await response.json();\n\n                data.services.map((service) => apiData.push(service));\n                setProviders(apiData);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        loadData();\n    }, [location]);\n\n    return location && location.district && location.area ? (\n        !providers.length > 0 ? (\n            <div className=\"mt-4\">\n                <Infobar>\n                    Sorry, currently we are not providing service in this area{\" \"}\n                    {emoji(\"🙁\")}\n                </Infobar>\n            </div>\n        ) : (\n            <div className=\"row mt-4\">\n                {providers.map((provider) => (\n                    // Here gives unmounted error 🙁\n                    <Provider Service={provider} key={uuidv4()} />\n                ))}\n            </div>\n        )\n    ) : (\n        <div className=\"mt-4\">\n            <Infobar>\n                Select a location to see the service providers {emoji(\"😀\")}\n            </Infobar>\n        </div>\n    );\n};\n\nexport default Providers;\n","import React, { useState, useContext } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst LocationDropDown = (props) => {\n    const [title, setTitle] = useState(props.title);\n\n    const handleSelect = (e) => {\n        setTitle(e);\n        props.handleSelect(e);\n    };\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const dropdown_text = isLightTheme\n        ? theme.light.dropdown_text\n        : theme.dark.dropdown_text;\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle\n                size={props.size}\n                disabled={props.status && props.status}\n                variant={props.type ? props.type : type}\n                className={\n                    props.customClass && props.customClass + \" text-wrap\"\n                }\n            >\n                {title}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className={\"text-center w-100 shadow\" + ui + border}>\n                {props.values.map((value) => (\n                    <Dropdown.Item\n                        key={uuidv4()}\n                        eventKey={value}\n                        onSelect={handleSelect}\n                        className={\"text-wrap\" + syntax + dropdown_text}\n                    >\n                        {value}\n                    </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default LocationDropDown;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport LocationDropDown from \"./LocationDropDown\";\nimport { LocationContext } from \"../../contexts/LocationContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst SelectLocation = () => {\n    const { locationsfs, changeLocation } = useContext(LocationContext);\n\n    const json = sessionStorage.getItem(\"location\");\n    const localLocation = JSON.parse(json)\n        ? JSON.parse(json)\n        : { district: \"\", area: \"\" };\n\n    const [district, setDistrict] = useState(localLocation.district);\n    const [area, setArea] = useState(localLocation.area);\n    const [areas, setAreas] = useState([]);\n\n    const districts = Object.keys(locationsfs);\n\n    // componentDidUpdate\n    useEffect(() => {\n        setAreas(locationsfs[localLocation.district]);\n    }, [locationsfs, localLocation.district]);\n\n    const handleDistrictSelect = (e) => {\n        setArea(\"\");\n        setDistrict(e);\n        setAreas(locationsfs[e]);\n        changeLocation(e, \"\");\n    };\n\n    const handleAreaSelect = (e) => {\n        setArea(e);\n        changeLocation(district, e);\n    };\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    return (\n        <div>\n            <div className={\"text-center mt-2\" + syntax}>\n                <h2>\n                    Why fear, when <span className=\"logo-text\">ProjectX</span>{\" \"}\n                    is here!\n                </h2>\n            </div>\n            <div className=\"row mt-5\">\n                <div className=\"col-sm-12 col-md-6\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        status=\"\"\n                        customClass=\"mb-2 w-100\"\n                        values={districts ? districts : []}\n                        handleSelect={handleDistrictSelect}\n                        title={district ? district : \"District\"}\n                    />\n                </div>\n                <div className=\"col-sm-12 col-md-6\">\n                    <LocationDropDown\n                        size=\"lg\"\n                        status={!district}\n                        customClass=\"mb-2 w-100\"\n                        values={areas ? areas : []}\n                        title={area ? area : \"Area\"}\n                        handleSelect={handleAreaSelect}\n                    />\n                </div>\n                {/* <Button\n                    size=\"lg\"\n                    variant=\"success\"\n                    type=\"submit\"\n                    className=\"col-sm mb-2 mx-3\"\n                >\n                    Search\n                </Button> */}\n            </div>\n        </div>\n    );\n};\n\nexport default SelectLocation;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Layout from \"../components/generic/layout\";\nimport Providers from \"../components/providers/providers\";\nimport LocationContextProvider from \"../contexts/LocationContext\";\nimport SelectLocation from \"../components/location/SelectLocation\";\n\nconst Home = () => {\n    const history = useHistory();\n\n    return (\n        <Layout>\n            <LocationContextProvider>\n                <SelectLocation />\n                <Providers />\n            </LocationContextProvider>\n\n            {localStorage.getItem(\"isServiceProvider\") === \"true\" &&\n                history.push(\"/orders\")}\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst CustomAlert = (props) => {\n    return (\n        <div className={props.noCenter ? \"\" : \"text-center\"}>\n            <Alert\n                variant={props.variant ? props.variant : \"danger\"}\n                className={\n                    props.alertClass ? `ccard ${props.alertClass}` : \"ccard\"\n                }\n            >\n                {props.status}\n            </Alert>\n        </div>\n    );\n};\n\nexport default CustomAlert;\n","import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { Button, Row } from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\nimport CustomAlert from \"../generic/CustomAlert\";\nimport { AuthenticationContext } from \"../../contexts/AuthenticationContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst ProfileForm = () => {\n    const [user, setUser] = useState({});\n    const [canEdit, setCanEdit] = useState(false);\n    const [status, setStatus] = useState(undefined);\n    const [variant, setVariant] = useState(\"danger\");\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    const form = useRef(null);\n\n    const { handleLogOut } = useContext(AuthenticationContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    useEffect(() => {\n        const loadData = async () => {\n            const API_URL = isServiceProvider\n                ? \"/getProfile/\"\n                : \"/customerprofile/\";\n\n            const object = {\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            // if (response.status === 401) handleLogOut();\n\n            const data = await response.json();\n\n            if (!response.ok) setStatus(data.detail);\n            else setUser({ ...data });\n        };\n\n        loadData();\n    }, [isServiceProvider]);\n\n    const handleEdit = () => {\n        setStatus(\"\");\n        setCanEdit(!canEdit);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = isServiceProvider\n            ? \"/updateProfile/\"\n            : \"/customerupdateprofile/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n            object[\"userid\"] = localStorage.getItem(\"userID\");\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n                else {\n                    setVariant(\"success\");\n                    setStatus(\"Profile updated successfully\");\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n        setCanEdit(!canEdit);\n    };\n\n    return (\n        <div\n            className={\"card mx-auto\" + ui + syntax + border}\n            style={{ maxWidth: \"38rem\" }}\n        >\n            <article className=\"card-body\">\n                <h3 className=\"text-center mb-4\">\n                    {user.username && user.username + \"'s\"} Profile\n                </h3>\n                <form ref={form} onSubmit={handleSubmit} className=\"mx-auto\">\n                    {status && (\n                        <CustomAlert variant={variant} status={status} />\n                    )}\n\n                    <Row className=\"form-group\">\n                        <Col className=\"my-auto\">\n                            <FontAwesomeIcon\n                                className=\"mr-2\"\n                                icon={[\"fas\", \"user\"]}\n                            />\n                            Username:\n                        </Col>\n                        <Col md={8} sm={12}>\n                            <div className={\"input-group rounded\" + border}>\n                                <input\n                                    type=\"text\"\n                                    name=\"username\"\n                                    readOnly={!canEdit}\n                                    defaultValue={user.username}\n                                    className=\"form-control text-center rounded-0\"\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"form-group\">\n                        <Col className=\"my-auto\">\n                            <FontAwesomeIcon\n                                className=\"mr-2\"\n                                icon={[\"fas\", \"phone\"]}\n                            />\n                            Phone:\n                        </Col>\n                        <Col md={8} sm={12}>\n                            <div className={\"input-group rounded\" + border}>\n                                <input\n                                    readOnly\n                                    type=\"number\"\n                                    name=\"userphone\"\n                                    defaultValue={user.userphone}\n                                    className=\"form-control text-center rounded-0\"\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n\n                    {isServiceProvider && (\n                        <>\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"building\"]}\n                                    />\n                                    Company:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"company_name\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.company_name}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"hand-holding-usd\"]}\n                                    />\n                                    Delivery Charge:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"number\"\n                                            readOnly={!canEdit}\n                                            name=\"delivery_charge\"\n                                            defaultValue={user.delivery_charge}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"plus\"]}\n                                    />\n                                    Description:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"description\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.description}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"id-card\"]}\n                                    />\n                                    NID:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            name=\"nid\"\n                                            type=\"text\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.nid}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"taxi\"]}\n                                    />\n                                    Service type:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"service_type\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.service_type}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"id-card\"]}\n                                    />\n                                    Trade license:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"trade_license\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.trade_license}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col className=\"my-auto\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"location-arrow\"]}\n                                    />\n                                    Address:\n                                </Col>\n                                <Col md={8} sm={12}>\n                                    <div\n                                        className={\n                                            \"input-group rounded\" + border\n                                        }\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"address\"\n                                            readOnly={!canEdit}\n                                            defaultValue={user.address}\n                                            className=\"form-control text-center rounded-0\"\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n                        </>\n                    )}\n\n                    <div className=\"row mt-3\">\n                        <div\n                            className={\n                                canEdit\n                                    ? \"col-sm-12 mb-2 col-md-4\"\n                                    : \"col-sm-12 mb-2 col-md-6\"\n                            }\n                        >\n                            <Button\n                                className=\"w-100\"\n                                onClick={handleLogOut}\n                                variant={\"outline-\" + type}\n                            >\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"sign-out-alt\"]}\n                                />\n                                Logout\n                            </Button>\n                        </div>\n\n                        {canEdit && (\n                            <div\n                                className={\n                                    canEdit\n                                        ? \"col-sm-12 mb-2 col-md-4\"\n                                        : \"col-sm-12 mb-2 col-md-6\"\n                                }\n                            >\n                                <Button\n                                    variant=\"remove\"\n                                    className=\"w-100\"\n                                    onClick={handleEdit}\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"strikethrough\"]}\n                                    />\n                                    Cancel Edit\n                                </Button>\n                            </div>\n                        )}\n\n                        <div\n                            className={\n                                canEdit\n                                    ? \"col-sm-12 mb-2 col-md-4\"\n                                    : \"col-sm-12 mb-2 col-md-6\"\n                            }\n                        >\n                            <Button\n                                variant={type}\n                                className=\"w-100\"\n                                onClick={canEdit ? handleSubmit : handleEdit}\n                            >\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", canEdit ? \"wrench\" : \"edit\"]}\n                                />\n                                {canEdit ? \"Update Profile\" : \"Edit Profile\"}\n                            </Button>\n                        </div>\n                    </div>\n                </form>\n            </article>\n        </div>\n    );\n};\n\nexport default ProfileForm;\n","import React from \"react\";\nimport Layout from \"../components/generic/layout\";\nimport ProfileForm from \"../components/user/ProfileForm\";\n\nconst Profile = () => {\n    return (\n        <Layout>\n            <ProfileForm />\n        </Layout>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n    search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(3),\n            width: \"auto\",\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \"20ch\",\n        },\n    },\n    sectionDesktop: {\n        display: \"none\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"flex\",\n        },\n    },\n    sectionMobile: {\n        display: \"flex\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"none\",\n        },\n    },\n}));\n\nexport default function Test() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = \"primary-search-account-menu\";\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = \"primary-search-account-menu-mobile\";\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton\n                    aria-label=\"show 11 new notifications\"\n                    color=\"inherit\"\n                >\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Material-UI\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ \"aria-label\": \"search\" }}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton\n                            aria-label=\"show 4 new mails\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            aria-label=\"show 17 new notifications\"\n                            color=\"inherit\"\n                        >\n                            <Badge badgeContent={17} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n","import React from \"react\";\nimport Test from \"./Test.jsx\"\nimport Layout from \"../components/generic/layout\";\n\nconst TestPage = () => {\n    return (\n        <Layout>\n            <Test />\n        </Layout>\n    );\n};\n\nexport default TestPage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { Button } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport { AuthenticationContext } from \"../../contexts/AuthenticationContext\";\n\nconst LoginForm = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(\"\");\n    const { handleAuthentication } = useContext(AuthenticationContext);\n\n    const [isServiceProvider, setIsServiceProvider] = useState(false);\n    const [showVerificationArea, setShowVerificationArea] = useState(false);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = !showVerificationArea\n            ? isServiceProvider\n                ? \"/servicelogin/\"\n                : \"/login/\"\n            : isServiceProvider\n            ? \"/serviceverify/\"\n            : \"/verify/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n                else if (!showVerificationArea) {\n                    setStatus(undefined);\n                    setShowVerificationArea(true);\n                } else {\n                    localStorage.setItem(\"userID\", data.userid);\n                    localStorage.setItem(\"username\", data.username);\n                    localStorage.setItem(\"phone_number\", object.phone);\n                    // window.location.replace(\"/\");\n                    localStorage.setItem(\n                        \"isServiceProvider\",\n                        isServiceProvider\n                    );\n                    handleAuthentication(\"Yes\");\n                    isServiceProvider\n                        ? props.history.push(\"/orders\")\n                        : props.history.push(\"/\");\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleCheck = () => setIsServiceProvider(!isServiceProvider);\n\n    return (\n        <div\n            className={\"card mx-auto\" + ui + syntax + border}\n            style={{ maxWidth: \"30rem\" }}\n        >\n            <article className=\"card-body p-md-5 mx-auto\">\n                <div className=\"d-flex justify-content-between mb-4 mx-0\">\n                    <div className=\"w-50 p-0\">\n                        <img\n                            src=\"/img/profile_pic.png\"\n                            onError={(e) => {\n                                e.target.onerror = null;\n                                e.target.src = \"/img/Default.png\";\n                            }}\n                            alt=\"profile\"\n                            className={\"rounded-circle w-100\" + border}\n                            // className={\"rounded w-100\" + border}\n                        />\n                    </div>\n\n                    <div className=\"text-center my-auto\">\n                        <Link\n                            to=\"/registration\"\n                            className={\"btn btn-outline-\" + type}\n                        >\n                            Sign up\n                        </Link>\n                        <div className=\"my-3 text-center divider-text\">\n                            <span className={\"px-4\" + ui}>OR</span>\n                        </div>\n                        <h5 className=\"card-title\">Sign in</h5>\n                    </div>\n                </div>\n\n                <form ref={form} onSubmit={handleSubmit}>\n                    {status && <CustomAlert status={status} />}\n\n                    <div className={\"form-group input-group rounded\" + border}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text rounded-0\">\n                                <FontAwesomeIcon icon={[\"fas\", \"phone\"]} />\n                            </span>\n                        </div>\n                        {/* <select\n                            className=\"custom-select\"\n                            style={{ maxWidth: \"85px\" }}\n                        >\n                            <option defaultValue=\"\">+880</option>\n                            <option value=\"1\">+972</option>\n                            <option value=\"2\">+198</option>\n                            <option value=\"3\">+701</option>\n                        </select> */}\n                        <input\n                            required\n                            name=\"phone\"\n                            type=\"number\"\n                            placeholder=\"Phone number\"\n                            className=\"form-control rounded-0\"\n                        />\n                    </div>\n\n                    {showVerificationArea ? (\n                        <div\n                            className={\n                                \"form-group input-group rounded\" + border\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text rounded-0\">\n                                    <FontAwesomeIcon icon={[\"fas\", \"code\"]} />\n                                </span>\n                            </div>\n                            <input\n                                required\n                                name=\"code\"\n                                type=\"number\"\n                                placeholder=\"Verification Code\"\n                                className=\"form-control rounded-0\"\n                            />\n                        </div>\n                    ) : (\n                        <div className=\"form-group\">\n                            <input type=\"checkbox\" onClick={handleCheck} />\n                            <label className=\"ml-1\">\n                                Login as a Service Provider\n                            </label>\n                        </div>\n                    )}\n\n                    {showVerificationArea && (\n                        <div className=\"text-center mb-3\">\n                            <small>\n                                A 6 digit verification code has been sent to\n                                this phone number, type it to login into your\n                                account\n                            </small>\n                        </div>\n                    )}\n\n                    <div className=\"form-group\">\n                        <Button type=\"submit\" variant={type} className=\"w-100\">\n                            {showVerificationArea ? (\n                                <>\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"sign-in-alt\"]}\n                                    />\n                                    Login\n                                </>\n                            ) : (\n                                <>\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"code\"]}\n                                    />\n                                    Send Verification Code\n                                </>\n                            )}\n                        </Button>\n                    </div>\n                </form>\n            </article>\n        </div>\n    );\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport Layout from '../components/generic/layout';\nimport LoginForm from '../components/user/loginForm';\n\nconst UserLogin = () => {\n    return (\n        <Layout>\n            <LoginForm />\n        </Layout>\n    );\n}\n \nexport default UserLogin;","import React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { Button } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst SearchBar = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n\n    const handleChange = (e) => {\n        props.handleChange(e);\n    };\n\n    return (\n        <div className=\"my-5\">\n            <div className=\"d-flex\">\n                <input\n                    autoFocus\n                    type=\"text\"\n                    onChange={handleChange}\n                    placeholder={props.placeholder}\n                    style={{ borderBottom: \"2px solid \" + mainColor }}\n                    className={\n                        \"transparent__input mr-3 pl-2 text-danger\" + custom_text\n                    }\n                />\n\n                <Button variant={type}>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-sm-2\"\n                        icon={[\"fas\", \"search\"]}\n                    />\n                    <span className=\"d-none d-sm-inline\">Search</span>\n                </Button>\n            </div>\n\n            <div className={\"text-center mt-3\" + syntax}>\n                <small>{props.searchBy}</small>\n            </div>\n        </div>\n    );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Table } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst CustomTable = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const variant = isLightTheme ? \"light\" : \"dark\";\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    return (\n        <div className={\"shadow rounded\" + border}>\n            <Table striped responsive=\"sm\" className=\"mb-0\" variant={variant}>\n                <thead>\n                    <tr>\n                        {props.ths.map((th) => (\n                            <th\n                                scope=\"col\"\n                                key={uuidv4()}\n                                className={\n                                    \"text-center align-middle \" + th.className\n                                }\n                            >\n                                {th.value}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.datas &&\n                        props.datas.map((data, index) => (\n                            <tr key={uuidv4()}>\n                                {props.index && (\n                                    <td className=\"text-center align-middle\">\n                                        {index + 1}\n                                    </td>\n                                )}\n\n                                {props.PreActionComponents &&\n                                    props.PreActionComponents.map(\n                                        (PreActionComponent) => (\n                                            <td\n                                                key={uuidv4()}\n                                                className={\n                                                    \"text-center align-middle \" +\n                                                    PreActionComponent.className\n                                                }\n                                            >\n                                                {PreActionComponent.component(\n                                                    data\n                                                )}\n                                            </td>\n                                        )\n                                    )}\n\n                                {/* Filter data[key] by the props.allowedEntry array */}\n                                {props.allowedEntry\n                                    ? Object.keys(\n                                          Object.keys(data)\n                                              .filter((key) =>\n                                                  props.allowedEntry.includes(\n                                                      key\n                                                  )\n                                              )\n                                              .reduce((obj, key) => {\n                                                  obj[key] = data[key];\n                                                  return obj;\n                                              }, {})\n                                      ).map((key, i) => (\n                                          <td\n                                              key={uuidv4()}\n                                              className={\n                                                  props.tdsClassName\n                                                      ? \"text-center align-middle \" +\n                                                        props.tdsClassName[i]\n                                                      : \"text-center align-middle\"\n                                              }\n                                          >\n                                              {data[key] ? data[key] : \"-----\"}\n                                          </td>\n                                      ))\n                                    : Object.keys(data).map((key, i) => (\n                                          <td\n                                              key={uuidv4()}\n                                              className={\n                                                  props.tdsClassName\n                                                      ? \"text-center align-middle \" +\n                                                        props.tdsClassName[i]\n                                                      : \"text-center align-middle\"\n                                              }\n                                          >\n                                              {data[key]}\n                                          </td>\n                                      ))}\n\n                                {props.ActionComponents &&\n                                    props.ActionComponents.map(\n                                        (ActionComponent) => (\n                                            <td\n                                                key={uuidv4()}\n                                                className={\n                                                    \"text-center align-middle \" +\n                                                    ActionComponent.className\n                                                }\n                                            >\n                                                {ActionComponent.component(\n                                                    data\n                                                )}\n                                            </td>\n                                        )\n                                    )}\n                            </tr>\n                        ))}\n                </tbody>\n            </Table>\n        </div>\n    );\n};\n\nexport default CustomTable;\n","import React, { useState, useContext } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst EmployeeDropDown = (props) => {\n    const [title, setTitle] = useState(props.title);\n\n    const handleSelect = (e, value) => {\n        setTitle(value);\n        // console.log(e, \"Needs name here\", value);\n        const tmp = { id: e, name: value };\n        // props.handleSelect(e);\n        props.handleSelect(tmp);\n    };\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const dropdown_text = isLightTheme\n        ? theme.light.dropdown_text\n        : theme.dark.dropdown_text;\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle\n                size={props.size}\n                disabled={props.status && props.status}\n                variant={props.type ? props.type : type}\n                className={\n                    props.customClass && props.customClass + \" text-wrap\"\n                }\n            >\n                {title}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className={\"text-center w-100 shadow\" + ui + border}>\n                {props.values.map((value) => (\n                    <Dropdown.Item\n                        eventKey={\n                            props.subElementKey\n                                ? value[props.subElementKey]\n                                : value\n                        }\n                        key={uuidv4()}\n                        onSelect={(e) =>\n                            handleSelect(\n                                e,\n                                props.subElementValue &&\n                                    value[props.subElementValue]\n                            )\n                        }\n                        className={\"text-wrap\" + syntax + dropdown_text}\n                    >\n                        {props.subElementValue\n                            ? value[props.subElementValue]\n                            : value}\n                    </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default EmployeeDropDown;\n","import { useHistory } from \"react-router-dom\";\nimport { Alert, Modal, Spinner } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\n\nconst CustomModalAlert = (props) => {\n    const timeoutTime = 1500;\n    const history = useHistory();\n    const [show] = useState(true);\n\n    const { setStatus, redirect, updateFlag } = props;\n\n    const { isAnimated } = useContext(SettingsContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const bg = isLightTheme ? theme.light.bg : theme.dark.bg;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleClose = useCallback(() => {\n        setStatus(undefined);\n        // setShow(false); gives this error -> \"Can't perform a React state update on an unmounted component.\"\n        redirect && history.push(redirect);\n        updateFlag && updateFlag();\n    }, [setStatus, history, redirect, updateFlag]);\n\n    useEffect(() => {\n        setTimeout(handleClose, timeoutTime);\n    }, [handleClose]);\n\n    return (\n        <Modal\n            centered\n            size=\"md\"\n            show={show}\n            onHide={handleClose}\n            animation={isAnimated}\n            className=\"text-center\"\n            style={{ background: bg }}\n        >\n            <div className={\"rounded\" + syntax + border + ui}>\n                <Modal.Body>\n                    <Alert\n                        className={\"m-0 \" + props.alertClass}\n                        variant={props.variant ? props.variant : \"danger\"}\n                    >\n                        <div className=\"mb-3\">\n                            <FontAwesomeIcon\n                                style={{ fontSize: \"4rem\" }}\n                                icon={[\n                                    \"fas\",\n                                    props.variant === \"success\"\n                                        ? \"check-circle\"\n                                        : \"times-circle\",\n                                ]}\n                            />\n                        </div>\n\n                        {props.status}\n\n                        {redirect && (\n                            <div className=\"mt-2\">\n                                <Spinner\n                                    size=\"sm\"\n                                    animation=\"border\"\n                                    className=\"mb-1\"\n                                />\n\n                                <span className=\"ml-2\">Redirecting...</span>\n                            </div>\n                        )}\n                    </Alert>\n                </Modal.Body>\n            </div>\n        </Modal>\n    );\n};\n\nexport default CustomModalAlert;\n","import React, { useContext, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Button, Modal, Col } from \"react-bootstrap\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst CustomModal = (props) => {\n    const { isAnimated } = useContext(SettingsContext);\n    const [show, setShow] = useState(props.show ? props.show : false);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    // const variant = isLightTheme ? \"light\" : \"dark\";\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    // const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const secondary = isLightTheme\n        ? theme.light.secondary\n        : theme.dark.secondary;\n    // const custom_text = isLightTheme\n    //     ? theme.light.custom_text\n    //     : theme.dark.custom_text;\n\n    const handleClose = () => {\n        setShow(false);\n        props.handleCloseAction && props.handleCloseAction();\n    };\n\n    const handleShow = () => setShow(true);\n    const handleAction = () => {\n        props.redirect && props.history.push(props.redirect);\n        // handleClose();\n        props.handleAction();\n        props.updateFlag && props.updateFlag();\n    };\n\n    return (\n        <>\n            {!props.noAction && (\n                <button\n                    onClick={handleShow}\n                    disabled={props.edit}\n                    style={props.modalButtonStyle}\n                    className={props.modalButtonClass}\n                >\n                    {props.children}\n                </button>\n            )}\n\n            <Modal\n                centered\n                show={show}\n                size={props.size}\n                onHide={handleClose}\n                animation={isAnimated}\n                className={props.modalClass}\n            >\n                <div className={\"rounded\" + syntax + border + ui}>\n                    <Modal.Body>\n                        <div className=\"mb-3\">\n                            {props.size === \"sm\" ? (\n                                props.modalTitle\n                            ) : (\n                                <Modal.Title>{props.modalTitle}</Modal.Title>\n                            )}\n                        </div>\n\n                        {props.modalBody}\n\n                        {!props.noAction ? (\n                            <div className=\"d-flex mt-4\">\n                                <Col className=\"pl-0\">\n                                    <Button\n                                        className=\"w-100\"\n                                        variant={secondary}\n                                        onClick={handleClose}\n                                    >\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"times\"]}\n                                            className=\"mr-2\"\n                                        />\n                                        Close\n                                    </Button>\n                                </Col>\n\n                                <Col className=\"p-0\">\n                                    <Button\n                                        className=\"w-100\"\n                                        onClick={handleAction}\n                                        variant={props.actionVariant}\n                                    >\n                                        {props.actionButtonBody}\n                                    </Button>\n                                </Col>\n                            </div>\n                        ) : (\n                            <div className=\"mt-4\">\n                                <Button\n                                    className=\"w-100\"\n                                    variant={secondary}\n                                    onClick={handleClose}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={[\"fas\", \"times\"]}\n                                        className=\"mr-2\"\n                                    />\n                                    Close\n                                </Button>\n                            </div>\n                        )}\n                    </Modal.Body>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default withRouter(CustomModal);\n","import React from \"react\";\nimport CustomModal from \"./CustomModal\";\nimport { withRouter } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst DeleteModal = (props) => {\n    const handleAction = () => {\n        props.redirect && props.history.push(props.redirect);\n        props.handleAction();\n        props.updateFlag && props.updateFlag();\n    };\n\n    return (\n        <CustomModal\n            modalTitle={props.deleteTitle ? props.deleteTitle : \"Delete\"}\n            actionVariant=\"danger\"\n            handleAction={handleAction}\n            modalBody={props.modalBody}\n            modalButtonClass=\"btn btn-sm btn-danger\"\n            actionButtonBody={\n                <>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"trash-alt\"]}\n                    />\n                    {props.deleteText ? props.deleteText : \"Delete\"}\n                </>\n            }\n        >\n            <FontAwesomeIcon\n                className={props.deleteText ? \"fa-icon mr-1\" : \"fa-icon\"}\n                icon={[\n                    \"fas\",\n                    props.deleteIcon ? props.deleteIcon : \"trash-alt\",\n                ]}\n            />\n            {props.deleteText && props.deleteText}\n        </CustomModal>\n    );\n};\n\nexport default withRouter(DeleteModal);\n","import Moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport { AppBar, Tabs, Tab, Box } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Infobar from \"../generic/infobar\";\nimport SearchBar from \"../generic/SearchBar\";\nimport CustomTable from \"../generic/CustomTable\";\nimport EmployeeDropDown from \"../employees/EmployeeDropDown\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport DeleteModal from \"../generic/DeleteModal\";\n\nconst Order = (props) => {\n    const [value, setValue] = useState(0);\n    const [flag, setFlag] = useState(true);\n    const [orders, setOrders] = useState([]);\n    const [employes, setEmployes] = useState([]);\n    const [status, setStatus] = useState(undefined);\n    const [searchData, setSearchData] = useState(\"\");\n    const [tabs] = useState([\"Not Assigned\", \"Assigned\"]);\n    const [assignedOrders, setAssignedOrders] = useState([]);\n    const [statusVariant, setStatusVariant] = useState(undefined);\n    const [selectedEmployeeID, setSelectedEmployeeID] = useState({}); // {27: 17, 28: 2, 32: 28.........}\n    const [selectedEmployeeName, setSelectedEmployeeName] = useState({}); // {27: \"Toha\", 28: \"Dhruvo\", 32: \"lkbnefj\".........}\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const success = isLightTheme ? theme.light.success : theme.dark.success;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        let API_URL = \"/getserviceorders/\";\n\n        const loadData = async () => {\n            let bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            let response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            let data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else setOrders(data.details);\n\n            // Get employee's list\n            API_URL = \"/getEmployee/\";\n\n            bodyData = {\n                search_data: searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else setEmployes(data.employee);\n\n            // Get assigned employee\n            API_URL = \"/getassignedserviceorders/\";\n\n            bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else setAssignedOrders(data.details);\n        };\n        loadData();\n    }, [flag, searchData]);\n\n    const handleOrderComplete = (order_id) => {\n        const API_URL = \"/completeserviceorder/\";\n\n        const loadData = async () => {\n            const orderID = {\n                order_id: order_id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(orderID),\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                // !alert(\n                //     `Order Id: ${order_id} has been completed successfully`\n                // ) && setFlag(!flag);\n                setFlag(!flag);\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatusVariant(\"danger\");\n                setStatus(data.message);\n            }\n        };\n        loadData();\n    };\n\n    const handleAssignComplete = (order_id) => {\n        const API_URL = \"/assignEmployee/\";\n\n        const loadData = async () => {\n            const body = {\n                order_id: order_id,\n                employee_id: selectedEmployeeID[order_id],\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(body),\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                // !alert(\n                //     `Employee ${selectedEmployeeName[order_id]} has been assigned successfully for Order Id: ${order_id}`\n                // ) && setFlag(!flag);\n                setFlag(!flag);\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatusVariant(\"danger\");\n                setStatus(data.message);\n            }\n        };\n        loadData();\n    };\n\n    const handleEmployeeSelect = (e, id) => {\n        setSelectedEmployeeID({ ...selectedEmployeeID, [id]: e.id });\n        setSelectedEmployeeName({ ...selectedEmployeeName, [id]: e.name });\n    };\n\n    const handleCancel = async (order_id) => {\n        const API_URL = \"/cancel/service/order/\";\n\n        const bodyData = {\n            order_id: order_id,\n            userid: localStorage.getItem(\"userID\"),\n        };\n\n        const response = await fetch(API_URL, {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(bodyData),\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n            setStatusVariant(\"success\");\n            setStatus(data.message);\n        } else {\n            setStatusVariant(\"danger\");\n            setStatus(data.message);\n        }\n    };\n\n    const handleSearchChange = (e) => setSearchData(e.target.value);\n\n    // Tab related settings.....\n    const TabPanel = (props) => {\n        const { children, value, index, ...other } = props;\n\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`scrollable-auto-tabpanel-${index}`}\n                aria-labelledby={`scrollable-auto-tab-${index}`}\n                {...other}\n            >\n                {value === index && <Box>{children}</Box>}\n            </div>\n        );\n    };\n\n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n\n    const a11yProps = (index) => {\n        return {\n            id: `scrollable-auto-tab-${index}`,\n            \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n        };\n    };\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Order ID\" },\n            { className: \"\", value: \"Customer Name\" },\n            { className: \"\", value: \"Customer Phone\" },\n            { className: \"\", value: \"Address\" },\n            {\n                className: \"\",\n                value: \"Further Description\",\n            },\n            { className: \"\", value: \"Payment\" },\n            { className: \"\", value: \"Time\" },\n            {\n                className: \"\",\n                value: \"Employee\",\n                // value: index === 0 ? \"Select Employee\" : \"Employee\",\n            },\n            { className: \"\", value: \"Action\" },\n            { className: \"\", value: \"Cancel\" },\n        ],\n        tdsClassName: [\"\", \"\", \"text-break\", \"\"],\n        allowedEntry: [\n            \"customer_name\",\n            \"customer_phone\",\n            \"address\",\n            \"further_description\",\n        ],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>Your Orders</h4>\n\n            <SearchBar\n                handleChange={handleSearchChange}\n                placeholder=\"Search orders....\"\n                searchBy={<>Search by anything exept time and cancelled by</>}\n            />\n\n            <AppBar position=\"static\" className={\"rounded\" + ui}>\n                <Tabs\n                    value={value}\n                    variant=\"fullWidth\"\n                    className={custom_text}\n                    onChange={handleChange}\n                    TabIndicatorProps={{ style: { background: mainColor } }}\n                >\n                    {tabs.map((tab) => (\n                        <Tab\n                            label={tab}\n                            key={uuidv4()}\n                            {...a11yProps(uuidv4())}\n                            style={{ textTransform: \"none\" }}\n                        />\n                    ))}\n                </Tabs>\n            </AppBar>\n\n            {tabs.map((tab, index) => (\n                <TabPanel\n                    key={uuidv4()}\n                    value={value}\n                    index={index}\n                    className=\"pt-4\"\n                >\n                    {status && (\n                        <CustomModalAlert\n                            status={status}\n                            setStatus={setStatus}\n                            variant={statusVariant}\n                        />\n                    )}\n\n                    {(index === 0 ? orders : assignedOrders) ? (\n                        <CustomTable\n                            ths={tableData.ths}\n                            allowedEntry={tableData.allowedEntry}\n                            PreActionComponents={[\n                                {\n                                    component: (order) => (\n                                        <Link\n                                            to={`/order/details/${order.order_id}/`}\n                                        >\n                                            {order.order_id}\n                                        </Link>\n                                    ),\n                                    className: link,\n                                },\n                            ]}\n                            tdsClassName={tableData.tdsClassName}\n                            datas={index === 0 ? orders : assignedOrders}\n                            ActionComponents={[\n                                {\n                                    component: (order) => (\n                                        <>\n                                            <span className=\"font-weight-bold\">\n                                                ৳{\" \"}\n                                            </span>\n                                            {order.payment}\n                                        </>\n                                    ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) =>\n                                        Moment(order.time).format(\n                                            \"DD/MM/YY hh:mmA\"\n                                        ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) =>\n                                        index === 0 ? (\n                                            <EmployeeDropDown\n                                                size=\"sm\"\n                                                type={\n                                                    selectedEmployeeName[\n                                                        order.order_id\n                                                    ]\n                                                        ? type\n                                                        : \"outline-\" + type\n                                                }\n                                                subElementKey=\"employee_id\"\n                                                subElementValue=\"employee_name\"\n                                                values={\n                                                    employes ? employes : []\n                                                }\n                                                title={\n                                                    selectedEmployeeName[\n                                                        order.order_id\n                                                    ]\n                                                        ? selectedEmployeeName[\n                                                              order.order_id\n                                                          ]\n                                                        : \"Assign\"\n                                                }\n                                                handleSelect={(e) =>\n                                                    handleEmployeeSelect(\n                                                        e,\n                                                        order.order_id\n                                                    )\n                                                }\n                                            />\n                                        ) : (\n                                            order.employee\n                                        ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) => (\n                                        <Button\n                                            size=\"sm\"\n                                            variant={success}\n                                            disabled={\n                                                selectedEmployeeName[\n                                                    order.order_id\n                                                ]\n                                                    ? false\n                                                    : index === 0\n                                            }\n                                            onClick={() =>\n                                                index === 0\n                                                    ? handleAssignComplete(\n                                                          order.order_id\n                                                      )\n                                                    : handleOrderComplete(\n                                                          order.order_id\n                                                      )\n                                            }\n                                        >\n                                            {index === 0 ? (\n                                                <FontAwesomeIcon\n                                                    icon={[\"fas\", \"user-check\"]}\n                                                />\n                                            ) : (\n                                                <FontAwesomeIcon\n                                                    icon={[\"fas\", \"check\"]}\n                                                />\n                                            )}\n                                        </Button>\n                                    ),\n                                    className: \"\",\n                                },\n                                {\n                                    component: (order) => (\n                                        <DeleteModal\n                                            // deleteText=\"Cancel\"\n                                            deleteTitle=\"Cancel Order\"\n                                            updateFlag={() => setFlag(!flag)}\n                                            handleAction={() =>\n                                                handleCancel(order.order_id)\n                                            }\n                                            deleteIcon=\"ban\"\n                                            modalBody={\n                                                <>\n                                                    Do you really want to cancel\n                                                    this order?{\" \"}\n                                                    <span\n                                                        className={\n                                                            dangerTextColor\n                                                        }\n                                                    >\n                                                        Caution: This action\n                                                        cannot be undone\n                                                    </span>\n                                                </>\n                                            }\n                                        />\n                                    ),\n                                    className: \"\",\n                                },\n                            ]}\n                        />\n                    ) : index === 0 ? (\n                        <Infobar>\n                            You have no orders to show {emoji(\"🥲\")}\n                        </Infobar>\n                    ) : (\n                        <Infobar>\n                            You haven't assigned any orders yet! {emoji(\"🙁\")}\n                        </Infobar>\n                    )}\n                </TabPanel>\n            ))}\n        </>\n    );\n};\n\nexport default Order;\n","import React from \"react\";\n\nimport Order from \"../components/orders/Order\";\nimport Layout from \"../components/generic/layout\";\n\nconst OrderPage = () => {\n    return (\n        <Layout>\n            <Order />\n        </Layout>\n    );\n};\n\nexport default OrderPage;\n","import React, { useContext, useState } from \"react\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport DeleteModal from \"../generic/DeleteModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst RemoveArea = (props) => {\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const handleRemoveArea = () => {\n        const API_URL = \"/removearea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                area_id: props.area.area_id,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setStatus(data.message);\n                    setStatusVariant(\"success\");\n                    window.location.reload();\n                } else setStatus(data.message);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                />\n            )}\n\n            <DeleteModal\n                deleteText={\"Remove Area\"}\n                handleAction={handleRemoveArea}\n                modalBody={\n                    <>\n                        Do you really want to remove Area:{\" \"}\n                        <span className={custom_text}>\n                            {props.area.area_name}\n                        </span>{\" \"}\n                        from your service area?\n                    </>\n                }\n            />\n        </>\n    );\n};\n\nexport default RemoveArea;\n","import React, { useContext, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport CustomModalAlert from \"./CustomModalAlert\";\nimport Infobar from \"./infobar\";\n\nconst CustomCard = (props) => {\n    const { cardBodyData, values, noValueInfo, status, setStatus } = props;\n\n    const [statusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    return (\n        <>\n            {values && values.length > 0 ? (\n                <div className=\"row\">\n                    {status && (\n                        <CustomModalAlert\n                            status={status}\n                            setStatus={setStatus}\n                            variant={statusVariant}\n                        />\n                    )}\n\n                    {values.map((value) => (\n                        <div\n                            key={uuidv4()}\n                            className=\"col-lg-3 col-md-4 col-sm-6 mb-4 text-center\"\n                        >\n                            <Card className={\"shadow\" + ui + border}>\n                                <Card.Body className={syntax}>\n                                    {cardBodyData(value)}\n                                </Card.Body>\n                            </Card>\n                        </div>\n                    ))}\n                </div>\n            ) : (\n                <Infobar>{noValueInfo}</Infobar>\n            )}\n        </>\n    );\n};\n\nexport default CustomCard;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport emoji from \"react-easy-emoji\";\n\nimport Title from \"../generic/title\";\nimport RemoveArea from \"./RemoveArea\";\nimport CustomCard from \"../generic/CustomCard\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst ServiceAreas = (props) => {\n    const [status, setStatus] = useState(undefined);\n    const [serviceAreas, setServiceAreas] = useState([]);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    useEffect(() => {\n        const API_URL = \"/showarea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                search_data: props.searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setServiceAreas(data.Areas);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [props.searchData]);\n\n    return (\n        <CustomCard\n            status={status}\n            setStatus={setStatus}\n            values={serviceAreas}\n            cardBodyData={(serviceArea) => (\n                <>\n                    <Card.Title>{serviceArea.area_name}</Card.Title>\n\n                    <div>\n                        <Title>Thana: </Title> {serviceArea.thana}\n                        <br />\n                        <Title>Upazilla: </Title> {serviceArea.upazilla}\n                        <br />\n                        <Title>District: </Title> {serviceArea.district}\n                        <div className={\"py-2\" + link}>\n                            <a\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                className={custom_text}\n                                href={`http://www.google.com/maps/place/${serviceArea.lati},${serviceArea.longi}`}\n                            >\n                                Open in Google Map\n                            </a>\n                        </div>\n                    </div>\n\n                    <div className=\"mt-2\">\n                        <RemoveArea area={serviceArea} />\n                    </div>\n                </>\n            )}\n            noValueInfo={\n                <>\n                    Currently you don't provide your service to any area{\" \"}\n                    {emoji(\"☹\")}\n                </>\n            }\n        />\n    );\n};\n\nexport default ServiceAreas;\n","import React, { useContext, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModal from \"../generic/CustomModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst AddArea = (props) => {\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const btnTypeClass = isLightTheme\n        ? theme.light.btnTypeClass\n        : theme.dark.btnTypeClass;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const handleAddArea = () => {\n        const API_URL = \"/addArea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                area_id: props.area.area_id,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setStatus(data.message);\n                    setStatusVariant(\"success\");\n                    window.location.reload();\n                } else setStatus(data.message);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                />\n            )}\n\n            <CustomModal\n                actionVariant={type}\n                modalTitle=\"Add Product\"\n                handleAction={handleAddArea}\n                modalBody={\n                    <>\n                        Do you really want to add Area:{\" \"}\n                        <span className={custom_text}>\n                            {props.area.area_name}\n                        </span>{\" \"}\n                        as your service area?\n                    </>\n                }\n                modalButtonClass={\"btn btn-sm\" + btnTypeClass}\n                actionButtonBody={\n                    <>\n                        <FontAwesomeIcon\n                            className=\"fa-icon mr-2\"\n                            icon={[\"fas\", \"plus\"]}\n                        />\n                        Add\n                    </>\n                }\n            >\n                <FontAwesomeIcon\n                    className=\"fa-icon mr-2\"\n                    icon={[\"fas\", \"warehouse\"]}\n                />\n                Add to Service Area\n            </CustomModal>\n        </>\n    );\n};\n\nexport default AddArea;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport emoji from \"react-easy-emoji\";\n\nimport AddArea from \"./AddArea\";\nimport Title from \"../generic/title\";\nimport CustomCard from \"../generic/CustomCard\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst AvailableAreas = (props) => {\n    const [status, setStatus] = useState(undefined);\n    const [availableAreas, setAvailableAreas] = useState([]);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    useEffect(() => {\n        const API_URL = \"/availablearea/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                search_data: props.searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setAvailableAreas(data.Areas);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [props.searchData]);\n\n    return (\n        <CustomCard\n            status={status}\n            setStatus={setStatus}\n            values={availableAreas}\n            cardBodyData={(availableArea) => (\n                <>\n                    <Card.Title>{availableArea.area_name}</Card.Title>\n\n                    <div>\n                        <Title>Thana: </Title> {availableArea.thana}\n                        <br />\n                        <Title>Upazilla: </Title> {availableArea.upazilla}\n                        <br />\n                        <Title>District: </Title> {availableArea.district}\n                        <div className={\"py-2\" + link}>\n                            <a\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                className={custom_text}\n                                href={`http://www.google.com/maps/place/${availableArea.lati},${availableArea.longi}`}\n                            >\n                                Open in Google Map\n                            </a>\n                        </div>\n                    </div>\n\n                    <div className=\"mt-2\">\n                        <AddArea area={availableArea} />\n                    </div>\n                </>\n            )}\n            noValueInfo={\n                <>No new areas to show to add to your area {emoji(\"☹\")}</>\n            }\n        />\n    );\n};\n\nexport default AvailableAreas;\n","import React, { useContext, useState } from \"react\";\nimport emoji from \"react-easy-emoji\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport ProvidedAreas from \"./ServiceAreas\";\nimport SearchBar from \"../generic/SearchBar\";\nimport AvailableAreas from \"./AvailableAreas\";\n\nconst Areas = (props) => {\n    const [searchData, setSearchData] = useState(\"\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    return (\n        <div className={\"text-center\" + syntax}>\n            <h4 className={\"mb-5 text-center\" + syntax}>\n                Add your service area\n            </h4>\n\n            <SearchBar\n                handleChange={handleChange}\n                placeholder=\"Search areas....\"\n                searchBy={<>Search areas by anything {emoji(\"😄\")}</>}\n            />\n\n            <h4 className={\"mb-5 text-center\" + syntax}>Your Service Areas</h4>\n\n            <div className=\"my-4\">\n                <ProvidedAreas searchData={searchData} />\n            </div>\n\n            <h4 className={\"my-5 text-center\" + syntax}>Available Areas</h4>\n\n            <div className=\"my-4\">\n                <AvailableAreas searchData={searchData} />\n            </div>\n        </div>\n    );\n};\n\nexport default Areas;\n","import React from \"react\";\n\nimport Areas from \"../components/areas/Areas\";\nimport Layout from \"../components/generic/layout\";\n\nconst Home = () => {\n    return (\n        <Layout>\n            <Areas />\n        </Layout>\n    );\n};\n\nexport default Home;\n","import Moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { AppBar, Tabs, Tab, Box } from \"@material-ui/core\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Infobar from \"../generic/infobar\";\nimport SearchBar from \"../generic/SearchBar\";\nimport CustomTable from \"../generic/CustomTable\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport DeleteModal from \"../generic/DeleteModal\";\n\nconst History = (props) => {\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    const [value, setValue] = useState(0);\n    const [flag, setFlag] = useState(true);\n    const [status, setStatus] = useState(undefined);\n    const [searchData, setSearchData] = useState(\"\");\n    const [activeHistories, setActiveHistories] = useState([]);\n    const [statusVariant, setStatusVariant] = useState(undefined);\n    const [deliveredHistories, setDeliveredHistories] = useState([]);\n    const [cancelledHistories, setCancelledHistories] = useState([]);\n    const [tabs] = useState(\n        isServiceProvider\n            ? [\"Cancelled Orders\", \"Delivered Orders\"]\n            : [\"Active Orders\", \"Cancelled Orders\", \"Delivered Orders\"]\n    );\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        // Delivered Orders\n        let API_URL = isServiceProvider\n            ? \"/getserviceorderhistory/\"\n            : \"/orders/history/delivered/\";\n\n        const loadData = async () => {\n            let bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            let response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            let data = await response.json();\n            setDeliveredHistories(data.details);\n            // console.log(data.details);\n\n            // Active Orders\n            API_URL = \"/orders/history/active/\";\n\n            bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n            setActiveHistories(data.details);\n            // console.log(data.details);\n\n            // Cancelled Orders\n            API_URL = isServiceProvider\n                ? \"/getServiceCancelledOrderHistory/\"\n                : \"/orders/history/cancelled/\";\n\n            bodyData = {\n                search_data: searchData,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            data = await response.json();\n            setCancelledHistories(data.details);\n            // console.log(data.details);\n        };\n        loadData();\n    }, [isServiceProvider, searchData, flag]);\n\n    const handleCancel = async (order_id) => {\n        const API_URL = \"/order/cancel/\";\n\n        const bodyData = {\n            order_id: order_id,\n            userid: localStorage.getItem(\"userID\"),\n        };\n\n        const response = await fetch(API_URL, {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(bodyData),\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n            setStatusVariant(\"success\");\n            setStatus(data.message);\n        } else {\n            setStatusVariant(\"danger\");\n            setStatus(data.message);\n        }\n    };\n\n    const handleChange = (e) => setSearchData(e.target.value);\n    const updateFlag = () => setFlag(!flag);\n\n    // Tab related settings.....\n    const TabPanel = (props) => {\n        const { children, value, index, ...other } = props;\n\n        return (\n            <div\n                role=\"tabpanel\"\n                hidden={value !== index}\n                id={`scrollable-auto-tabpanel-${index}`}\n                aria-labelledby={`scrollable-auto-tab-${index}`}\n                {...other}\n            >\n                {value === index && <Box>{children}</Box>}\n            </div>\n        );\n    };\n\n    TabPanel.propTypes = {\n        children: PropTypes.node,\n        index: PropTypes.any.isRequired,\n        value: PropTypes.any.isRequired,\n    };\n\n    const a11yProps = (index) => {\n        return {\n            id: `scrollable-auto-tab-${index}`,\n            \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n        };\n    };\n\n    const handleTabChange = (event, newValue) => setValue(newValue);\n\n    const tableData = {\n        activeThs: [\n            { className: \"\", value: \"Order ID\" },\n            { className: \"\", value: \"Phone\" },\n            { className: \"\", value: \"Address\" },\n            { className: \"\", value: \"Further Description\" },\n            { className: \"\", value: \"Payment\" },\n            { className: \"\", value: \"Time\" },\n            { className: \"\", value: \"Cancel\" },\n        ],\n        cancelledThs: isServiceProvider\n            ? [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Customer Name\" },\n                  { className: \"\", value: \"Phone\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n                  { className: \"\", value: \"Cancelled By\" },\n              ]\n            : [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Phone\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n                  { className: \"\", value: \"Cancelled By\" },\n              ],\n        deliveredThs: isServiceProvider\n            ? [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Customer Name\" },\n                  { className: \"\", value: \"Phone\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Employee\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n              ]\n            : [\n                  { className: \"\", value: \"Order ID\" },\n                  { className: \"\", value: \"Phone\" },\n                  { className: \"\", value: \"Address\" },\n                  { className: \"\", value: \"Further Description\" },\n                  { className: \"\", value: \"Payment\" },\n                  { className: \"\", value: \"Time\" },\n              ],\n        tdsClassName: isServiceProvider\n            ? [\"\", \"\", \"text-break\", \"\", \"\"]\n            : [\"\", \"text-break\", \"\"],\n        activeAllowedEntry: [\n            \"customer_phone\",\n            \"address\",\n            \"further_description\",\n        ],\n        cancelledAllowedEntry: isServiceProvider\n            ? [\n                  \"customer_name\",\n                  \"customer_phone\",\n                  \"address\",\n                  \"further_description\",\n              ]\n            : [\"customer_phone\", \"address\", \"further_description\"],\n        deliveredAllowedEntry: isServiceProvider\n            ? [\n                  \"customer_name\",\n                  \"customer_phone\",\n                  \"address\",\n                  \"further_description\",\n                  \"employee\",\n              ]\n            : [\"customer_phone\", \"address\", \"further_description\"],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>Order History</h4>\n\n            <SearchBar\n                handleChange={handleChange}\n                placeholder=\"Search histories....\"\n                searchBy={<>Search by anything exept time and cancelled by</>}\n            />\n\n            <AppBar position=\"static\" className={\"rounded\" + ui}>\n                <Tabs\n                    value={value}\n                    variant=\"fullWidth\"\n                    className={custom_text}\n                    onChange={handleTabChange}\n                    TabIndicatorProps={{ style: { background: mainColor } }}\n                >\n                    {tabs.map((tab) => (\n                        <Tab\n                            label={tab}\n                            key={uuidv4()}\n                            {...a11yProps(uuidv4())}\n                            style={{ textTransform: \"none\" }}\n                        />\n                    ))}\n                </Tabs>\n            </AppBar>\n\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                />\n            )}\n\n            {tabs.map((tab, index) => (\n                <TabPanel\n                    key={uuidv4()}\n                    value={value}\n                    index={index}\n                    className=\"pt-4\"\n                >\n                    {(\n                        tab === \"Active Orders\"\n                            ? activeHistories\n                            : tab === \"Cancelled Orders\"\n                            ? cancelledHistories\n                            : deliveredHistories\n                    ) ? (\n                        <CustomTable\n                            ths={\n                                tab === \"Active Orders\"\n                                    ? tableData.activeThs\n                                    : tab === \"Cancelled Orders\"\n                                    ? tableData.cancelledThs\n                                    : tableData.deliveredThs\n                            }\n                            allowedEntry={\n                                tab === \"Active Orders\"\n                                    ? tableData.activeAllowedEntry\n                                    : tab === \"Cancelled Orders\"\n                                    ? tableData.cancelledAllowedEntry\n                                    : tableData.deliveredAllowedEntry\n                            }\n                            PreActionComponents={[\n                                {\n                                    component: (history) => (\n                                        <Link\n                                            to={`/order/details/${history.order_id}/`}\n                                        >\n                                            {history.order_id}\n                                        </Link>\n                                    ),\n                                    className: link,\n                                },\n                            ]}\n                            datas={\n                                tab === \"Active Orders\"\n                                    ? activeHistories\n                                    : tab === \"Cancelled Orders\"\n                                    ? cancelledHistories\n                                    : deliveredHistories\n                            }\n                            tdsClassName={tableData.tdsClassName}\n                            ActionComponents={\n                                tab === \"Active Orders\"\n                                    ? [\n                                          {\n                                              component: (history) => (\n                                                  <>\n                                                      <span className=\"font-weight-bold\">\n                                                          ৳{\" \"}\n                                                      </span>\n                                                      {history.payment}\n                                                  </>\n                                              ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) =>\n                                                  Moment(history.time).format(\n                                                      \"DD/MM/YY hh:mmA\"\n                                                  ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) => (\n                                                  <DeleteModal\n                                                      // deleteText=\"Cancel\"\n                                                      deleteTitle=\"Cancel Order\"\n                                                      updateFlag={updateFlag}\n                                                      handleAction={() =>\n                                                          handleCancel(\n                                                              history.order_id\n                                                          )\n                                                      }\n                                                      deleteIcon=\"ban\"\n                                                      modalBody={\n                                                          <>\n                                                              Do you really want\n                                                              to cancel this\n                                                              order?{\" \"}\n                                                              <span\n                                                                  className={\n                                                                      dangerTextColor\n                                                                  }\n                                                              >\n                                                                  Caution: This\n                                                                  action cannot\n                                                                  be undone\n                                                              </span>\n                                                          </>\n                                                      }\n                                                  />\n                                              ),\n                                              className: \"\",\n                                          },\n                                      ]\n                                    : tab === \"Cancelled Orders\"\n                                    ? [\n                                          {\n                                              component: (history) => (\n                                                  <>\n                                                      <span className=\"font-weight-bold\">\n                                                          ৳{\" \"}\n                                                      </span>\n                                                      {history.payment}\n                                                  </>\n                                              ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) =>\n                                                  Moment(history.time).format(\n                                                      \"DD/MM/YY hh:mmA\"\n                                                  ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) => (\n                                                  <span\n                                                      className={\n                                                          dangerTextColor\n                                                      }\n                                                  >\n                                                      {history.reason}\n                                                  </span>\n                                              ),\n                                              className: \"\",\n                                          },\n                                      ]\n                                    : [\n                                          {\n                                              component: (history) => (\n                                                  <>\n                                                      <span className=\"font-weight-bold\">\n                                                          ৳{\" \"}\n                                                      </span>\n                                                      {history.payment}\n                                                  </>\n                                              ),\n                                              className: \"\",\n                                          },\n                                          {\n                                              component: (history) =>\n                                                  Moment(history.time).format(\n                                                      \"DD/MM/YY hh:mmA\"\n                                                  ),\n                                              className: \"\",\n                                          },\n                                      ]\n                            }\n                        />\n                    ) : tab === \"Active Orders\" ? (\n                        <Infobar>\n                            You currently don't have any active orders{\" \"}\n                            {emoji(\"🥲\")}\n                        </Infobar>\n                    ) : tab === \"Cancelled Orders\" ? (\n                        <Infobar>\n                            You haven't cancelled any orders yet! {emoji(\"😄\")}\n                        </Infobar>\n                    ) : (\n                        <Infobar>\n                            No delivered orders yet! {emoji(\"😅\")}\n                        </Infobar>\n                    )}\n                </TabPanel>\n            ))}\n        </>\n    );\n};\n\nexport default History;\n","import React from \"react\";\nimport Layout from \"../components/generic/layout\";\nimport History from \"../components/user/History\";\n\nconst Home = () => {\n    return (\n        <Layout>\n            <History />\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nexport const CartContext = createContext();\n\nconst CartContextProvider = (props) => {\n    const [items, setItems] = useState([]);\n    const [totalPrice, setTotalPrice] = useState(0);\n    const [subTotalPrice, setSubTotalPrice] = useState(0);\n    const discount = 8;\n\n    // componentDidMount\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"items\");\n        const local = JSON.parse(json);\n\n        if (local) setItems(local);\n    }, []);\n\n    // componentDidUpdate\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"items\");\n        const local = JSON.parse(json);\n\n        if (local !== items)\n            sessionStorage.setItem(\"items\", JSON.stringify(items));\n    }, [items]);\n\n    useEffect(() => {\n        let tmpPrice = 0;\n        items.map((item) => (tmpPrice += item.count * item.price));\n        setSubTotalPrice(tmpPrice);\n        tmpPrice = Math.floor(tmpPrice - tmpPrice * (discount / 100));\n        setTotalPrice(tmpPrice);\n    }, [items]);\n\n    const addItem = (item) => {\n        setItems([...items, item]);\n    };\n\n    const handleAddOne = (id) => {\n        let newItem = items.map((item) => {\n            if (item.id === id) {\n                item.count++;\n                return item;\n            }\n            return item;\n        });\n        setItems([...newItem]);\n    };\n\n    const handleMinusOne = (id) => {\n        let newItem = items.map((item) => {\n            if (item.id === id) {\n                item.count > 1 ? item.count-- : (item.count = 1);\n                return item;\n            }\n            return item;\n        });\n\n        setItems([...newItem]);\n    };\n\n    const postCountUpdate = (id, count) => {\n        let newItem = items.map((item) => {\n            if (item.id === id) {\n                item.count = count;\n                return item;\n            }\n            return item;\n        });\n        setItems([...newItem]);\n    };\n\n    const handleRemove = (id) => {\n        setItems(items.filter((item) => item.id !== id));\n        items.length === 1 && sessionStorage.setItem(\"service_id\", \"\");\n    };\n\n    return (\n        <CartContext.Provider\n            value={{\n                items,\n                addItem,\n                discount,\n                totalPrice,\n                handleRemove,\n                handleAddOne,\n                subTotalPrice,\n                setTotalPrice,\n                handleMinusOne,\n                postCountUpdate,\n            }}\n        >\n            {props.children}\n        </CartContext.Provider>\n    );\n};\n\nexport default CartContextProvider;\n","import React, { useState, useEffect } from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { useContext } from \"react\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst Counter = (props) => {\n    const { items, handleAddOne, handleMinusOne, postCountUpdate } = useContext(\n        CartContext\n    );\n    const [count, setCount] = useState(1);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    useEffect(() => {\n        items.map((item) =>\n            item.id === props.id ? setCount(item.count) : undefined\n        );\n    }, [items, props.id]);\n\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <Icon\n                style={{\n                    fontSize: \"1.125rem\",\n                    color: \"#0275d8\",\n                }}\n                onClick={() => handleAddOne(props.id)}\n                className=\"mt-1\"\n            >\n                add_circle\n            </Icon>\n            <input\n                type=\"number\"\n                value={count}\n                style={{ maxWidth: \"2.5rem\" }}\n                onChange={(e) => setCount(e.target.value)}\n                className={\"show-cart-count mx-1\" + syntax}\n                onBlur={(e) => postCountUpdate(props.id, e.target.value)}\n                onKeyDown={(e) =>\n                    [\"e\", \"E\", \"+\", \"-\", \".\"].includes(e.key) &&\n                    e.preventDefault()\n                }\n            />\n            <Icon\n                style={{\n                    fontSize: \"1.125rem\",\n                    color: \"#d9534f\",\n                }}\n                onClick={() => handleMinusOne(props.id)}\n                className=\"mt-1\"\n            >\n                remove_circle\n            </Icon>\n        </div>\n    );\n};\n\nexport default Counter;\n","import React from \"react\";\nimport Counter from \"../generic/counter\";\nimport { Table, Button } from \"react-bootstrap\";\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { Link } from \"react-router-dom\";\nimport emoji from \"react-easy-emoji\";\nimport Infobar from \"../generic/infobar\";\n\nconst Cart = () => {\n    const {\n        items,\n        discount,\n        totalPrice,\n        handleRemove,\n        subTotalPrice,\n    } = useContext(CartContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const variant = isLightTheme ? \"light\" : \"dark\";\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    return (\n        <div>\n            {items.length > 0 ? (\n                <div>\n                    <section\n                        className={\n                            \"jumbotron text-center p-3 mb-3\" +\n                            ui +\n                            syntax +\n                            border\n                        }\n                    >\n                        <h5 className=\"jumbotron-heading my-auto cart-header\">\n                            Your Cart\n                        </h5>\n                    </section>\n                    <div\n                        // id=\"cart-table\"\n                        className={\"shadow rounded mb-3\" + border}\n                    >\n                        <Table responsive=\"sm\" className=\"mb-0\" striped variant={variant}>\n                            <thead>\n                                <tr>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Product\n                                    </th>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Quantity\n                                    </th>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Price\n                                    </th>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"text-center align-middle\"\n                                    >\n                                        Remove\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {items.map((item) => (\n                                    <tr key={uuidv4()}>\n                                        <td className=\"text-center align-middle\">\n                                            {item.productName}\n                                            <br />({item.qty} {item.unit})\n                                        </td>\n                                        <td className=\"text-center align-middle\">\n                                            <Counter id={item.id} />\n                                        </td>\n                                        <td className=\"text-center align-middle\">\n                                            Tk {item.count * item.price}\n                                        </td>\n                                        <td className=\"text-center align-middle\">\n                                            <button\n                                                onClick={() => {\n                                                    handleRemove(item.id);\n                                                }}\n                                                className=\"btn btn-xs btn-danger\"\n                                            >\n                                                <DeleteTwoToneIcon />\n                                            </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    </div>\n\n                    <div\n                        className={\n                            \"row text-center rounded mx-auto shadow\" +\n                            ui +\n                            border +\n                            custom_text\n                        }\n                    >\n                        <div className=\"col-4 py-2 my-auto\">\n                            <div className=\"amount-label\">Sub Total</div>\n                            <div className=\"amount\">Tk {subTotalPrice}</div>\n                        </div>\n\n                        <div className=\"col-4 py-2 my-auto\">\n                            <div className=\"amount-label\">Discount</div>\n                            <div className=\"amount\">{discount}%</div>\n                        </div>\n\n                        <div className=\"col-4 py-2 my-auto\">\n                            <div className=\"amount-label\">Grand Total</div>\n                            <div className=\"amount\">Tk {totalPrice}</div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"mb-3\">\n                    <Infobar>Your cart is empty {emoji(\"🙁\")}</Infobar>\n                </div>\n            )}\n\n            <div className=\"row mt-3\">\n                <div className=\"col-sm-12 mb-2 col-md-6\">\n                    <Button\n                        variant={\"outline-\" + type}\n                        className=\"w-100\"\n                        as={Link}\n                        to=\"/\"\n                    >\n                        <Icon\n                            style={{\n                                fontSize: \"1.125rem\",\n                            }}\n                            className=\"align-middle mr-2 mb-1\"\n                        >\n                            add_shopping_cart\n                        </Icon>\n                        Continue Shopping\n                    </Button>\n                </div>\n                <div className=\"col-sm-12 col-md-6 mb-2 text-right\">\n                    <Button\n                        to=\"/checkout\"\n                        variant={type}\n                        className=\"w-100\"\n                        disabled={!items.length > 0}\n                        as={items.length > 0 && Link}\n                    >\n                        <Icon\n                            style={{\n                                fontSize: \"1.125rem\",\n                            }}\n                            className=\"align-middle mr-2 mb-1\"\n                        >\n                            check\n                        </Icon>\n                        Checkout\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Cart;\n","import React from 'react';\nimport CartContextProvider from '../contexts/CartContext';\nimport Cart from '../components/shoppingCart/cart';\nimport Layout from '../components/generic/layout';\n\nconst ShoppingCart = () => {\n    return (\n        <Layout>\n            <CartContextProvider>\n                <Cart />\n            </CartContextProvider>\n        </Layout>\n    );\n}\n \nexport default ShoppingCart;","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport emoji from \"react-easy-emoji\";\nimport Infobar from \"../generic/infobar\";\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst Checkout = (props) => {\n    const form = useRef(null);\n    const { items, discount, totalPrice } = useContext(CartContext);\n\n    const [statusVariant] = useState(\"danger\");\n    const [addressess, setAddressess] = useState([]);\n    const [newAddress, setNewAddress] = useState({});\n    const [status, setStatus] = useState(undefined);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const variant = isLightTheme ? \"light\" : \"dark\";\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const success = isLightTheme ? theme.light.success : theme.dark.success;\n\n    useEffect(() => {\n        const loadData = async () => {\n            const API_URL = \"/getCustomerAddress/\";\n\n            const object = {\n                customerId: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            // if (response.status === 401) handleLogOut();\n\n            const data = await response.json();\n\n            if (!response.ok) setStatus(data.detail);\n            else setAddressess(data.address);\n        };\n\n        loadData();\n    }, []);\n\n    const handleSelect = (e) => {\n        let tmp = {};\n        addressess.map(\n            (address) =>\n                address.customer_add_id.toString() === e.target.value &&\n                (tmp = address)\n        );\n        setNewAddress(tmp);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let API_URL = \"/createCustomerAddress/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n            object[\"userid\"] = localStorage.getItem(\"userID\");\n\n            try {\n                // Confirming Address\n                let response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                let data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n                else {\n                    // Confirming Order\n                    API_URL = \"/createcustomerorder/\";\n\n                    let details = [];\n\n                    items.map((item) =>\n                        details.push({\n                            price: item.price,\n                            product_id: item.id,\n                            qty: `${item.qty * item.count} ${item.unit}`,\n                        })\n                    );\n\n                    const today = new Date();\n                    const date =\n                        today.getFullYear() +\n                        \"-\" +\n                        (today.getMonth() + 1) +\n                        \"-\" +\n                        today.getDate();\n                    const time = today.getHours() + \":\" + today.getMinutes();\n\n                    object = {};\n                    object[\"userid\"] = localStorage.getItem(\"userID\");\n                    object[\"service_id\"] = sessionStorage.getItem(\"service_id\");\n                    object[\"order_time\"] = date + \" \" + time;\n                    object[\"customer_address_id\"] = data.customer_add_id;\n                    object[\"payment\"] = totalPrice;\n                    object[\"details\"] = details;\n\n                    response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(object),\n                    });\n\n                    data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n                    else {\n                        // setStatusVariant(\"success\");\n                        // setStatus(\n                        //     \"We have recieved your order successfully 😄\"\n                        // );\n                        handleCleanUP(data.order_id);\n                    }\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    const handleCleanUP = (order_id) => {\n        sessionStorage.setItem(\"items\", \"[]\");\n        sessionStorage.setItem(\"service_id\", \"\");\n        props.history.push(`/order/success/${order_id}`);\n    };\n\n    return (\n        <div className={\"card\" + ui + syntax + border}>\n            <div className=\"card-body row\">\n                <div className=\"col-md-4 order-md-2 mb-4\">\n                    <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n                        <span style={{ opacity: \"0.7\" }}>Your cart</span>\n                        <span className={\"badge badge-pill badge-\" + type}>\n                            {items.length}\n                        </span>\n                    </h4>\n\n                    {items.length > 0 ? (\n                        <div\n                            className={\"rounded mb-3\" + border}\n                            style={{ height: \"15rem\", overflow: \"scroll\" }}\n                        >\n                            <Table responsive=\"sm\" striped variant={variant}>\n                                <tbody>\n                                    {items.map((item) => (\n                                        <tr key={item.id}>\n                                            <td className=\"align-middle\">\n                                                {item.productName}\n                                                <br />\n                                                <small\n                                                    style={{\n                                                        opacity: \"0.7\",\n                                                    }}\n                                                >\n                                                    Item count: {item.count},\n                                                    Per Item Price:{\" \"}\n                                                    <span className=\"font-weight-bold\">\n                                                        ৳{\" \"}\n                                                    </span>\n                                                    {item.price}\n                                                </small>\n                                            </td>\n                                            <td className=\"text-right align-middle\">\n                                                Tk {item.count * item.price}\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        </div>\n                    ) : (\n                        <div className=\"mb-3\">\n                            <Infobar>Your cart is empty {emoji(\"🙁\")}</Infobar>\n                        </div>\n                    )}\n\n                    <div className={\"text-center mb-3\" + link}>\n                        <Link to=\"/cart\">Back to shopping cart</Link>\n                    </div>\n\n                    <div className={\"rounded mb-3\" + border}>\n                        <Table responsive=\"sm\" striped variant={variant}>\n                            <tbody>\n                                <tr>\n                                    <td\n                                        className={\n                                            \"align-middle text-\" + success\n                                        }\n                                    >\n                                        <div>\n                                            <h6 className=\"my-0\">Discount</h6>\n                                            <small>\n                                                For Early Birds: {discount}%\n                                            </small>\n                                        </div>\n                                    </td>\n                                    <td className=\"text-right align-middle\">\n                                        Tk -\n                                        {Math.floor(\n                                            totalPrice * (discount / 100)\n                                        )}\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td className=\"align-middle\">\n                                        <span>Total (BDT)</span>\n                                    </td>\n                                    <td className=\"text-right align-middle\">\n                                        <strong>TK {totalPrice}</strong>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </div>\n\n                    <form className={\"card p-2\" + ui + border}>\n                        <div className=\"input-group\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Promo code\"\n                                className=\"form-control\"\n                            />\n                            <div className=\"input-group-append\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-secondary\"\n                                >\n                                    Redeem\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-8 order-md-1\">\n                    <h4 className=\"mb-3\">Shipping address</h4>\n                    <form\n                        ref={form}\n                        noValidate\n                        onSubmit={handleSubmit}\n                        className=\"needs-validation\"\n                    >\n                        <div className=\"row\">\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"username\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"user\"]}\n                                    />\n                                    Name\n                                </label>\n                                <input\n                                    readOnly\n                                    type=\"text\"\n                                    id=\"username\"\n                                    defaultValue={localStorage.getItem(\n                                        \"username\"\n                                    )}\n                                    className={\n                                        \"text-center form-control\" + border\n                                    }\n                                />\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"phone\">\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"phone\"]}\n                                    />\n                                    Phone\n                                </label>\n                                <input\n                                    readOnly\n                                    id=\"phone\"\n                                    type=\"phone\"\n                                    className={\n                                        \"text-center form-control\" + border\n                                    }\n                                    defaultValue={localStorage.getItem(\n                                        \"phone_number\"\n                                    )}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"mb-3\">\n                            <small style={{ opacity: \"0.7\" }}>\n                                Want them to call you to another number? Provide\n                                it in the further description filed\n                            </small>\n                        </div>\n\n                        <hr\n                            className=\"mb-4\"\n                            style={{\n                                borderColor: \"inherit\",\n                                opacity: \"0.2\",\n                            }}\n                        />\n\n                        <div className=\"row\">\n                            <div className=\"col mb-3\">\n                                <label htmlFor=\"address\">Addresses</label>\n                                <select\n                                    required\n                                    id=\"address\"\n                                    onChange={handleSelect}\n                                    className={\n                                        \"custom-select d-block w-100\" + border\n                                    }\n                                >\n                                    <option defaultValue=\"\">\n                                        Select from saved addresses...\n                                    </option>\n                                    {addressess.map((address) => (\n                                        <option\n                                            key={address.customer_add_id}\n                                            value={address.customer_add_id}\n                                        >\n                                            House No: {address.house_no}, Road\n                                            No: {address.road_no}, Further\n                                            Description:{\" \"}\n                                            {address.further_description\n                                                ? address.further_description\n                                                : \"Null\"}\n                                        </option>\n                                    ))}\n                                </select>\n                                <div className=\"invalid-feedback\">\n                                    Please select a valid address\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"house_no\">House No</label>\n                                <input\n                                    required\n                                    type=\"text\"\n                                    id=\"house_no\"\n                                    name=\"house_no\"\n                                    placeholder=\"8\"\n                                    defaultValue={newAddress.house_no}\n                                    className={\n                                        \"form-control text-center\" + border\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">\n                                    Please select a valid house.\n                                </div>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"road_no\">Road No</label>\n                                <input\n                                    required\n                                    type=\"text\"\n                                    id=\"road_no\"\n                                    name=\"road_no\"\n                                    placeholder=\"2/B\"\n                                    defaultValue={newAddress.road_no}\n                                    className={\n                                        \"form-control text-center\" + border\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">\n                                    Please provide a valid road number.\n                                </div>\n                            </div>\n                            <div className=\"d-none\">\n                                <label htmlFor=\"area_id\">Area ID</label>\n                                <input\n                                    required\n                                    type=\"text\"\n                                    id=\"area_id\"\n                                    name=\"area_id\"\n                                    placeholder=\"1209\"\n                                    defaultValue={sessionStorage.getItem(\n                                        \"areaID\"\n                                    )}\n                                    className={\n                                        \"form-control text-center\" + border\n                                    }\n                                />\n                                <div className=\"invalid-feedback\">\n                                    Area ID is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"mb-4\">\n                            <label htmlFor=\"further_description\">\n                                Further Description\n                            </label>\n                            <input\n                                required\n                                type=\"text\"\n                                id=\"further_description\"\n                                name=\"further_description\"\n                                defaultValue={newAddress.further_description}\n                                placeholder=\"Sector-17, Uttara, Dhaka, Phone: 012xx-xxx-xxx\"\n                                className={\"form-control\" + border}\n                            />\n                            <div className=\"invalid-feedback\">\n                                Please enter your shipping further description.\n                            </div>\n                        </div>\n\n                        <h4 className=\"mb-3\">Payment</h4>\n\n                        <div className=\"d-block my-3\">\n                            <div className=\"custom-control custom-radio\">\n                                <input\n                                    disabled\n                                    id=\"bkash\"\n                                    type=\"radio\"\n                                    name=\"paymentMethod\"\n                                    className=\"custom-control-input\"\n                                />\n                                <label\n                                    htmlFor=\"bkash\"\n                                    className=\"custom-control-label\"\n                                >\n                                    Bkash\n                                </label>\n                            </div>\n\n                            <div className=\"custom-control custom-radio\">\n                                <input\n                                    required\n                                    type=\"radio\"\n                                    defaultChecked\n                                    id=\"cashOnDelivery\"\n                                    className=\"custom-control-input\"\n                                />\n                                <label\n                                    htmlFor=\"cashOnDelivery\"\n                                    className=\"custom-control-label\"\n                                >\n                                    <FontAwesomeIcon\n                                        className=\"mr-2\"\n                                        icon={[\"fas\", \"hand-holding-usd\"]}\n                                    />\n                                    Cash on delivery\n                                </label>\n                            </div>\n                        </div>\n\n                        <hr\n                            className=\"mb-4\"\n                            style={{\n                                borderColor: \"inherit\",\n                                opacity: \"0.2\",\n                            }}\n                        />\n\n                        {status && (\n                            <CustomAlert\n                                variant={statusVariant}\n                                status={status}\n                            />\n                        )}\n\n                        <div className=\"d-flex justify-content-between\">\n                            <Button\n                                type=\"submit\"\n                                variant={type}\n                                disabled={\n                                    !items.length || statusVariant === \"success\"\n                                }\n                            >\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"check-circle\"]}\n                                />\n                                Confirm Purchase\n                            </Button>\n\n                            <Button\n                                to=\"/\"\n                                as={Link}\n                                variant={type}\n                                disabled={\n                                    items.length &&\n                                    !(statusVariant === \"success\")\n                                }\n                            >\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"home\"]}\n                                />\n                                Back To Home Page\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Checkout);\n","import React from \"react\";\nimport CartContextProvider from \"../contexts/CartContext\";\nimport Layout from \"../components/generic/layout\";\nimport Checkout from \"../components/shoppingCart/checkout\";\n\nconst CheckoutPage = () => {\n    return (\n        <Layout>\n            <CartContextProvider>\n                <Checkout />\n            </CartContextProvider>\n        </Layout>\n    );\n};\n\nexport default CheckoutPage;\n","import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst NotFound = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    return (\n        <div\n            className={\n                \"d-flex justify-content-center rounded shadow mx-auto\" + border\n            }\n            style={{ maxWidth: \"55rem\" }}\n        >\n            <div className=\"notfound pb-4 pb-md-5\">\n                <div className=\"notfound-404\">\n                    <h1>404</h1>\n                </div>\n                <h2 className={\"mb-3 mt-5 pt-3\" + syntax}>\n                    Oops! This Page Could Not Be Found\n                </h2>\n                <p className={syntax}>\n                    Sorry, but the page you are looking for does not exist, have\n                    been removed, name changed or is temporarily unavailable\n                </p>\n                <Button variant={type} className=\"mt-3\" as={Link} to=\"/\">\n                    <FontAwesomeIcon className=\"mr-2\" icon={[\"fas\", \"home\"]} />\n                    Homepage\n                </Button>\n                <Button\n                    variant={type}\n                    className=\"mt-3 ml-2\"\n                    onClick={() => props.history.goBack()}\n                >\n                    <FontAwesomeIcon\n                        className=\"mr-2\"\n                        icon={[\"fas\", \"arrow-circle-left\"]}\n                    />\n                    Go Back\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(NotFound);\n","import React from \"react\";\nimport Layout from \"../components/generic/layout\";\nimport NotFound from \"../components/generic/NotFound\";\n\nconst NotFoundPage = () => {\n    return (\n        <Layout>\n            <NotFound />\n        </Layout>\n    );\n};\n\nexport default NotFoundPage;\n","import emoji from \"react-easy-emoji\";\nimport { Col, Row } from \"react-bootstrap\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Chart, Line, Bar, Polar } from \"react-chartjs-2\";\nimport \"chart.piecelabel.js\";\nimport \"chartjs-plugin-datalabels\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst Charts = (props) => {\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const pointBorderColor = isLightTheme ? \"#205c85\" : \"#ffae00\";\n    const ticksBackdropColor = isLightTheme ? \"#f8f9fa\" : \"#343a40\";\n    const lineChartbg = isLightTheme\n        ? theme.light.lineChartbg\n        : theme.dark.lineChartbg;\n    const mainColor = isLightTheme\n        ? theme.light.mainColor\n        : theme.dark.mainColor;\n    const fontColor = isLightTheme ? \"black\" : \"white\";\n    const gridColor = isLightTheme\n        ? \"rgba(0, 0, 0, 0.3)\"\n        : \"rgba(255, 255, 255, 0.3)\";\n\n    const [status, setStatus] = useState(undefined);\n    const [barChartData, setBarChartData] = useState({});\n    const [lineChartData, setLineChartData] = useState({});\n    const [polarChartData, setPolarChartData] = useState({});\n\n    // componentDidMount\n    useEffect(() => {\n        const loadData = async () => {\n            // Pie chart\n            let API_URL = \"/piechart/\";\n            const bodyData = {\n                end_date: props.date.end_date,\n                start_date: props.date.start_date,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                let response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                let data = await response.json();\n                // console.log(data.details);\n\n                if (!response.ok) setStatus(data.message);\n                else setPolarChartData(data.details);\n\n                // Line chart\n                API_URL = \"/linechart/\";\n\n                response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                data = await response.json();\n                // console.log(data.details);\n\n                if (!response.ok) setStatus(data.message);\n                else setLineChartData(data.details);\n\n                // Bar chart\n                API_URL = \"/horizontalbarchart/\";\n\n                response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                data = await response.json();\n                // console.log(data.details);\n\n                if (!response.ok) setStatus(data.message);\n                else setBarChartData(data.details);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [props.date]);\n\n    Chart.defaults.global.defaultFontColor = fontColor;\n    Chart.defaults.global.defaultFontFamily = \"Montserrat\";\n\n    // Chart.scaleService.defaults.radialLinear.ticks.backdropColor =\n    //     \"rgba(0, 0, 0, 0)\";\n    // Chart.defaults.scale.gridLines.color = \"#ddd\";\n\n    // This line of code took a lot of my time to figure 😑\n    Chart.helpers.each(Chart.instances, (instance) => instance.chart.update());\n\n    const chartsData = {\n        dataLine: {\n            // labels: [\n            //     \"January\",\n            //     \"February\",\n            //     \"March\",\n            //     \"April\",\n            //     \"May\",\n            //     \"June\",\n            //     \"July\",\n            // ],\n            labels: lineChartData[0],\n            // labels: [\"3-1-2021\", \"3-4-2020\", \"4-16-2021\"],\n            options: {\n                responsive: true,\n                legend: {\n                    display: false,\n                },\n                plugins: {\n                    datalabels: {\n                        display: false,\n                    },\n                },\n                scales: {\n                    xAxes: [\n                        {\n                            // type: \"time\",\n                            // time: {\n                            //     unit: \"day\",\n                            //     unitStepSize: 1000,\n                            //     displayFormats: {\n                            //         millisecond: \"MMM DD, YY\",\n                            //         second: \"MMM DD, YY\",\n                            //         minute: \"MMM DD, YY\",\n                            //         hour: \"MMM DD, YY\",\n                            //         day: \"MMM DD, YY\",\n                            //         week: \"MMM DD, YY\",\n                            //         month: \"MMM DD, YY\",\n                            //         quarter: \"MMM DD, YY\",\n                            //         year: \"MMM DD, YY\",\n                            //     },\n                            // },\n\n                            ticks: {\n                                source: \"labels\",\n                            },\n\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Date\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                        },\n                    ],\n                    yAxes: [\n                        {\n                            // type: \"time\",\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Orders\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                            // ticks: {\n                            //     stepSize: 1,\n                            // },\n                        },\n                    ],\n                },\n            },\n            datasets: [\n                {\n                    // label: \"My First dataset\",\n                    fill: true,\n                    lineTension: 0.3,\n                    backgroundColor: lineChartbg,\n                    borderColor: mainColor,\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: pointBorderColor,\n                    pointBackgroundColor: \"rgb(255, 255, 255)\",\n                    pointBorderWidth: 8,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n                    pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    // data: [28, 48, 40, 19, 86, 27, 90],\n                    data: lineChartData[1],\n                },\n            ],\n        },\n        dataBar: {\n            // labels: [\n            //     \"Red\",\n            //     \"Orange\",\n            //     \"Yellow\",\n            //     \"Green\",\n            //     \"Blue\",\n            //     \"Purple\",\n            //     \"Grey\",\n            // ],\n            labels: barChartData[0],\n            options: {\n                responsive: true,\n                legend: {\n                    display: false,\n                },\n                layout: {\n                    padding: {\n                        left: 0,\n                        right: 0,\n                        top: 20,\n                        bottom: 0,\n                    },\n                },\n                scales: {\n                    xAxes: [\n                        {\n                            // type: \"time\",\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Employee Name\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                        },\n                    ],\n                    yAxes: [\n                        {\n                            // type: \"text\",\n                            // display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: \"Income\",\n                            },\n                            gridLines: {\n                                color: gridColor,\n                            },\n                        },\n                    ],\n                },\n            },\n            datasets: [\n                {\n                    // label: \"My First dataHorizontal\",\n                    // data: [22, 33, 55, 12, 86, 23, 14],\n                    data: barChartData[1],\n                    fill: false,\n                    datalabels: {\n                        align: \"end\",\n                        anchor: \"end\",\n                    },\n                    backgroundColor: [\n                        \"rgba(255, 99, 132, 0.4)\",\n                        \"rgba(75, 192, 192, 0.4)\",\n                        \"rgba(54, 162, 235, 0.4)\",\n                        \"rgba(255, 205, 86, 0.4)\",\n                        \"rgba(255, 159, 64, 0.4)\",\n                        // \"rgba(153, 102, 255, 0.6)\",\n                        // \"rgba(201, 203, 207, 0.6)\",\n                    ],\n                    borderColor: [\n                        \"rgb(255, 99, 132)\",\n                        \"rgb(75, 192, 192)\",\n                        \"rgb(54, 162, 235)\",\n                        \"rgb(255, 205, 86)\",\n                        \"rgb(255, 159, 64)\",\n                        // \"rgb(153, 102, 255)\",\n                        // \"rgb(201, 203, 207)\",\n                    ],\n                    borderWidth: 3,\n                },\n            ],\n        },\n        dataPolar: {\n            // labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\n            labels: polarChartData[0],\n            options: {\n                responsive: true,\n                legend: {\n                    position: \"right\",\n                },\n                plugins: {\n                    datalabels: {\n                        display: false,\n                    },\n                },\n                pieceLabel: {\n                    showZero: true,\n                    render: \"percentage\",\n                    fontColor: fontColor,\n                },\n                scale: {\n                    gridLines: {\n                        color: gridColor,\n                    },\n                    ticks: {\n                        backdropColor: ticksBackdropColor,\n                    },\n                },\n            },\n            datasets: [\n                {\n                    // title: \"My First dataHorizontal\",\n                    // data: [300, 50, 100, 40, 120],\n                    data: polarChartData[1],\n                    borderAlign: \"inner\",\n                    // borderColor: \"#777\",\n                    borderColor: [\n                        \"rgba(247, 70, 74, 1)\",\n                        \"rgba(70, 191, 189, 1)\",\n                        \"rgba(253, 180, 92, 1)\",\n                        \"rgba(54, 162, 235, 1)\",\n                        \"rgba(255, 99, 132, 1)\",\n                        \"rgba(172, 100, 173, 1)\",\n                    ],\n                    backgroundColor: [\n                        \"rgba(247, 70, 74, 0.4)\",\n                        \"rgba(70, 191, 189, 0.4)\",\n                        \"rgba(253, 180, 92, 0.4)\",\n                        \"rgba(54, 162, 235, 0.4)\",\n                        \"rgba(255, 99, 132, 0.4)\",\n                        \"rgba(172, 100, 173, 0.4)\",\n                    ],\n                    hoverBackgroundColor: [\n                        \"#FF5A5E\",\n                        \"#5AD3D1\",\n                        \"#FFC870\",\n                        \"rgba(54, 162, 235, 0.8)\",\n                        \"rgba(255, 99, 132, 0.8)\",\n                        \"#DA92DB\",\n                    ],\n                    borderWidth: 3,\n                },\n            ],\n        },\n    };\n\n    return (\n        <>\n            <Row>\n                {status && <CustomAlert status={status} />}\n\n                <Col lg={6} className=\"mb-4\">\n                    {props.extraData}\n                </Col>\n\n                <Col lg={6} className=\"mb-4\">\n                    <div className={\"card h-100\" + ui + syntax + border}>\n                        {lineChartData[0] && lineChartData[0].length > 0 ? (\n                            <div className=\"card-body\">\n                                {lineChartData[0] && (\n                                    <div className=\"text-center mb-3\">\n                                        {emoji(\"🔥\")} Top{\" \"}\n                                        {lineChartData[0].length} most ordered\n                                        {Object.keys(lineChartData).length > 1\n                                            ? \" days \"\n                                            : \" day \"}\n                                        {emoji(\"🔥\")}\n                                    </div>\n                                )}\n                                <Line\n                                    data={chartsData.dataLine}\n                                    options={chartsData.dataLine.options}\n                                />\n                            </div>\n                        ) : (\n                            <div className=\"card-body mx-auto mt-2 d-flex align-items-center\">\n                                <h5>\n                                    Not enough data to show a chart!{\" \"}\n                                    {emoji(\"🙁\")}\n                                </h5>\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                <Col lg={6} className=\"mb-4\">\n                    <div className={\"card h-100\" + ui + syntax + border}>\n                        {polarChartData[0] && polarChartData[0].length > 0 ? (\n                            <div className=\"card-body\">\n                                {polarChartData[0] && (\n                                    <div className=\"text-center mb-3\">\n                                        {emoji(\"🔥\")} Top{\" \"}\n                                        {polarChartData[0].length} sold\n                                        {Object.keys(lineChartData).length > 1\n                                            ? \" products \"\n                                            : \" product \"}\n                                        {emoji(\"🔥\")}\n                                    </div>\n                                )}\n                                {/* <Doughnut\n                                    data={chartsData.dataDoughnut}\n                                    options={chartsData.dataDoughnut.options}\n                                /> */}\n                                <Polar\n                                    data={chartsData.dataPolar}\n                                    options={chartsData.dataPolar.options}\n                                />\n                            </div>\n                        ) : (\n                            <div className=\"card-body mx-auto mt-2 d-flex align-items-center\">\n                                <h5>\n                                    Not enough data to show a chart!{\" \"}\n                                    {emoji(\"🙁\")}\n                                </h5>\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                <Col lg={6} className=\"mb-4\">\n                    <div className={\"card h-100\" + ui + syntax + border}>\n                        {barChartData[0] && barChartData[0].length > 0 ? (\n                            <div className=\"card-body\">\n                                {barChartData[0] && (\n                                    <div className=\"text-center mb-3\">\n                                        {emoji(\"🔥\")} Top{\" \"}\n                                        {barChartData[0].length}\n                                        {Object.keys(lineChartData).length > 1\n                                            ? \" employees \"\n                                            : \" employee \"}{\" \"}\n                                        income {emoji(\"🔥\")}\n                                    </div>\n                                )}\n                                <Bar\n                                    data={chartsData.dataBar}\n                                    options={chartsData.dataBar.options}\n                                />\n                            </div>\n                        ) : (\n                            <div className=\"card-body mx-auto mt-2 d-flex align-items-center\">\n                                <h5>\n                                    Not enough data to show a chart!{\" \"}\n                                    {emoji(\"🙁\")}\n                                </h5>\n                            </div>\n                        )}\n                    </div>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Charts;\n","import moment from \"moment\";\nimport \"moment-duration-format\";\nimport emoji from \"react-easy-emoji\";\nimport { withRouter } from \"react-router-dom\";\nimport React, { useContext, useRef, useState, useEffect } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomTable from \"../generic/CustomTable\";\nimport Charts from \"./Charts\";\n\nconst Statistics = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [statistics, setStatistics] = useState({});\n    const [date, setDate] = useState({\n        start_date: localStorage.getItem(\"start_date\")\n            ? localStorage.getItem(\"start_date\")\n            : moment(new Date().toLocaleDateString(\"en-CA\"))\n                  .subtract(1, \"year\")\n                  .format(\"YYYY-MM-DD\"),\n        end_date: localStorage.getItem(\"end_date\")\n            ? localStorage.getItem(\"end_date\")\n            : new Date().toLocaleDateString(\"en-CA\"),\n    });\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/getservicestats/\";\n\n        const loadData = async () => {\n            let object = {\n                ...date,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            // Check date validity\n            const start = moment(object[\"start_date\"]);\n            const end = moment(object[\"end_date\"]);\n\n            if (start.isBefore(end)) {\n                try {\n                    const response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(object),\n                    });\n\n                    const data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n                    else {\n                        setStatistics(data);\n                        setStatus(undefined);\n                    }\n                } catch (error) {\n                    setStatus(error);\n                }\n            } else setStatus(\"Start date must be lesser than End date\");\n        };\n\n        loadData();\n    }, [date]);\n\n    const handleSubmit = (e) => {\n        e && e.preventDefault();\n\n        const API_URL = \"/getservicestats/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n            object[\"end_date\"] = moment(object[\"end_date\"])\n                .add(1, \"days\")\n                .format(\"YYYY-MM-DD\");\n\n            // Check date validity\n            const start = moment(object[\"start_date\"]);\n            const end = moment(object[\"end_date\"]);\n\n            if (start.isBefore(end)) {\n                // Set new date\n                setDate({\n                    start_date: object[\"start_date\"],\n                    end_date: object[\"end_date\"],\n                });\n\n                localStorage.setItem(\"start_date\", object[\"start_date\"]);\n                localStorage.setItem(\"end_date\", object[\"end_date\"]);\n\n                try {\n                    const response = await fetch(API_URL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(object),\n                    });\n\n                    const data = await response.json();\n\n                    if (!response.ok) setStatus(data.message);\n                    else {\n                        setStatistics(data);\n                        setStatus(undefined);\n                    }\n                } catch (error) {\n                    setStatus(error);\n                }\n            } else setStatus(\"Start date must be lesser than End date\");\n        };\n\n        loadData();\n    };\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Employee Name\" },\n            { className: \"\", value: \"Phone Number\" },\n            { className: \"\", value: \"Delivered\" },\n            { className: \"\", value: \"Income\" },\n        ],\n        allowedEntry: [\"name\", \"phone\", \"delivered\"],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>\n                Statistics of last{\" \"}\n                <span className={custom_text}>\n                    {moment\n                        .duration(\n                            moment(date.end_date).diff(moment(date.start_date))\n                        )\n                        .format(\"Y [year] M [month] w [week] d [days]\")}\n                </span>\n            </h4>\n\n            {status && <CustomAlert status={status} />}\n\n            <Row>\n                <Col className=\"mb-4\">\n                    <div className={\"card\" + ui + syntax + border}>\n                        <div className=\"card-body\">\n                            <form ref={form} onSubmit={handleSubmit}>\n                                <Row className=\"d-flex align-items-center\">\n                                    <Col lg={4}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"mr-2\"\n                                                    icon={[\n                                                        \"fas\",\n                                                        \"hourglass-start\",\n                                                    ]}\n                                                />\n                                                Start Date:\n                                            </Col>\n                                            <Col\n                                                md={7}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    className={\n                                                        \"input-group rounded\" +\n                                                        border\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"date\"\n                                                        id=\"start_date\"\n                                                        name=\"start_date\"\n                                                        placeholder=\"2020-02-17\"\n                                                        defaultValue={\n                                                            date.start_date\n                                                        }\n                                                        className=\"form-control text-center rounded-0\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please select a valid\n                                                        date\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={4}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"mr-2\"\n                                                    icon={[\n                                                        \"fas\",\n                                                        \"hourglass-end\",\n                                                    ]}\n                                                />\n                                                End Date:\n                                            </Col>\n                                            <Col\n                                                md={7}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    className={\n                                                        \"input-group rounded\" +\n                                                        border\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"date\"\n                                                        id=\"end_date\"\n                                                        name=\"end_date\"\n                                                        placeholder=\"2021-02-18\"\n                                                        defaultValue={\n                                                            date.end_date\n                                                        }\n                                                        className=\"form-control text-center rounded-0\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please provide a valid\n                                                        date\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={4}>\n                                        <Button\n                                            type=\"submit\"\n                                            variant={type}\n                                            className=\"w-100\"\n                                        >\n                                            <FontAwesomeIcon\n                                                className=\"mr-2\"\n                                                icon={[\n                                                    \"fas\",\n                                                    \"file-invoice-dollar\",\n                                                ]}\n                                            />\n                                            Update statistics\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </form>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n\n            <Charts\n                date={date}\n                extraData={\n                    <div className={\"card h-100\" + ui + syntax + border}>\n                        <div className=\"card-body d-flex mx-auto\">\n                            <div className=\"my-auto\">\n                                <div className=\"text-center mb-4\">\n                                    {emoji(\"🔥\")} Summary of your orders{\" \"}\n                                    {emoji(\"🔥\")}\n                                </div>\n\n                                <Row className=\"form-group\">\n                                    <Col className=\"my-auto\">\n                                        <FontAwesomeIcon\n                                            className=\"mr-2\"\n                                            icon={[\"fas\", \"sort-amount-down\"]}\n                                        />\n                                        Orders Recieved:\n                                    </Col>\n                                    <Col md={6} sm={12}>\n                                        <div\n                                            className={\n                                                \"input-group rounded\" + border\n                                            }\n                                        >\n                                            <input\n                                                readOnly\n                                                type=\"number\"\n                                                name=\"total_orders\"\n                                                defaultValue={\n                                                    statistics.total_orders\n                                                }\n                                                className=\"form-control text-center rounded-0\"\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"form-group\">\n                                    <Col className=\"my-auto\">\n                                        <FontAwesomeIcon\n                                            className=\"mr-2\"\n                                            icon={[\"fas\", \"truck\"]}\n                                        />\n                                        Delivered:\n                                    </Col>\n                                    <Col md={6} sm={12}>\n                                        <div\n                                            className={\n                                                \"input-group rounded\" + border\n                                            }\n                                        >\n                                            <input\n                                                readOnly\n                                                type=\"number\"\n                                                name=\"delivered\"\n                                                defaultValue={\n                                                    statistics.delivered\n                                                }\n                                                className=\"form-control text-center rounded-0\"\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col className=\"my-auto\">\n                                        <span className=\"font-weight-bold mr-2\">\n                                            ৳\n                                        </span>\n                                        Total Income:\n                                    </Col>\n                                    <Col md={6} sm={12}>\n                                        <div\n                                            className={\n                                                \"input-group rounded\" + border\n                                            }\n                                        >\n                                            <input\n                                                readOnly\n                                                type=\"number\"\n                                                name=\"income\"\n                                                defaultValue={statistics.income}\n                                                className=\"form-control text-center rounded-0\"\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </div>\n                    </div>\n                }\n            />\n\n            {statistics.employee && statistics.employee.length > 0 && (\n                <Row>\n                    <Col>\n                        <CustomTable\n                            ths={tableData.ths}\n                            datas={statistics.employee}\n                            allowedEntry={tableData.allowedEntry}\n                            ActionComponents={[\n                                {\n                                    component: (employee) => (\n                                        <>\n                                            <span className=\"font-weight-bold\">\n                                                ৳{\" \"}\n                                            </span>\n                                            {employee.income}\n                                        </>\n                                    ),\n                                    className: \"\",\n                                },\n                            ]}\n                        />\n                    </Col>\n                </Row>\n            )}\n        </>\n    );\n};\n\nexport default withRouter(Statistics);\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport Statistics from \"../components/statistics/Statistics\";\n\nconst StatisticsPage = () => {\n    return (\n        <Layout>\n            <Statistics />\n        </Layout>\n    );\n};\n\nexport default StatisticsPage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomModal from \"../generic/CustomModal\";\n\nconst UpdateProductDetails = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleUpdate = () => {\n        const API_URL = \"/updateproduct/\";\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n\n            object[\"product_id\"] = props.id;\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatus(data.message);\n                setStatusVariant(\"danger\");\n            }\n        };\n        loadData();\n    };\n\n    return (\n        <CustomModal\n            actionVariant={type}\n            handleAction={handleUpdate}\n            modalTitle=\"Update Product Details\"\n            actionButtonBody={\n                <>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"wrench\"]}\n                    />\n                    Update\n                </>\n            }\n            modalButtonClass={\"btn btn-sm btn-\" + type}\n            modalBody={\n                <form ref={form}>\n                    {status &&\n                        (statusVariant === \"success\" ? (\n                            <CustomModalAlert\n                                status={status}\n                                setStatus={setStatus}\n                                variant={statusVariant}\n                                updateFlag={props.updateFlag}\n                            />\n                        ) : (\n                            <CustomAlert\n                                status={status}\n                                variant={statusVariant}\n                            />\n                        ))}\n\n                    <div className=\"form-group\">\n                        <label>Product Name</label>\n\n                        <div\n                            className={\n                                \"form-group input-group rounded\" + border\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text rounded-0\">\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-1\"\n                                        icon={[\"fab\", \"product-hunt\"]}\n                                    />\n                                </span>\n                            </div>\n                            <input\n                                disabled\n                                type=\"text\"\n                                name=\"product_name\"\n                                placeholder=\"Product Name\"\n                                className=\"form-control rounded-0\"\n                                defaultValue={props.product.product_name}\n                            />\n                        </div>\n\n                        <label className=\"mt-3\">Price (Vat Excluded)</label>\n\n                        <div\n                            className={\n                                \"form-group input-group rounded\" + border\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text py-0 rounded-0\">\n                                    <span\n                                        className=\"font-weight-bold mx-1\"\n                                        style={{\n                                            fontSize: \"1.2rem\",\n                                        }}\n                                    >\n                                        ৳{\" \"}\n                                    </span>\n                                </span>\n                            </div>\n                            <input\n                                autoFocus\n                                name=\"price\"\n                                type=\"number\"\n                                placeholder=\"Product price\"\n                                defaultValue={props.product.price}\n                                className=\"form-control rounded-0\"\n                            />\n                        </div>\n                    </div>\n                </form>\n            }\n        >\n            <FontAwesomeIcon\n                className=\"fa-icon mr-1\"\n                icon={[\"fas\", \"wrench\"]}\n            />\n            Update\n        </CustomModal>\n    );\n};\n\nexport default UpdateProductDetails;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { CartContext } from \"../../contexts/CartContext\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Title from \"../generic/title\";\nimport UpdateProductDetails from \"../products/UpdateProductDetails\";\nimport DeleteModal from \"../generic/DeleteModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst Service = (props) => {\n    const [show, setShow] = useState(false);\n    const [count, setCount] = useState(1);\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    const { items, addItem, postCountUpdate } = useContext(CartContext);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const success = isLightTheme ? theme.light.success : theme.dark.success;\n    const currency_text = isLightTheme\n        ? theme.light.currency_text\n        : theme.dark.currency_text;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    useEffect(() => {\n        const json = sessionStorage.getItem(\"items\");\n        const local = JSON.parse(json);\n\n        if (local) {\n            local.map((item) => {\n                if (item.id === props.serviceInfo.product_id) {\n                    setShow(true);\n                    setCount(item.count);\n                }\n                return item;\n            });\n        }\n    }, [props.serviceInfo.product_id]);\n\n    useEffect(() => {\n        if (show) postCountUpdate(props.serviceInfo.product_id, count);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [show, count, props.serviceInfo.product_id]);\n\n    const price = Math.floor(\n        props.serviceInfo.price +\n            (props.serviceInfo.price * props.serviceInfo.vat) / 100\n    );\n\n    const handleShow = () => {\n        setShow(true);\n    };\n\n    const handleAddItem = () => {\n        let results = false;\n\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].id === props.serviceInfo.product_id) {\n                results = true;\n                break;\n            }\n        }\n\n        if (!results) {\n            const product = {\n                id: props.serviceInfo.product_id,\n                productName: props.serviceInfo.product_name,\n                qty: props.serviceInfo.qty,\n                unit: props.serviceInfo.unit,\n                count,\n                price,\n            };\n\n            addItem(product);\n            handleShow();\n        }\n\n        sessionStorage.setItem(\"service_id\", props.serviceInfo.service_id);\n    };\n\n    const handleDeleteItem = (id) => {\n        const API_URL = \"/deleteproduct/\";\n        const loadData = async () => {\n            const bodyData = {\n                product_id: id,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n            const data = await response.json();\n            if (response.ok) setStatusVariant(\"success\");\n            setStatus(data.message);\n        };\n        loadData();\n    };\n\n    const addOne = () => setCount(count + 1);\n    const minusOne = () => (count > 1 ? setCount(count - 1) : setCount(1));\n\n    return (\n        <div className=\"col-lg-3 col-md-4 col-sm-6 mb-4 text-center\">\n            <Card className={\"shadow\" + ui + border}>\n                {status && (\n                    <CustomModalAlert\n                        status={status}\n                        setStatus={setStatus}\n                        variant={statusVariant}\n                    />\n                )}\n\n                <div className={\"inner border-bottom border-\" + type}>\n                    <Card.Img\n                        variant=\"top\"\n                        src={`https://picsum.photos/id/${Math.floor(\n                            Math.random() * 1000\n                        )}/800`}\n                        onError={(e) => {\n                            e.target.onerror = null;\n                            e.target.src = \"/img/Default.png\";\n                        }}\n                        style={{ maxHeight: \"12rem\" }}\n                        alt=\"card image\"\n                    />\n                </div>\n\n                <Card.Body className={syntax}>\n                    <Card.Title>{props.serviceInfo.product_name}</Card.Title>\n                    <h5 className={currency_text}>\n                        <span className=\"font-weight-bold\">৳ </span>\n\n                        {isServiceProvider\n                            ? props.serviceInfo.price\n                            : count * price}\n                    </h5>\n\n                    {isServiceProvider ? (\n                        <p className={custom_text}>(Vat Excluded)</p>\n                    ) : (\n                        <p className={custom_text}>(Vat included)</p>\n                    )}\n\n                    <div>\n                        <Title>Vat: </Title> {props.serviceInfo.vat}%\n                        <br />\n                        <Title>Quantity: </Title>{\" \"}\n                        {count * props.serviceInfo.qty} {props.serviceInfo.unit}\n                        <br />\n                        <Title>Company: </Title>{\" \"}\n                        {props.serviceInfo.company_name}\n                        {!isServiceProvider && (\n                            <>\n                                <br />\n                                <div className=\"my-3 d-flex justify-content-center\">\n                                    <Icon\n                                        style={{\n                                            fontSize: \"1.125rem\",\n                                            color: \"#0275d8\",\n                                        }}\n                                        onClick={addOne}\n                                        className=\"mt-1\"\n                                    >\n                                        add_circle\n                                    </Icon>\n                                    <input\n                                        type=\"number\"\n                                        className={\n                                            \"show-cart-count mx-1\" + syntax\n                                        }\n                                        value={count}\n                                        style={{ maxWidth: \"2.5rem\" }}\n                                        onChange={(e) =>\n                                            setCount(e.target.value)\n                                        }\n                                        onKeyDown={(e) =>\n                                            [\"e\", \"E\", \"+\", \"-\", \".\"].includes(\n                                                e.key\n                                            ) && e.preventDefault()\n                                        }\n                                    />\n                                    <Icon\n                                        style={{\n                                            fontSize: \"1.125rem\",\n                                            color: \"#d9534f\",\n                                        }}\n                                        onClick={minusOne}\n                                        className=\"mt-1\"\n                                    >\n                                        remove_circle\n                                    </Icon>\n                                </div>\n                            </>\n                        )}\n                    </div>\n\n                    {isServiceProvider ? (\n                        <div className=\"d-flex justify-content-around mt-3\">\n                            <UpdateProductDetails\n                                product={props.serviceInfo}\n                                updateFlag={props.updateFlag}\n                                id={props.serviceInfo.product_id}\n                                service_id={localStorage.getItem(\"userID\")}\n                            />\n\n                            <DeleteModal\n                                deleteText={\"Delete\"}\n                                updateFlag={props.updateFlag}\n                                handleAction={() =>\n                                    handleDeleteItem(\n                                        props.serviceInfo.product_id\n                                    )\n                                }\n                                modalBody={\n                                    <>\n                                        Do you really want to delete Product:{\" \"}\n                                        <span className={custom_text}>\n                                            {props.serviceInfo.product_name}\n                                        </span>{\" \"}\n                                        from your inventory?\n                                        <br />\n                                        <span className={dangerTextColor}>\n                                            Caution: This action cannot be\n                                            undone\n                                        </span>\n                                    </>\n                                }\n                            />\n                        </div>\n                    ) : (\n                        <Button\n                            variant={show ? success : type}\n                            onClick={handleAddItem}\n                        >\n                            {show ? (\n                                <div>\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon mr-2\"\n                                        icon={[\"fas\", \"check\"]}\n                                    />\n                                    Added to the cart\n                                </div>\n                            ) : (\n                                <div>\n                                    <Icon\n                                        style={{\n                                            verticalAlign: \"middle\",\n                                            fontSize: \"18px\",\n                                        }}\n                                        className=\"mr-2 mb-1\"\n                                    >\n                                        add_shopping_cart\n                                    </Icon>\n                                    Add to cart\n                                </div>\n                            )}\n                        </Button>\n                    )}\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n\nexport default Service;\n","import React, { useContext, useState, useEffect } from \"react\";\n// import { Image } from \"react-bootstrap\";\nimport Service from \"./service\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport emoji from \"react-easy-emoji\";\nimport { useParams } from \"react-router-dom\";\n\nimport Infobar from \"../generic/infobar\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport SearchBar from \"../generic/SearchBar\";\n\nconst Services = () => {\n    const params = useParams();\n    const [flag, setFlag] = useState(true);\n    const [sName, setSName] = useState(\"\");\n    const [services, setServices] = useState([]);\n    const [searchData, setSearchData] = useState(\"\");\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    // const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/ownProducts/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                service_id: params.id,\n                search_data: searchData,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            const data = await response.json();\n\n            setServices(data.products);\n        };\n        loadData();\n    }, [params, flag, searchData]);\n\n    useEffect(() => {\n        // if (services.length > 0) {\n        const API_URL = \"/getProfile/\";\n\n        const loadData = async () => {\n            const servideID = {\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(servideID),\n            });\n\n            const data = await response.json();\n\n            setSName(data.company_name);\n        };\n        loadData();\n        // }\n    }, [services]);\n\n    const updateFlag = () => setFlag(!flag);\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    return (\n        <div>\n            <div className={\"text-center\" + syntax}>\n                {/* <div className={\"inner rounded mb-4\" + border}>\n                    <Image\n                        className=\"w-100 profile-pic\"\n                        alt=\"profile picture\"\n                        src={`https://picsum.photos/id/${Math.floor(\n                            Math.random() * 1000\n                        )}/800`}\n                        onError={(e) => {\n                            e.target.onerror = null;\n                            e.target.src = \"/img/profile_pic_default.png\";\n                        }}\n                    />\n                </div> */}\n\n                <h4 className={\"mb-5\" + syntax}>\n                    {isServiceProvider ? \"Your Inventory\" : \"Our Services\"}\n                </h4>\n\n                <SearchBar\n                    handleChange={handleChange}\n                    placeholder=\"Search products....\"\n                    searchBy=\"Search products by product name, company name or price\"\n                />\n\n                <Infobar>\n                    {sName ? sName + \" \" : \"Company name\"}\n                    {/* {emoji(\"🤪\")} */}\n                </Infobar>\n            </div>\n\n            {services && services.length > 0 ? (\n                <div className=\"row\">\n                    {services.map((service) => (\n                        // Here gives unmounted error 🙁\n                        <Service\n                            key={uuidv4()}\n                            serviceInfo={service}\n                            updateFlag={updateFlag}\n                        />\n                    ))}\n                </div>\n            ) : (\n                <Infobar>No services {emoji(\"☹\")}</Infobar>\n            )}\n        </div>\n    );\n};\n\nexport default Services;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport Services from \"../components/services/services\";\nimport CartContextProvider from \"../contexts/CartContext\";\nimport LocationContextProvider from \"../contexts/LocationContext\";\n\nconst ServiceProviders = () => {\n    return (\n        <Layout>\n            <LocationContextProvider>\n                <CartContextProvider>\n                    <Services />\n                </CartContextProvider>\n            </LocationContextProvider>\n        </Layout>\n    );\n};\n\nexport default ServiceProviders;\n","import React, { useContext, useState, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faTwitter, faFacebook } from \"@fortawesome/free-brands-svg-icons\";\n\nimport { Link } from \"react-router-dom\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst RegistrationForm = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(\"\");\n    const [isServiceProvider, setIsServiceProvider] = useState(false);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const link = isLightTheme ? theme.light.link : theme.dark.link;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleSelect = (e) => {\n        e.target.value === \"2\"\n            ? setIsServiceProvider(true)\n            : setIsServiceProvider(false);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = isServiceProvider ? \"/serviceregister/\" : \"/register/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n\n            // for (var pair of formData.entries()) {\n            //     console.log(pair[0] + \" - \" + pair[1]);\n            // }\n            // console.log(JSON.stringify(object));\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data[Object.keys(data)[0]]);\n                else props.history.push(\"/login/\");\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <div\n            className={\"card shadow mx-auto\" + ui + syntax + border}\n            style={{ maxWidth: \"30rem\" }}\n        >\n            <article\n                style={{ maxWidth: \"28rem\" }}\n                className=\"card-body col mx-auto\"\n            >\n                <h4 className=\"card-title text-center\">Create an Account</h4>\n                <p className=\"text-center\">\n                    Get started with your free account\n                </p>\n\n                <form ref={form} onSubmit={handleSubmit}>\n                    {status && <CustomAlert status={status} />}\n\n                    <div className={\"form-group input-group rounded\" + border}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text rounded-0\">\n                                <FontAwesomeIcon icon={[\"fas\", \"user\"]} />\n                            </span>\n                        </div>\n                        <input\n                            name={\n                                isServiceProvider ? \"service_name\" : \"username\"\n                            }\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            className=\"form-control rounded-0\"\n                        />\n                    </div>\n\n                    <div className={\"form-group input-group rounded\" + border}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text rounded-0\">\n                                <FontAwesomeIcon icon={[\"fas\", \"phone\"]} />\n                            </span>\n                        </div>\n                        {/* <select\n                            className=\"custom-select\"\n                            style={{ maxWidth: \"85px\" }}\n                        >\n                            <option defaultValue=\"+880\">+880</option>\n                            <option value=\"1\">+972</option>\n                            <option value=\"2\">+198</option>\n                            <option value=\"3\">+701</option>\n                        </select> */}\n                        <input\n                            name=\"phone\"\n                            type=\"number\"\n                            className=\"form-control rounded-0\"\n                            placeholder=\"Phone number\"\n                        />\n                    </div>\n\n                    <div className={\"form-group input-group rounded\" + border}>\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text rounded-0\">\n                                <FontAwesomeIcon icon={[\"fas\", \"building\"]} />\n                            </span>\n                        </div>\n                        <select\n                            required\n                            onChange={handleSelect}\n                            className=\"form-control rounded-0\"\n                        >\n                            <option defaultValue=\"1\">Customer</option>\n                            <option value=\"2\">Service Provider</option>\n                        </select>\n                    </div>\n\n                    {isServiceProvider && (\n                        <>\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"id-card\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    name=\"nid\"\n                                    type=\"number\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"NID number\"\n                                />\n                            </div>\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"id-card\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"number\"\n                                    name=\"trade_license\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Trade license number\"\n                                />\n                            </div>\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"building\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    name=\"company_name\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Company name\"\n                                />\n                            </div>\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"taxi\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    name=\"service_type\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Service type\"\n                                />\n                            </div>\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"hand-holding-usd\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"number\"\n                                    name=\"delivery_charge\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Delivery charge\"\n                                />\n                            </div>\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"plus\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    name=\"description\"\n                                    type=\"text\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Description\"\n                                />\n                            </div>\n\n                            {/* <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"home\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    name=\"\"\n                                    disabled\n                                    type=\"text\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"House\"\n                                />\n                                <input\n                                    name=\"\"\n                                    disabled\n                                    type=\"text\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Road\"\n                                />\n                            </div> */}\n\n                            <div\n                                className={\n                                    \"form-group input-group rounded\" + border\n                                }\n                            >\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text rounded-0\">\n                                        <FontAwesomeIcon\n                                            icon={[\"fas\", \"location-arrow\"]}\n                                        />\n                                    </span>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    name=\"address\"\n                                    className=\"form-control rounded-0\"\n                                    placeholder=\"Location Description\"\n                                />\n                            </div>\n                        </>\n                    )}\n\n                    <div className=\"form-group\">\n                        <Button variant={type} type=\"submit\" className=\"w-100\">\n                            <FontAwesomeIcon\n                                className=\"mr-2\"\n                                icon={[\"fas\", \"user-plus\"]}\n                            />\n                            Create Account\n                        </Button>\n                    </div>\n\n                    <div className={\"text-center\" + link}>\n                        Have an account? <Link to=\"/login\">Log In</Link>\n                    </div>\n                </form>\n            </article>\n        </div>\n    );\n};\n\nexport default withRouter(RegistrationForm);\n","import React from 'react';\nimport Layout from '../components/generic/layout';\nimport RegistrationForm from '../components/user/userRegistrationForm';\n\nconst UserRegistration = () => {\n    return (\n        <Layout>\n            <RegistrationForm />\n        </Layout>\n    );\n}\n \nexport default UserRegistration;","import { useParams } from \"react-router-dom\";\nimport React, { useState, useContext, useEffect } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomTable from \"../generic/CustomTable\";\nimport CustomAlert from \"../generic/CustomAlert\";\n\nconst OrderDetails = (props) => {\n    const params = useParams();\n    const [status, setStatus] = useState(undefined);\n    const [orderDetailsState, setOrderDetailsState] = useState([]);\n    const [isServiceProvider] = useState(\n        localStorage.getItem(\"isServiceProvider\") === \"true\"\n    );\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = isServiceProvider\n            ? \"/service/orderDetails/\"\n            : \"/customer/orderDetails/\";\n\n        const loadData = async () => {\n            const orderID = {\n                order_id: params.order_id,\n                userid: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(orderID),\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) setStatus(data.message);\n            else {\n                setStatus(undefined);\n                setOrderDetailsState(data.details);\n            }\n        };\n        loadData();\n    }, [params.order_id, isServiceProvider]);\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Product Name\" },\n            { className: \"\", value: \"Quantity\" },\n            { className: \"\", value: \"Product Size\" },\n            { className: \"\", value: \"Price (per unit)\" },\n        ],\n        allowedEntry: [\"product_name\", \"quantity\", \"product_size\"],\n    };\n\n    return (\n        <>\n            {status ? (\n                <CustomAlert status={status} />\n            ) : (\n                <>\n                    <h4 className={\"mb-5 text-center\" + syntax}>\n                        Order Details\n                    </h4>\n                    <CustomTable\n                        ths={tableData.ths}\n                        datas={orderDetailsState}\n                        allowedEntry={tableData.allowedEntry}\n                        ActionComponents={[\n                            {\n                                component: (order) => (\n                                    <>\n                                        <span className=\"font-weight-bold\">\n                                            ৳{\" \"}\n                                        </span>\n                                        {order.product_price_per_unit}\n                                    </>\n                                ),\n                                className: \"\",\n                            },\n                        ]}\n                    />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default OrderDetails;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport OrderDetails from \"../components/orders/OrderDetails\";\n\nconst OrderPage = () => {\n    return (\n        <Layout>\n            <OrderDetails />\n        </Layout>\n    );\n};\n\nexport default OrderPage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomModal from \"../generic/CustomModal\";\n\nconst UpdateEmployeeDetails = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleUpdate = () => {\n        const API_URL = \"/updateEmployee/\";\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            let object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n            object[\"employee_id\"] = props.employee.employee_id;\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(object),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setStatus(data.message);\n                setStatusVariant(\"success\");\n            } else {\n                setStatus(data.message);\n                setStatusVariant(\"danger\");\n            }\n        };\n        loadData();\n    };\n\n    return (\n        <CustomModal\n            // size=\"md\"\n            actionVariant={type}\n            handleAction={handleUpdate}\n            modalTitle=\"Update Employee Details\"\n            actionButtonBody={\n                <>\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"wrench\"]}\n                    />\n                    Update\n                </>\n            }\n            modalButtonClass={\"btn btn-sm btn-\" + type}\n            modalBody={\n                <form ref={form}>\n                    {status &&\n                        (statusVariant === \"success\" ? (\n                            <CustomModalAlert\n                                status={status}\n                                setStatus={setStatus}\n                                variant={statusVariant}\n                                updateFlag={props.updateFlag}\n                            />\n                        ) : (\n                            <CustomAlert\n                                status={status}\n                                variant={statusVariant}\n                            />\n                        ))}\n\n                    <div className=\"form-group\">\n                        <label>Employee Name</label>\n\n                        <div\n                            className={\n                                \"form-group input-group rounded\" + border\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text rounded-0\">\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon\"\n                                        icon={[\"fas\", \"user\"]}\n                                    />\n                                </span>\n                            </div>\n                            <input\n                                required\n                                autoFocus\n                                type=\"text\"\n                                name=\"employee_name\"\n                                placeholder=\"Employee Name\"\n                                className=\"form-control rounded-0\"\n                                defaultValue={props.employee.employee_name}\n                            />\n                        </div>\n\n                        <label className=\"mt-3\">Phone Number</label>\n\n                        <div\n                            className={\n                                \"form-group input-group rounded\" + border\n                            }\n                        >\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text rounded-0\">\n                                    <FontAwesomeIcon\n                                        className=\"fa-icon\"\n                                        icon={[\"fas\", \"phone\"]}\n                                    />\n                                </span>\n                            </div>\n                            <input\n                                type=\"text\"\n                                name=\"phone_number\"\n                                placeholder=\"Phone Number\"\n                                className=\"form-control rounded-0\"\n                                defaultValue={props.employee.phone_number}\n                            />\n                        </div>\n                    </div>\n                </form>\n            }\n        >\n            <FontAwesomeIcon className=\"fa-icon\" icon={[\"fa\", \"wrench\"]} />\n        </CustomModal>\n    );\n};\n\nexport default UpdateEmployeeDetails;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst AddEmployee = (props) => {\n    const form = useRef(null);\n    const [status, setStatus] = useState(undefined);\n    const [variant, setVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const ui = isLightTheme ? theme.light.ui : theme.dark.ui;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = \"/addEmployee/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setVariant(\"success\");\n                    setStatus(data.message);\n                    props.updateFlag();\n                } else {\n                    setVariant(\"danger\");\n                    setStatus(data.message);\n                }\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status &&\n                (variant === \"success\" ? (\n                    <CustomModalAlert\n                        status={status}\n                        variant={variant}\n                        setStatus={setStatus}\n                    />\n                ) : (\n                    <CustomAlert status={status} variant={variant} />\n                ))}\n\n            <Row>\n                <Col className=\"mb-4\">\n                    <div className={\"card\" + ui + syntax + border}>\n                        <div className=\"card-body\">\n                            <form ref={form} onSubmit={handleSubmit}>\n                                <Row className=\"d-flex align-items-center\">\n                                    <Col lg={4}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"fa-icon mr-2\"\n                                                    icon={[\"fas\", \"user-plus\"]}\n                                                />\n                                                Name:\n                                            </Col>\n                                            <Col\n                                                md={8}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    className={\n                                                        \"input-group rounded\" +\n                                                        border\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"text\"\n                                                        id=\"employee_name\"\n                                                        name=\"employee_name\"\n                                                        placeholder=\"Employee name\"\n                                                        className=\"form-control text-center rounded-0\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please select a valid\n                                                        name\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={5}>\n                                        <Row className=\"mb-lg-0 mb-3\">\n                                            <Col className=\"my-auto\">\n                                                <FontAwesomeIcon\n                                                    className=\"fa-icon mr-2\"\n                                                    icon={[\"fas\", \"phone\"]}\n                                                />\n                                                Phone Number:\n                                            </Col>\n                                            <Col\n                                                md={7}\n                                                sm={12}\n                                                className=\"my-auto\"\n                                            >\n                                                <div\n                                                    className={\n                                                        \"input-group rounded\" +\n                                                        border\n                                                    }\n                                                >\n                                                    <input\n                                                        required\n                                                        type=\"number\"\n                                                        id=\"phone_number\"\n                                                        name=\"phone_number\"\n                                                        placeholder=\"Phone Number\"\n                                                        className=\"form-control text-center rounded-0\"\n                                                    />\n                                                    <div className=\"invalid-feedback\">\n                                                        Please provide a valid\n                                                        phone number\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n\n                                    <Col lg={3}>\n                                        <Button\n                                            type=\"submit\"\n                                            variant={type}\n                                            className=\"w-100\"\n                                        >\n                                            <FontAwesomeIcon\n                                                className=\"mr-2\"\n                                                icon={[\"fas\", \"user-plus\"]}\n                                            />\n                                            Add Employee\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </form>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default AddEmployee;\n","import { useContext } from \"react\";\nimport emoji from \"react-easy-emoji\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport Infobar from \"../generic/infobar\";\nimport DeleteModal from \"../generic/DeleteModal\";\nimport CustomTable from \"../generic/CustomTable\";\nimport UpdateEmployeeDetails from \"./UpdateEmployeeDetails\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\nimport AddEmployee from \"./AddEmployee\";\nimport SearchBar from \"../generic/SearchBar\";\n\nconst EmployeeList = (props) => {\n    const [flag, setFlag] = useState(true);\n    const [employees, setEmployees] = useState([]);\n    const [status, setStatus] = useState(undefined);\n    const [searchData, setSearchData] = useState(\"\");\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n    const dangerTextColor = isLightTheme\n        ? theme.light.dangerTextColor\n        : theme.dark.dangerTextColor;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/getEmployee/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                search_data: searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(bodyData),\n            });\n\n            const data = await response.json();\n            setEmployees(data.employee);\n        };\n        loadData();\n    }, [flag, searchData]);\n\n    const handleDelete = (id) => {\n        const API_URL = \"/deleteEmployee/\";\n\n        const loadData = async () => {\n            const employeeID = {\n                employee_id: id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(employeeID),\n            });\n\n            const data = await response.json();\n            if (response.ok) setStatusVariant(\"success\");\n            setStatus(data.message);\n        };\n        loadData();\n    };\n\n    const updateFlag = () => setFlag(!flag);\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    const tableData = {\n        ths: [\n            { className: \"\", value: \"Index\" },\n            { className: \"\", value: \"Employee Name\" },\n            { className: \"\", value: \"Phone\" },\n            { className: \"\", value: \"Update\" },\n            { className: \"\", value: \"Delete\" },\n        ],\n        allowedEntry: [\"employee_name\", \"phone_number\"],\n    };\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>Employees Details</h4>\n\n            <SearchBar\n                handleChange={handleChange}\n                placeholder=\"Search employees details....\"\n                searchBy={<>Search by anything {emoji(\"😄\")}</>}\n            />\n\n            <AddEmployee updateFlag={updateFlag} />\n\n            {employees ? (\n                <>\n                    {status && (\n                        <CustomModalAlert\n                            status={status}\n                            setStatus={setStatus}\n                            variant={statusVariant}\n                        />\n                    )}\n\n                    <CustomTable\n                        index={true}\n                        datas={employees}\n                        ths={tableData.ths}\n                        allowedEntry={tableData.allowedEntry}\n                        ActionComponents={[\n                            {\n                                component: (employee) => (\n                                    <UpdateEmployeeDetails\n                                        employee={employee}\n                                        updateFlag={updateFlag}\n                                    />\n                                ),\n                                className: \"\",\n                            },\n                            {\n                                component: (employee) => (\n                                    <DeleteModal\n                                        employee={employee}\n                                        updateFlag={updateFlag}\n                                        handleAction={() =>\n                                            handleDelete(employee.employee_id)\n                                        }\n                                        modalBody={\n                                            <>\n                                                Do you really want to delete\n                                                details of Employee:{\" \"}\n                                                <span className={custom_text}>\n                                                    {employee.employee_name}\n                                                </span>\n                                                ?<br />\n                                                <span\n                                                    className={dangerTextColor}\n                                                >\n                                                    Caution: This action cannot\n                                                    be undone\n                                                </span>\n                                            </>\n                                        }\n                                    />\n                                ),\n                                className: \"\",\n                            },\n                        ]}\n                    />\n                </>\n            ) : (\n                <Infobar>\n                    You have no employee details to show {emoji(\"🙁\")}\n                </Infobar>\n            )}\n        </>\n    );\n};\n\nexport default EmployeeList;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport EmployeeList from \"../components/employees/EmployeeList\";\n\nconst EmployeeListPage = () => {\n    return (\n        <Layout>\n            <EmployeeList />\n        </Layout>\n    );\n};\n\nexport default EmployeeListPage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport moment from \"moment\";\n\nimport CustomAlert from \"../generic/CustomAlert\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst OrderSuccess = () => {\n    const params = useParams();\n    const [orderDetails, setOrderDetails] = useState({});\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    // componentDidMount\n    useEffect(() => {\n        const API_URL = \"/order/success/\";\n\n        const loadData = async () => {\n            const orderID = {\n                order_id: params.order_id,\n            };\n\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(orderID),\n            });\n\n            const data = await response.json();\n            setOrderDetails(data.details);\n        };\n        loadData();\n    }, [params.order_id]);\n\n    return (\n        <div className={\"text-center\" + syntax}>\n            <div className=\"mx-auto\" style={{ maxWidth: \"35rem\" }}>\n                <div className=\"mb-4\">\n                    <h4 className=\"mb-3\">Thanks for your order</h4>\n                    We're processing your order now, here are the details\n                </div>\n\n                <CustomAlert\n                    variant=\"success\"\n                    status={\n                        <>\n                            <div className=\"mb-3\">\n                                <FontAwesomeIcon\n                                    style={{ fontSize: \"6rem\" }}\n                                    icon={[\"fas\", \"check-circle\"]}\n                                />\n                            </div>\n                            We have recieved your order successfully 😄\n                            <div className=\"text-left mt-3\">\n                                <div className=\"d-flex justify-content-between\">\n                                    Net Total:\n                                    <div>\n                                        <span className=\"font-weight-bold\">\n                                            ৳{\" \"}\n                                        </span>\n                                        {orderDetails.total}\n                                    </div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    Ordered Time:\n                                    <div>\n                                        {moment(orderDetails.time).format(\n                                            \"MMM DD, YY hh:mm a\"\n                                        )}\n                                    </div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    Ordered Number:\n                                    <div>{orderDetails.phone_number}</div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    Service Provider:\n                                    <div>{orderDetails.provider_name}</div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    Delivery Address:\n                                    <div>{orderDetails.address}</div>\n                                </div>\n                            </div>\n                        </>\n                    }\n                />\n\n                <Button variant={type} className=\"mt-3 w-100\" as={Link} to=\"/\">\n                    <FontAwesomeIcon className=\"mr-2\" icon={[\"fas\", \"home\"]} />\n                    Go to Homepage\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderSuccess;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport OrderSuccess from \"../components/orders/OrderSuccess\";\nimport CartContextProvider from \"../contexts/CartContext\";\n\nconst OrderSuccessPage = () => {\n    return (\n        <Layout>\n            <CartContextProvider>\n                <OrderSuccess />\n            </CartContextProvider>\n        </Layout>\n    );\n};\n\nexport default OrderSuccessPage;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nimport CustomModal from \"../generic/CustomModal\";\nimport CustomModalAlert from \"../generic/CustomModalAlert\";\n\nconst AddProduct = (props) => {\n    const form = useRef(null);\n    const { availableProduct } = props;\n\n    const [status, setStatus] = useState(undefined);\n    const [statusVariant, setStatusVariant] = useState(\"danger\");\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const border = isLightTheme ? theme.light.border : theme.dark.border;\n    const type = isLightTheme ? theme.light.type : theme.dark.type;\n    const btnTypeClass = isLightTheme\n        ? theme.light.btnTypeClass\n        : theme.dark.btnTypeClass;\n    const custom_text = isLightTheme\n        ? theme.light.custom_text\n        : theme.dark.custom_text;\n\n    const handleAddProduct = () => {\n        const API_URL = \"/addtoinventory/\";\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n            let object = {};\n            formData.forEach((value, key) => {\n                object[key] = value;\n            });\n            object[\"service_id\"] = localStorage.getItem(\"userID\");\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(object),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    setStatus(data.message);\n                    setStatusVariant(\"success\");\n                } else setStatus(data.message);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    };\n\n    return (\n        <>\n            {status && (\n                <CustomModalAlert\n                    status={status}\n                    setStatus={setStatus}\n                    variant={statusVariant}\n                    updateFlag={props.updateFlag}\n                />\n            )}\n            \n            <form ref={form} onSubmit={(e) => e.preventDefault()}>\n                <input\n                    type=\"hidden\"\n                    name=\"product_id\"\n                    value={availableProduct.product_id}\n                />\n\n                <div\n                    className={\"mt-2 mb-3 input-group mx-auto rounded\" + border}\n                    style={{ maxWidth: \"10rem\" }}\n                >\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text rounded-0\">\n                            <span className=\"font-weight-bold\">৳</span>\n                        </span>\n                    </div>\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"price\"\n                        placeholder=\"Price...\"\n                        className=\"form-control rounded-0\"\n                    />\n                </div>\n\n                <CustomModal\n                    actionVariant={type}\n                    modalTitle=\"Add Product\"\n                    handleAction={handleAddProduct}\n                    modalBody={\n                        <>\n                            Do you really want to add Product:{\" \"}\n                            <span className={custom_text}>\n                                {props.product_name}\n                            </span>{\" \"}\n                            into your inventory?\n                        </>\n                    }\n                    modalButtonClass={\"btn btn-sm\" + btnTypeClass}\n                    actionButtonBody={\n                        <>\n                            <FontAwesomeIcon\n                                className=\"fa-icon mr-2\"\n                                icon={[\"fas\", \"plus\"]}\n                            />\n                            Add\n                        </>\n                    }\n                >\n                    <FontAwesomeIcon\n                        className=\"fa-icon mr-2\"\n                        icon={[\"fas\", \"warehouse\"]}\n                    />\n                    Add to Inventory\n                </CustomModal>\n            </form>\n        </>\n    );\n};\n\nexport default AddProduct;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport emoji from \"react-easy-emoji\";\n\nimport Title from \"../generic/title\";\nimport AddProduct from \"./AddProduct\";\nimport SearchBar from \"../generic/SearchBar\";\nimport CustomCard from \"../generic/CustomCard\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst AvailableProducts = (props) => {\n    const [flag, setFlag] = useState(true);\n    const [status, setStatus] = useState(undefined);\n    const [searchData, setSearchData] = useState(\"\");\n    const [availableProducts, setAvailableProducts] = useState([]);\n\n    // Themes\n    const { isLightTheme, theme } = useContext(ThemeContext);\n    const syntax = isLightTheme ? theme.light.syntax : theme.dark.syntax;\n\n    useEffect(() => {\n        const API_URL = \"/availableProduct/\";\n\n        const loadData = async () => {\n            const bodyData = {\n                search_data: searchData,\n                service_id: localStorage.getItem(\"userID\"),\n            };\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(bodyData),\n                });\n\n                const data = await response.json();\n\n                if (!response.ok) setStatus(data.message);\n\n                setAvailableProducts(data.items);\n            } catch (error) {\n                setStatus(error);\n            }\n        };\n\n        loadData();\n    }, [flag, searchData]);\n\n    const updateFlag = () => setFlag(!flag);\n\n    const handleChange = (e) => setSearchData(e.target.value);\n\n    return (\n        <>\n            <h4 className={\"mb-5 text-center\" + syntax}>\n                Add to your Inventory\n            </h4>\n\n            <SearchBar\n                handleChange={handleChange}\n                placeholder=\"Search products....\"\n                searchBy=\"Search products by product name or company name\"\n            />\n\n            <h4 className={\"mb-5 text-center\" + syntax}>Available Products</h4>\n\n            <CustomCard\n                status={status}\n                setStatus={setStatus}\n                values={availableProducts}\n                cardBodyData={(availableProduct) => (\n                    <>\n                        <Card.Title>{availableProduct.product_name}</Card.Title>\n\n                        <div>\n                            <Title>Vat: </Title> {availableProduct.vat}%\n                            <br />\n                            <Title>Quantity: </Title> {availableProduct.qty}{\" \"}\n                            {availableProduct.unit}\n                            <br />\n                            <Title>Company: </Title>{\" \"}\n                            {availableProduct.company_name}\n                        </div>\n\n                        <AddProduct\n                            updateFlag={updateFlag}\n                            availableProduct={availableProduct}\n                            product_name={availableProduct.product_name}\n                        />\n                    </>\n                )}\n                noValueInfo={\n                    <>\n                        No new products to show to add to your inventory{\" \"}\n                        {emoji(\"☹\")}\n                    </>\n                }\n            />\n        </>\n    );\n};\n\nexport default AvailableProducts;\n","import React from \"react\";\n\nimport Layout from \"../components/generic/layout\";\nimport AvailableProducts from \"../components/products/AvailableProducts\";\n\nconst Home = () => {\n    return (\n        <Layout>\n            <AvailableProducts />\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./assets/styles/styles.scss\";\n\nimport SettingsContextProvider from \"./contexts/SettingsContext\";\nimport AuthenticationContextProvider from \"./contexts/AuthenticationContext\";\n\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport TestPage from \"./test/TestPage\";\nimport UserLogin from \"./pages/UserLogin\";\nimport OrderPage from \"./pages/OrderPage\";\nimport AreasPage from \"./pages/AreasPage\";\nimport HistoryPage from \"./pages/HistoryPage\";\nimport ShoppingCart from \"./pages/ShoppingCart\";\nimport CheckoutPage from \"./pages/CheckoutPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport StatisticsPage from \"./pages/StatisticsPage\";\nimport ServiceProviders from \"./pages/ServiceProviders\";\nimport UserRegistration from \"./pages/UserRegistration\";\nimport OrderDetailsPage from \"./pages/OrderDetailsPage\";\nimport EmployeeListPage from \"./pages/EmployeeListPage\";\nimport OrderSuccessPage from \"./pages/OrderSuccessPage\";\nimport AvailableProductPage from \"./pages/AvailableProductPage\";\n\nlibrary.add(far, fas, fab);\n\nconst App = () => {\n    // Console Developer Info\n    console.log(\n        `        %cProjectX`,\n        `color: #2980b9; font-weight: bold; font-family: helvetica; font-size: 2rem`\n    );\n    console.log(`\n            Developed By: \n\n        Shahriar Elahi Dhruvo\n        SWE, SUST\n        Mutasim Billah Toha\n        SWE, SUST\n        Jobayer Hossain Rowan\n        CSE, SUST\n    `);\n\n    return (\n        <Router>\n            <SettingsContextProvider>\n                <AuthenticationContextProvider>\n                    <Switch>\n                        <Route\n                            path=\"/service/provider/:id\"\n                            component={ServiceProviders}\n                        />\n                        <Route exact path=\"/orders\" component={OrderPage} />\n                        <Route\n                            exact\n                            path=\"/order/success/:order_id\"\n                            component={OrderSuccessPage}\n                        />\n                        <Route\n                            exact\n                            path=\"/order/details/:order_id\"\n                            component={OrderDetailsPage}\n                        />\n                        <Route\n                            exact\n                            path=\"/add/product\"\n                            component={AvailableProductPage}\n                        />\n                        <Route exact path=\"/areas\" component={AreasPage} />\n                        <Route\n                            exact\n                            path=\"/employee\"\n                            component={EmployeeListPage}\n                        />\n                        <Route\n                            exact\n                            path=\"/statistics\"\n                            component={StatisticsPage}\n                        />\n                        <Route\n                            exact\n                            path=\"/checkout\"\n                            component={CheckoutPage}\n                        />\n                        <Route exact path=\"/cart\" component={ShoppingCart} />\n                        <Route\n                            exact\n                            path=\"/registration\"\n                            component={UserRegistration}\n                        />\n                        <Route exact path=\"/login\" component={UserLogin} />\n                        <Route exact path=\"/profile\" component={Profile} />\n                        <Route exact path=\"/history\" component={HistoryPage} />\n                        <Route exact path=\"/test\" component={TestPage} />\n                        <Route exact path=\"/\" component={Home} />\n                        <Route component={NotFoundPage} />\n                    </Switch>\n                </AuthenticationContextProvider>\n            </SettingsContextProvider>\n        </Router>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}